{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/state/components/StateDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/state/components/StateDetail.vue","mtime":1668755880336},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF9zdGF0ZSA9IHJlcXVpcmUoIkAvYXBpL3N0YXRlIik7CnZhciBfYXBwID0gcmVxdWlyZSgiQC9zdG9yZS9tb2R1bGVzL2FwcCIpOwp2YXIgX3RhZ3NWaWV3ID0gcmVxdWlyZSgiQC9zdG9yZS9tb2R1bGVzL3RhZ3MtdmlldyIpOwp2YXIgX3JvdXRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vLi4vcm91dGVyIikpOwp2YXIgX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzID0gcmVxdWlyZSgidnVleC1tb2R1bGUtZGVjb3JhdG9ycyIpOwovLyBpbXBvcnQge2FycmFuZ2VMZXR0ZXJzfSBmcm9tICdAL3V0aWxzL2luZGV4JwpsZXQgZGVmYXVsdF8xID0gY2xhc3MgZGVmYXVsdF8xIGV4dGVuZHMgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlZ1ZSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlciguLi5hcmd1bWVudHMpOwogICAgdGhpcy5zaG93SW1hZ2VVcGxvYWQgPSBmYWxzZTsKICAgIHRoaXMucGFyYW1zID0gewogICAgICBzb21lX3BhcmFtczogInlvdXJfcGFyYW1zX2dvZXNfaGVyZSIKICAgIH07CiAgICB0aGlzLnBvc3RGb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgX3N0YXRlLmRlZmF1bHRTdGF0ZURhdGEpOwogICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB0aGlzLnJ1bGVzID0gewogICAgICBuYW1lOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIG1lc3NhZ2U6ICJQbGVhc2UgZW50ZXIgU3RhdGUgTmFtZSIsCiAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgIH0sIHsKICAgICAgICBwYXR0ZXJuOiAiXlthLXpBLVowLTlfXSIsCiAgICAgICAgbWVzc2FnZTogIlNwYWNlIG5vdCBhbGxvdyBhdCBzdGFydCBvZiBuYW1lIiwKICAgICAgICB0cmlnZ2VyOiBbImJsdXIiLCAiY2hhbmdlIl0KICAgICAgfV0KICAgIH07CiAgfQogIGdldCBsYW5nKCkgewogICAgcmV0dXJuIF9hcHAuQXBwTW9kdWxlLmxhbmd1YWdlOwogIH0KICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgdGhpcy5mZXRjaERhdGEocGFyc2VJbnQoaWQpKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucG9zdEZvcm0gPSBPYmplY3QuYXNzaWduKHt9LCBfc3RhdGUuZGVmYXVsdFN0YXRlRGF0YSk7CiAgICB9CiAgICAvLyBXaHkgbmVlZCB0byBtYWtlIGEgY29weSBvZiB0aGlzLiRyb3V0ZSBoZXJlPwogICAgLy8gQmVjYXVzZSBpZiB5b3UgZW50ZXIgdGhpcyBwYWdlIGFuZCBxdWlja2x5IHN3aXRjaCB0YWcsIG1heSBiZSBpbiB0aGUgZXhlY3V0aW9uIG9mIHRoaXMuc2V0VGFnc1ZpZXdUaXRsZSBmdW5jdGlvbiwgdGhpcy4kcm91dGUgaXMgbm8gbG9uZ2VyIHBvaW50aW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9QYW5KaWFDaGVuL3Z1ZS1lbGVtZW50LWFkbWluL2lzc3Vlcy8xMjIxCiAgICB0aGlzLnRlbXBUYWdWaWV3ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUpOwogIH0KICBhc3luYyBmZXRjaERhdGEoaWQpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCAoMCwgX3N0YXRlLmdldHN0YXRlQnlJZCkoaWQpOwogICAgICB0aGlzLnBvc3RGb3JtID0gZGF0YTsKICAgICAgLy8gSnVzdCBmb3IgdGVzdAogICAgICAvLyAgY29uc3QgdGl0bGUgPSB0aGlzLnBvc3RGb3JtLmVtYWlsCiAgICAgIC8vIFNldCB0YWdzdmlldyB0aXRsZQogICAgICAvLyAgdGhpcy5zZXRUYWdzVmlld1RpdGxlKHRpdGxlKQogICAgICAvLyBTZXQgcGFnZSB0aXRsZQogICAgICAvLyAgdGhpcy5zZXRQYWdlVGl0bGUodGl0bGUpCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgfQogIH0KICBzZXRUYWdzVmlld1RpdGxlKHRpdGxlKSB7CiAgICBjb25zdCB0YWdWaWV3ID0gdGhpcy50ZW1wVGFnVmlldzsKICAgIGlmICh0YWdWaWV3KSB7CiAgICAgIHRhZ1ZpZXcudGl0bGUgPSBgJHt0aXRsZX0tJHt0aGlzLnBvc3RGb3JtLmlkfWA7CiAgICAgIF90YWdzVmlldy5UYWdzVmlld01vZHVsZS51cGRhdGVWaXNpdGVkVmlldyh0YWdWaWV3KTsKICAgIH0KICB9CiAgc2V0UGFnZVRpdGxlKHRpdGxlKSB7CiAgICBkb2N1bWVudC50aXRsZSA9IGAke3RpdGxlfSAtICR7dGhpcy5wb3N0Rm9ybS5pZH1gOwogIH0KICBzdWJtaXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5wb3N0Rm9ybS52YWxpZGF0ZSh2YWxpZCA9PiB7CiAgICAgIGlmICh2YWxpZCkgewogICAgICAgIHRoaXMuc2F2ZUZvcm0oKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJTdWJtaXQgRXJyb3IhIik7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9KTsKICB9CiAgcmVzZXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5wb3N0Rm9ybS5yZXNldEZpZWxkcygpOwogIH0KICBhc3luYyBzYXZlRm9ybSgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIC8vIHRoaXMucG9zdEZvcm0uY291bnRyeUlkID0xOwogICAgICAvLyB0aGlzLnBvc3RGb3JtLm5hbWU9YXJyYW5nZUxldHRlcnModGhpcy5wb3N0Rm9ybS5uYW1lKTsKICAgICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgICAgYXdhaXQgKDAsIF9zdGF0ZS51cGRhdGVzdGF0ZSkodGhpcy5wb3N0Rm9ybS5pZCwgdGhpcy5wb3N0Rm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgICAgbWVzc2FnZTogIlN0YXRlIHNhdmVkIHN1Y2Nlc3NmdWxseSIsCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgIH0pOwogICAgICAgICAgX3JvdXRlci5kZWZhdWx0LnB1c2goIi9zdGF0ZS9saXN0Iik7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXdhaXQgKDAsIF9zdGF0ZS5hZGRzdGF0ZSkodGhpcy5wb3N0Rm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgOwogICAgICAgICAgLy8gaWYgKHJlcy5zdGF0dXNDb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJTdGF0ZSBzYXZlZCBzdWNjZXNzZnVsbHkiLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICB9KTsKICAgICAgICAgIF9yb3V0ZXIuZGVmYXVsdC5wdXNoKCIvc3RhdGUvbGlzdCIpOwogICAgICAgICAgLy8gfQogICAgICAgIH0pOwogICAgICAgIC8vIC5jYXRjaCgocmVzOiBhbnkpID0+IHsKICAgICAgICAvLyAgIGlmIChyZXMuc3RhdHVzQ29kZSA9PT0gNTAwKSB7CiAgICAgICAgLy8gICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIC8vICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIC8vICAgICAgIHRpdGxlOiAiV2FybmluZyIsCiAgICAgICAgLy8gICAgICAgbWVzc2FnZTogIlN0YXRlIG5hbWUgYWxyZWFkeSBleGlzdC4iLAogICAgICAgIC8vICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAvLyAgICAgICBkdXJhdGlvbjogMzAwMCwKICAgICAgICAvLyAgICAgfSk7CiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gfSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgLy8gdGhpcy4kbWVzc2FnZShlcnIubWVzc2FnZSkKICAgIH0KICB9Cn07CgooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlByb3ApKHsKICBkZWZhdWx0OiBmYWxzZQp9KV0sIGRlZmF1bHRfMS5wcm90b3R5cGUsICJpc0VkaXQiLCB2b2lkIDApOwooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFtfdnVleE1vZHVsZURlY29yYXRvcnMuQWN0aW9uXSwgZGVmYXVsdF8xLnByb3RvdHlwZSwgInNhdmVGb3JtIiwgbnVsbCk7CmRlZmF1bHRfMSA9ICgwLCBfdHNsaWIuX19kZWNvcmF0ZSkoWygwLCBfdnVlUHJvcGVydHlEZWNvcmF0b3IuQ29tcG9uZW50KSh7CiAgbmFtZTogIlppcENvZGVEZXRhaWwiLAogIGNvbXBvbmVudHM6IHt9Cn0pXSwgZGVmYXVsdF8xKTsKdmFyIF9kZWZhdWx0ID0gZGVmYXVsdF8xOwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":";;;;;;;;;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAMA,+BAAqB,SAAQA,yBAAG;EAAhCC;;IAEU,oBAAe,GAAG,KAAK;IACvB,WAAM,GAAG;MAAEC,WAAW,EAAE;IAAuB,CAAE;IACjD,aAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEC,uBAAgB,CAAC;IAC9C,YAAO,GAAG,KAAK;IAEf,UAAK,GAAG;MACdC,IAAI,EAAE,CACJ;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,yBAAyB;QAAEC,OAAO,EAAE;MAAM,CAAE,EACvE;QACEC,OAAO,EAAE,eAAe;QACxBF,OAAO,EAAE,kCAAkC;QAC3CC,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ;OAC3B;KAEJ;EAgHH;EA5GE,IAAIE,IAAI;IACN,OAAOC,cAAS,CAACC,QAAQ;EAC3B;EAEAC,OAAO;IACL,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,MAAMC,EAAE,GAAG,IAAI,CAACC,MAAM,CAACC,MAAM,IAAI,IAAI,CAACD,MAAM,CAACC,MAAM,CAACF,EAAE;MACtD,IAAI,CAACG,SAAS,CAACC,QAAQ,CAACJ,EAAE,CAAC,CAAC;KAC7B,MAAM;MACL,IAAI,CAACK,QAAQ,GAAGlB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEC,uBAAgB,CAAC;;IAErD;IACA;IACA;IACA,IAAI,CAACiB,WAAW,GAAGnB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACa,MAAM,CAAC;EACnD;EAEQ,MAAME,SAAS,CAACH,EAAU;IAChC,IAAI;MACF,MAAMO,IAAI,GAAQ,MAAM,uBAAY,EAACP,EAAE,CAAC;MACxC,IAAI,CAACK,QAAQ,GAAGE,IAAI;MACpB;MACA;MACA;MACA;MACA;MACA;KACD,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;;EAEtB;EAEQG,gBAAgB,CAACC,KAAa;IACpC,MAAMC,OAAO,GAAG,IAAI,CAACP,WAAW;IAChC,IAAIO,OAAO,EAAE;MACXA,OAAO,CAACD,KAAK,GAAG,GAAGA,KAAK,IAAI,IAAI,CAACP,QAAQ,CAACL,EAAE,EAAE;MAC9Cc,wBAAc,CAACC,iBAAiB,CAACF,OAAO,CAAC;;EAE7C;EAEQG,YAAY,CAACJ,KAAa;IAChCK,QAAQ,CAACL,KAAK,GAAG,GAAGA,KAAK,MAAM,IAAI,CAACP,QAAQ,CAACL,EAAE,EAAE;EACnD;EAEQkB,UAAU;IACf,IAAI,CAACC,KAAK,CAACd,QAAiB,CAACe,QAAQ,CAAEC,KAAK,IAAI;MAC/C,IAAIA,KAAK,EAAE;QACT,IAAI,CAACC,QAAQ,EAAE;OAChB,MAAM;QACLb,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC;QAC9B,OAAO,KAAK;;IAEhB,CAAC,CAAC;EACJ;EAEQa,SAAS;IACd,IAAI,CAACJ,KAAK,CAACd,QAAiB,CAACmB,WAAW,EAAE;EAC7C;EAGO,MAAMF,QAAQ;IACnB,IAAI;MAEF,IAAI,CAACG,OAAO,GAAG,IAAI;MACnB;MACA;MACA,IAAI,IAAI,CAAC1B,MAAM,EAAE;QACf,MAAM,sBAAW,EAAC,IAAI,CAACM,QAAQ,CAACL,EAAE,EAAE,IAAI,CAACK,QAAQ,CAAC,CAACqB,IAAI,CAAEC,GAAQ,IAAI;UACnE,IAAI,CAACC,OAAO,CAAC;YACXhB,KAAK,EAAE,SAAS;YAChBpB,OAAO,EAAE,0BAA0B;YACnCqC,IAAI,EAAE,SAAS;YACfC,QAAQ,EAAE;WACX,CAAC;UACFC,eAAM,CAACC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC,CAAC;OACH,MAAM;QAEL,MAAM,mBAAQ,EAAC,IAAI,CAAC3B,QAAQ,CAAC,CAC1BqB,IAAI,CAAEC,GAAQ,IAAI;UACjB;UACA;UACE,IAAI,CAACC,OAAO,CAAC;YACXhB,KAAK,EAAE,SAAS;YAChBpB,OAAO,EAAE,0BAA0B;YACnCqC,IAAI,EAAE,SAAS;YACfC,QAAQ,EAAE;WACX,CAAC;UACFC,eAAM,CAACC,IAAI,CAAC,aAAa,CAAC;UAC5B;QACF,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;KAEL,CAAC,OAAOxB,GAAG,EAAE;MACZ,IAAI,CAACiB,OAAO,GAAG,KAAK;MACpB;;EAEJ;CACD;;AA/H2B,wBAAzB,8BAAI,EAAC;EAAEQ,OAAO,EAAE;AAAK,CAAE,CAAC,yCAA0B;AA+EnD,wBADCC,4BAAM,yCAgDN;AA/HHC,oCAJC,mCAAS,EAAC;EACT7C,IAAI,EAAE,eAAe;EACrB8C,UAAU,EAAE;CACb,CAAC,aAiID;AAAA","names":["Vue","constructor","some_params","Object","assign","defaultStateData","name","required","message","trigger","pattern","lang","AppModule","language","created","isEdit","id","$route","params","fetchData","parseInt","postForm","tempTagView","data","err","console","error","setTagsViewTitle","title","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","$refs","validate","valid","saveForm","resetForm","resetFields","loading","then","res","$notify","type","duration","router","push","default","Action","default_1","components"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/state/components/StateDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport {\n  defaultStateData,\n  addstate,\n  updatestate,\n  getstateById,\n} from \"@/api/state\";\nimport { AppModule } from \"@/store/modules/app\";\nimport { TagsViewModule, ITagView } from \"@/store/modules/tags-view\";\nimport { Form } from \"element-ui\";\nimport router from \"../../../router\";\nimport { Action } from \"vuex-module-decorators\";\n// import {arrangeLetters} from '@/utils/index'\n\n@Component({\n  name: \"ZipCodeDetail\",\n  components: {},\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private showImageUpload = false;\n  private params = { some_params: \"your_params_goes_here\" };\n  private postForm = Object.assign({}, defaultStateData);\n  private loading = false;\n\n  private rules = {\n    name: [\n      { required: true, message: \"Please enter State Name\", trigger: \"blur\" },\n      {\n        pattern: \"^[a-zA-Z0-9_]\",\n        message: \"Space not allow at start of name\",\n        trigger: [\"blur\", \"change\"],\n      },\n    ],\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language;\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id;\n      this.fetchData(parseInt(id));\n    } else {\n      this.postForm = Object.assign({}, defaultStateData);\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route);\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getstateById(id);\n      this.postForm = data;\n      // Just for test\n      //  const title = this.postForm.email\n      // Set tagsview title\n      //  this.setTagsViewTitle(title)\n      // Set page title\n      //  this.setPageTitle(title)\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView;\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`;\n      TagsViewModule.updateVisitedView(tagView);\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`;\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm();\n      } else {\n        console.error(\"Submit Error!\");\n        return false;\n      }\n    });\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields();\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      \n      this.loading = true;\n      // this.postForm.countryId =1;\n      // this.postForm.name=arrangeLetters(this.postForm.name);\n      if (this.isEdit) {\n        await updatestate(this.postForm.id, this.postForm).then((res: any) => {\n          this.$notify({\n            title: \"Success\",\n            message: \"State saved successfully\",\n            type: \"success\",\n            duration: 2000,\n          });\n          router.push(\"/state/list\");\n        });\n      } else {\n        \n        await addstate(this.postForm)\n          .then((res: any) => {\n            ;\n            // if (res.statusCode === 200) {\n              this.$notify({\n                title: \"Success\",\n                message: \"State saved successfully\",\n                type: \"success\",\n                duration: 2000,\n              });\n              router.push(\"/state/list\");\n            // }\n          })\n          // .catch((res: any) => {\n          //   if (res.statusCode === 500) {\n          //     this.loading = false;\n          //     this.$notify({\n          //       title: \"Warning\",\n          //       message: \"State name already exist.\",\n          //       type: \"warning\",\n          //       duration: 3000,\n          //     });\n          //   }\n          // });\n      }\n    } catch (err) {\n      this.loading = false;\n      // this.$message(err.message)\n    }\n  }\n}\n"]}]}