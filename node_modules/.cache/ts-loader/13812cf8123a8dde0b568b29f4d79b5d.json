{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/store/modules/admin.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/store/modules/admin.ts","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7CnZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCA9IHJlcXVpcmUoIi9ob21lL2FsZ29vY2Vhbi9EZXNrdG9wL0FPVC1Qcm9qZWN0L215dmFybmktYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5BZG1pbk1vZHVsZSA9IHZvaWQgMDsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIik7CnZhciBfdHNsaWIgPSByZXF1aXJlKCJ0c2xpYiIpOwp2YXIgX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzID0gcmVxdWlyZSgidnVleC1tb2R1bGUtZGVjb3JhdG9ycyIpOwp2YXIgX2FkbWlucyA9IHJlcXVpcmUoIkAvYXBpL2FkbWlucyIpOwp2YXIgX2Nvb2tpZXMgPSByZXF1aXJlKCJAL3V0aWxzL2Nvb2tpZXMiKTsKdmFyIF9yb3V0ZXIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJAL3JvdXRlciIpKTsKdmFyIF9wZXJtaXNzaW9uID0gcmVxdWlyZSgiLi9wZXJtaXNzaW9uIik7CnZhciBfdGFnc1ZpZXcgPSByZXF1aXJlKCIuL3RhZ3MtdmlldyIpOwp2YXIgX3N0b3JlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL3N0b3JlIikpOwpsZXQgQWRtaW4gPSBjbGFzcyBBZG1pbiBleHRlbmRzIF92dWV4TW9kdWxlRGVjb3JhdG9ycy5WdWV4TW9kdWxlIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICB0aGlzLnRva2VuID0gKDAsIF9jb29raWVzLmdldFRva2VuKSgpIHx8ICcnOwogICAgdGhpcy5uYW1lID0gJyc7CiAgICB0aGlzLmF2YXRhciA9ICcnOwogICAgdGhpcy5yb2xlcyA9IFtdOwogICAgdGhpcy5lbWFpbCA9ICcnOwogICAgdGhpcy5pZCA9IDA7CiAgfQogIFNFVF9UT0tFTih0b2tlbikgewogICAgdGhpcy50b2tlbiA9IHRva2VuOwogIH0KICBTRVRfTkFNRShuYW1lKSB7CiAgICB0aGlzLm5hbWUgPSBuYW1lOwogIH0KICBTRVRfQVZBVEFSKGF2YXRhcikgewogICAgdGhpcy5hdmF0YXIgPSBhdmF0YXI7CiAgfQogIFNFVF9JRChpZCkgewogICAgdGhpcy5pZCA9IGlkOwogIH0KICBTRVRfUk9MRVMocm9sZXMpIHsKICAgIHRoaXMucm9sZXMgPSByb2xlczsKICB9CiAgU0VUX0VNQUlMKGVtYWlsKSB7CiAgICB0aGlzLmVtYWlsID0gZW1haWw7CiAgfQogIGFzeW5jIExvZ2luKGFkbWluSW5mbykgewogICAgbGV0IHsKICAgICAgZW1haWwsCiAgICAgIHBhc3N3b3JkCiAgICB9ID0gYWRtaW5JbmZvOwogICAgZW1haWwgPSBlbWFpbC50cmltKCk7CiAgICB0cnkgewogICAgICB2YXIgZGF0YSA9IGF3YWl0ICgwLCBfYWRtaW5zLmxvZ2luKSh7CiAgICAgICAgZW1haWwsCiAgICAgICAgcGFzc3dvcmQKICAgICAgfSk7CiAgICAgICgwLCBfY29va2llcy5zZXRUb2tlbikoZGF0YS5hY2Nlc3NUb2tlbik7CiAgICAgIHRoaXMuU0VUX1RPS0VOKGRhdGEuYWNjZXNzVG9rZW4pOwogICAgICByZXR1cm4gYXdhaXQgKDAsIF9hZG1pbnMuZ2V0QWRtaW5JbmZvKSh7fSk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICB0aGlzLlJlc2V0VG9rZW4oKTsKICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTsKICAgIH0KICB9CiAgUmVzZXRUb2tlbigpIHsKICAgICgwLCBfY29va2llcy5yZW1vdmVUb2tlbikoKTsKICAgIHRoaXMuU0VUX1RPS0VOKCcnKTsKICAgIHRoaXMuU0VUX1JPTEVTKFtdKTsKICB9CiAgYXN5bmMgR2V0QWRtaW5JbmZvKCkgewogICAgaWYgKHRoaXMudG9rZW4gPT09ICcnKSB7CiAgICAgIHRocm93IEVycm9yKCdHZXRBZG1pbkluZm86IHRva2VuIGlzIHVuZGVmaW5lZCEnKTsKICAgIH0KICAgIGNvbnN0IGRhdGEgPSBhd2FpdCAoMCwgX2FkbWlucy5nZXRBZG1pbkluZm8pKHt9KTsKICAgIGlmICghZGF0YSkgewogICAgICB0aHJvdyBFcnJvcignVmVyaWZpY2F0aW9uIGZhaWxlZCwgcGxlYXNlIExvZ2luIGFnYWluLicpOwogICAgfQogICAgLy8gLy8gcm9sZXMgbXVzdCBiZSBhIG5vbi1lbXB0eSBhcnJheQogICAgLy8gaWYgKCFyb2xlcyB8fCByb2xlcy5sZW5ndGggPD0gMCkgewogICAgLy8gICB0aHJvdyBFcnJvcignR2V0QWRtaW5JbmZvOiByb2xlcyBtdXN0IGJlIGEgbm9uLW51bGwgYXJyYXkhJykKICAgIC8vIH0KICAgIHRoaXMuU0VUX1JPTEVTKFtkYXRhLmFkbWluc1JvbGUubmFtZV0pOwogICAgdGhpcy5TRVRfTkFNRShkYXRhLmZ1bGxOYW1lKTsKICAgIHRoaXMuU0VUX0FWQVRBUihkYXRhLmF2YXRhciA/IGRhdGEuYXZhdGFyIDogJycpOwogICAgdGhpcy5TRVRfSUQoZGF0YS5pZCk7CiAgICB0aGlzLlNFVF9FTUFJTChkYXRhLmVtYWlsKTsKICAgIHJldHVybiBkYXRhOwogIH0KICBhc3luYyBDaGFuZ2VSb2xlcyhyb2xlKSB7CiAgICAvLyBEeW5hbWljYWxseSBtb2RpZnkgcGVybWlzc2lvbnMKICAgIGNvbnN0IHRva2VuID0gcm9sZSArICctdG9rZW4nOwogICAgdGhpcy5TRVRfVE9LRU4odG9rZW4pOwogICAgKDAsIF9jb29raWVzLnNldFRva2VuKSh0b2tlbik7CiAgICBhd2FpdCB0aGlzLkdldEFkbWluSW5mbygpOwogICAgKDAsIF9yb3V0ZXIucmVzZXRSb3V0ZXIpKCk7CiAgICAvLyBHZW5lcmF0ZSBkeW5hbWljIGFjY2Vzc2libGUgcm91dGVzIGJhc2VkIG9uIHJvbGVzCiAgICBfcGVybWlzc2lvbi5QZXJtaXNzaW9uTW9kdWxlLkdlbmVyYXRlUm91dGVzKHRoaXMucm9sZXMpOwogICAgLy8gQWRkIGdlbmVyYXRlZCByb3V0ZXMKICAgIF9yb3V0ZXIuZGVmYXVsdC5hZGRSb3V0ZXMoX3Blcm1pc3Npb24uUGVybWlzc2lvbk1vZHVsZS5keW5hbWljUm91dGVzKTsKICAgIC8vIFJlc2V0IHZpc2l0ZWQgdmlld3MgYW5kIGNhY2hlZCB2aWV3cwogICAgX3RhZ3NWaWV3LlRhZ3NWaWV3TW9kdWxlLmRlbEFsbFZpZXdzKCk7CiAgfQogIGFzeW5jIExvZ091dCgpIHsKICAgIGlmICh0aGlzLnRva2VuID09PSAnJykgewogICAgICB0aHJvdyBFcnJvcignTG9nT3V0OiB0b2tlbiBpcyB1bmRlZmluZWQhJyk7CiAgICB9CiAgICBhd2FpdCAoMCwgX2FkbWlucy5sb2dvdXQpKCk7CiAgICAoMCwgX2Nvb2tpZXMucmVtb3ZlVG9rZW4pKCk7CiAgICAoMCwgX3JvdXRlci5yZXNldFJvdXRlcikoKTsKICAgIC8vIFJlc2V0IHZpc2l0ZWQgdmlld3MgYW5kIGNhY2hlZCB2aWV3cwogICAgX3RhZ3NWaWV3LlRhZ3NWaWV3TW9kdWxlLmRlbEFsbFZpZXdzKCk7CiAgICB0aGlzLlNFVF9UT0tFTignJyk7CiAgICB0aGlzLlNFVF9ST0xFUyhbXSk7CiAgfQp9OwooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFtfdnVleE1vZHVsZURlY29yYXRvcnMuTXV0YXRpb25dLCBBZG1pbi5wcm90b3R5cGUsICJTRVRfVE9LRU4iLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLk11dGF0aW9uXSwgQWRtaW4ucHJvdG90eXBlLCAiU0VUX05BTUUiLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLk11dGF0aW9uXSwgQWRtaW4ucHJvdG90eXBlLCAiU0VUX0FWQVRBUiIsIG51bGwpOwooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFtfdnVleE1vZHVsZURlY29yYXRvcnMuTXV0YXRpb25dLCBBZG1pbi5wcm90b3R5cGUsICJTRVRfSUQiLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLk11dGF0aW9uXSwgQWRtaW4ucHJvdG90eXBlLCAiU0VUX1JPTEVTIiwgbnVsbCk7CigwLCBfdHNsaWIuX19kZWNvcmF0ZSkoW192dWV4TW9kdWxlRGVjb3JhdG9ycy5NdXRhdGlvbl0sIEFkbWluLnByb3RvdHlwZSwgIlNFVF9FTUFJTCIsIG51bGwpOwooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFtfdnVleE1vZHVsZURlY29yYXRvcnMuQWN0aW9uXSwgQWRtaW4ucHJvdG90eXBlLCAiTG9naW4iLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIEFkbWluLnByb3RvdHlwZSwgIlJlc2V0VG9rZW4iLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIEFkbWluLnByb3RvdHlwZSwgIkdldEFkbWluSW5mbyIsIG51bGwpOwooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFtfdnVleE1vZHVsZURlY29yYXRvcnMuQWN0aW9uXSwgQWRtaW4ucHJvdG90eXBlLCAiQ2hhbmdlUm9sZXMiLCBudWxsKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIEFkbWluLnByb3RvdHlwZSwgIkxvZ091dCIsIG51bGwpOwpBZG1pbiA9ICgwLCBfdHNsaWIuX19kZWNvcmF0ZSkoWygwLCBfdnVleE1vZHVsZURlY29yYXRvcnMuTW9kdWxlKSh7CiAgZHluYW1pYzogdHJ1ZSwKICBzdG9yZTogX3N0b3JlLmRlZmF1bHQsCiAgbmFtZTogJ2FkbWluJwp9KV0sIEFkbWluKTsKY29uc3QgQWRtaW5Nb2R1bGUgPSAoMCwgX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLmdldE1vZHVsZSkoQWRtaW4pOwpleHBvcnRzLkFkbWluTW9kdWxlID0gQWRtaW5Nb2R1bGU7"},{"version":3,"mappings":"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","names":["Admin","VuexModule","constructor","SET_TOKEN","token","SET_NAME","name","SET_AVATAR","avatar","SET_ID","id","SET_ROLES","roles","SET_EMAIL","email","Login","adminInfo","password","trim","data","accessToken","error","ResetToken","Error","GetAdminInfo","adminsRole","fullName","ChangeRoles","role","PermissionModule","GenerateRoutes","router","addRoutes","dynamicRoutes","TagsViewModule","delAllViews","LogOut","Mutation","Action","dynamic","store","AdminModule"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/store/modules/admin.ts"],"sourcesContent":["import { VuexModule, Module, Action, Mutation, getModule } from 'vuex-module-decorators'\nimport { login, logout, getAdminInfo } from '@/api/admins'\nimport { getToken, setToken, removeToken } from '@/utils/cookies'\nimport router, { resetRouter } from '@/router'\nimport { PermissionModule } from './permission'\nimport { TagsViewModule } from './tags-view'\nimport store from '@/store'\n\nexport interface IAdminState {\n  token: string\n  name: string\n  avatar: string\n  roles: string[]\n  email: string\n}\n\n@Module({ dynamic: true, store, name: 'admin' })\nclass Admin extends VuexModule implements IAdminState {\n  public token = getToken() || ''\n  public name = ''\n  public avatar = ''\n  public roles: string[] = []\n  public email = ''\n  public id = 0\n\n  @Mutation\n  private SET_TOKEN(token: string) {\n    this.token = token\n  }\n\n  @Mutation\n  private SET_NAME(name: string) {\n    this.name = name\n  }\n\n  @Mutation\n  private SET_AVATAR(avatar: string) {\n    this.avatar = avatar\n  }\n\n  @Mutation\n  private SET_ID(id: number) {\n    this.id = id\n  }\n\n  @Mutation\n  private SET_ROLES(roles: string[]) {\n    this.roles = roles\n  }\n\n  @Mutation\n  private SET_EMAIL(email: string) {\n    this.email = email\n  }\n\n  @Action\n  public async Login(adminInfo: { email: string, password: string }) {\n    let { email, password } = adminInfo\n    email = email.trim()\n\n    try {\n      var data: any = await login({ email, password })\n      setToken(data.accessToken)\n      this.SET_TOKEN(data.accessToken)\n      return await getAdminInfo({})\n    } catch (error) {\n      this.ResetToken()\n      throw new Error(error)\n    }\n  }\n\n  @Action\n  public ResetToken() {\n    removeToken()\n    this.SET_TOKEN('')\n    this.SET_ROLES([])\n  }\n\n  @Action\n  public async GetAdminInfo() {\n    if (this.token === '') {\n      throw Error('GetAdminInfo: token is undefined!')\n    }\n    const data: any = await getAdminInfo({})\n    if (!data) {\n      throw Error('Verification failed, please Login again.')\n    }\n    // // roles must be a non-empty array\n    // if (!roles || roles.length <= 0) {\n    //   throw Error('GetAdminInfo: roles must be a non-null array!')\n    // }\n    this.SET_ROLES([data.adminsRole.name])\n    this.SET_NAME(data.fullName)\n    this.SET_AVATAR(data.avatar ? data.avatar : '')\n    this.SET_ID(data.id)\n    this.SET_EMAIL(data.email)\n    return data\n  }\n\n  @Action\n  public async ChangeRoles(role: string) {\n    // Dynamically modify permissions\n    const token = role + '-token'\n    this.SET_TOKEN(token)\n    setToken(token)\n    await this.GetAdminInfo()\n    resetRouter()\n    // Generate dynamic accessible routes based on roles\n    PermissionModule.GenerateRoutes(this.roles)\n    // Add generated routes\n    router.addRoutes(PermissionModule.dynamicRoutes)\n    // Reset visited views and cached views\n    TagsViewModule.delAllViews()\n  }\n\n  @Action\n  public async LogOut() {\n    if (this.token === '') {\n      throw Error('LogOut: token is undefined!')\n    }\n    await logout()\n    removeToken()\n    resetRouter()\n\n    // Reset visited views and cached views\n    TagsViewModule.delAllViews()\n    this.SET_TOKEN('')\n    this.SET_ROLES([])\n  }\n}\n\nexport const AdminModule = getModule(Admin)\n"]}]}