{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/validate.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/validate.ts","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmlzVmFsaWRVUkwgPSBleHBvcnRzLmlzVmFsaWRFbWFpbCA9IGV4cG9ydHMuaXNFeHRlcm5hbCA9IGV4cG9ydHMuaXNBcnJheSA9IHZvaWQgMDsKY29uc3QgaXNWYWxpZEVtYWlsID0gc3RyID0+IHsKICBjb25zdCB2YWxpZGF0ZUVtYWlsID0gL14oKFtePD4oKVtcXVxcLiw7OlxzQCJdKyhcLltePD4oKVtcXVxcLiw7OlxzQCJdKykqKXwoIi4rIikpQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XSl8KChbYS16QS1aXC0wLTldK1wuKStbYS16QS1aXXsyLH0pKSQvOwogIHJldHVybiB2YWxpZGF0ZUVtYWlsLnRlc3Qoc3RyKTsKfTsKZXhwb3J0cy5pc1ZhbGlkRW1haWwgPSBpc1ZhbGlkRW1haWw7CmNvbnN0IGlzRXh0ZXJuYWwgPSBwYXRoID0+IC9eKGh0dHBzPzp8bWFpbHRvOnx0ZWw6KS8udGVzdChwYXRoKTsKZXhwb3J0cy5pc0V4dGVybmFsID0gaXNFeHRlcm5hbDsKY29uc3QgaXNBcnJheSA9IGFyZyA9PiB7CiAgaWYgKHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAndW5kZWZpbmVkJykgewogICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmcpID09PSAnW29iamVjdCBBcnJheV0nOwogIH0KICByZXR1cm4gQXJyYXkuaXNBcnJheShhcmcpOwp9OwpleHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5Owpjb25zdCBpc1ZhbGlkVVJMID0gdXJsID0+IHsKICBjb25zdCByZWcgPSAvXihodHRwcz98ZnRwKTpcL1wvKFthLXpBLVowLTkuLV0rKDpbYS16QS1aMC05LiYlJC1dKykqQCkqKCgyNVswLTVdfDJbMC00XVswLTldfDFbMC05XXsyfXxbMS05XVswLTldPykoXC4oMjVbMC01XXwyWzAtNF1bMC05XXwxWzAtOV17Mn18WzEtOV0/WzAtOV0pKXszfXwoW2EtekEtWjAtOS1dK1wuKSpbYS16QS1aMC05LV0rXC4oY29tfGVkdXxnb3Z8aW50fG1pbHxuZXR8b3JnfGJpenxhcnBhfGluZm98bmFtZXxwcm98YWVyb3xjb29wfG11c2V1bXxbYS16QS1aXXsyfSkpKDpbMC05XSspKihcLygkfFthLXpBLVowLTkuLD8nXFwrJiUkIz1+Xy1dKykpKiQvOwogIHJldHVybiByZWcudGVzdCh1cmwpOwp9OwpleHBvcnRzLmlzVmFsaWRVUkwgPSBpc1ZhbGlkVVJMOw=="},{"version":3,"mappings":";;;;;;AAAO,MAAMA,YAAY,GAAIC,GAAW,IAAI;EAC1C,MAAMC,aAAa,GAAG,sJAAsJ;EAC5K,OAAOA,aAAa,CAACC,IAAI,CAACF,GAAG,CAAC;AAChC,CAAC;AAAA;AAEM,MAAMG,UAAU,GAAIC,IAAY,IAAK,yBAAyB,CAACF,IAAI,CAACE,IAAI,CAAC;AAAA;AAEzE,MAAMC,OAAO,GAAIC,GAAQ,IAAI;EAClC,IAAI,OAAOC,KAAK,CAACF,OAAO,KAAK,WAAW,EAAE;IACxC,OAAOG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,KAAK,gBAAgB;;EAEjE,OAAOC,KAAK,CAACF,OAAO,CAACC,GAAG,CAAC;AAC3B,CAAC;AAAA;AAEM,MAAMM,UAAU,GAAIC,GAAW,IAAI;EACxC,MAAMC,GAAG,GAAG,4TAA4T;EACxU,OAAOA,GAAG,CAACZ,IAAI,CAACW,GAAG,CAAC;AACtB,CAAC;AAAA","names":["isValidEmail","str","validateEmail","test","isExternal","path","isArray","arg","Array","Object","prototype","toString","call","isValidURL","url","reg"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/validate.ts"],"sourcesContent":["export const isValidEmail = (str: string) => {\n  const validateEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return validateEmail.test(str)\n}\n\nexport const isExternal = (path: string) => /^(https?:|mailto:|tel:)/.test(path)\n\nexport const isArray = (arg: any) => {\n  if (typeof Array.isArray === 'undefined') {\n    return Object.prototype.toString.call(arg) === '[object Array]'\n  }\n  return Array.isArray(arg)\n}\n\nexport const isValidURL = (url: string) => {\n  const reg = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\n  return reg.test(url)\n}\n"]}]}