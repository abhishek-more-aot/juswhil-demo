{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/banner.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/banner.ts","mtime":1672064999259},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVPcmRlciA9IGV4cG9ydHMudXBkYXRlQmFubmVyID0gZXhwb3J0cy5nZXRCYW5uZXJzID0gZXhwb3J0cy5nZXRCYW5uZXJJbmZvID0gZXhwb3J0cy5nZXRCYW5uZXJDb3VudCA9IGV4cG9ydHMuZ2V0QmFubmVyQnlJZCA9IGV4cG9ydHMuZ2V0QmFubmVyQnlFbWFpbCA9IGV4cG9ydHMuZGVsZXRlQmFubmVyID0gZXhwb3J0cy5kZWZhdWx0QmFubmVyRGF0YSA9IGV4cG9ydHMuYWRkQmFubmVyID0gdm9pZCAwOwp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKY29uc3QgZGVmYXVsdEJhbm5lckRhdGEgPSB7CiAgaWQ6IDAsCiAgZW5hYmxlZDogdHJ1ZSwKICBpbWFnZTogIiIsCiAgb3JkZXI6IG51bGwsCiAgbmFtZTogIiIKfTsKZXhwb3J0cy5kZWZhdWx0QmFubmVyRGF0YSA9IGRlZmF1bHRCYW5uZXJEYXRhOwpjb25zdCBnZXRCYW5uZXJzID0gcGFyYW1zID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL2Jhbm5lcnMnLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldEJhbm5lcnMgPSBnZXRCYW5uZXJzOwpjb25zdCBnZXRCYW5uZXJCeUlkID0gaWQgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvYmFubmVycy8ke2lkfWAsCiAgbWV0aG9kOiAnZ2V0Jwp9KTsKZXhwb3J0cy5nZXRCYW5uZXJCeUlkID0gZ2V0QmFubmVyQnlJZDsKY29uc3QgZ2V0QmFubmVySW5mbyA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvYmFubmVycy9tZScsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5nZXRCYW5uZXJJbmZvID0gZ2V0QmFubmVySW5mbzsKY29uc3QgZ2V0QmFubmVyQnlFbWFpbCA9IEJhbm5lcmVtYWlsID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2Jhbm5lcnMvJHtCYW5uZXJlbWFpbH1gLAogIG1ldGhvZDogJ2dldCcKfSk7CmV4cG9ydHMuZ2V0QmFubmVyQnlFbWFpbCA9IGdldEJhbm5lckJ5RW1haWw7CmNvbnN0IHVwZGF0ZUJhbm5lciA9IChpZCwgZGF0YSkgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvYmFubmVycy8ke2lkfWAsCiAgbWV0aG9kOiAncGF0Y2gnLAogIGRhdGEKfSk7CmV4cG9ydHMudXBkYXRlQmFubmVyID0gdXBkYXRlQmFubmVyOwpjb25zdCBkZWxldGVCYW5uZXIgPSBCYW5uZXJuYW1lID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2Jhbm5lcnMvJHtCYW5uZXJuYW1lfWAsCiAgbWV0aG9kOiAnZGVsZXRlJwp9KTsKZXhwb3J0cy5kZWxldGVCYW5uZXIgPSBkZWxldGVCYW5uZXI7CmNvbnN0IGFkZEJhbm5lciA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvYmFubmVycy8nLAogIG1ldGhvZDogJ3Bvc3QnLAogIGRhdGEKfSk7CmV4cG9ydHMuYWRkQmFubmVyID0gYWRkQmFubmVyOwpjb25zdCBnZXRCYW5uZXJDb3VudCA9IHBhcmFtcyA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9iYW5uZXJzL2NvdW50JywKICBtZXRob2Q6ICdnZXQnLAogIHBhcmFtcwp9KTsKZXhwb3J0cy5nZXRCYW5uZXJDb3VudCA9IGdldEJhbm5lckNvdW50Owpjb25zdCB1cGRhdGVPcmRlciA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvYmFubmVycy9vcmRlcicsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy51cGRhdGVPcmRlciA9IHVwZGF0ZU9yZGVyOw=="},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,iBAAiB,GAAgB;EAC5CC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;CACP;AAAA;AACM,MAAMC,UAAU,GAAIC,MAAW,IACpC,oBAAO,EAAC;EACNC,GAAG,EAAE,UAAU;EACfC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,aAAa,GAAIT,EAAU,IACtC,oBAAO,EAAC;EACNO,GAAG,EAAE,YAAYP,EAAE,EAAE;EACrBQ,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,aAAa,GAAIC,IAAS,IACrC,oBAAO,EAAC;EACNJ,GAAG,EAAE,aAAa;EAClBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMC,gBAAgB,GAAIC,WAAmB,IAClD,oBAAO,EAAC;EACNN,GAAG,EAAE,YAAYM,WAAW,EAAE;EAC9BL,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMM,YAAY,GAAG,CAACd,EAAU,EAAEW,IAAS,KAChD,oBAAO,EAAC;EACNJ,GAAG,EAAE,YAAYP,EAAE,EAAE;EACrBQ,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEG,MAAMI,YAAY,GAAIC,UAAkB,IAC7C,oBAAO,EAAC;EACNT,GAAG,EAAE,YAAYS,UAAU,EAAE;EAC7BR,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMS,SAAS,GAAIN,IAAS,IACjC,oBAAO,EAAC;EACNJ,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMO,cAAc,GAAIZ,MAAW,IACxC,oBAAO,EAAC;EACNC,GAAG,EAAE,gBAAgB;EACrBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMa,WAAW,GAAIR,IAAS,IACnC,oBAAO,EAAC;EACNJ,GAAG,EAAE,gBAAgB;EACrBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAC","names":["defaultBannerData","id","enabled","image","order","name","getBanners","params","url","method","getBannerById","getBannerInfo","data","getBannerByEmail","Banneremail","updateBanner","deleteBanner","Bannername","addBanner","getBannerCount","updateOrder"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/banner.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { IBannerData } from './types'\n\nexport const defaultBannerData: IBannerData = {\n  id: 0,\n  enabled: true,\n  image: \"\",\n  order: null,\n  name: \"\",\n}\nexport const getBanners = (params: any) =>\n  request({\n    url: '/banners',\n    method: 'get',\n    params\n  })\n\nexport const getBannerById = (id: number) =>\n  request({\n    url: `/banners/${id}`,\n    method: 'get'\n  })\n\nexport const getBannerInfo = (data: any) =>\n  request({\n    url: '/banners/me',\n    method: 'post',\n    data\n  })\n\nexport const getBannerByEmail = (Banneremail: string) =>\n  request({\n    url: `/banners/${Banneremail}`,\n    method: 'get'\n  })\n\nexport const updateBanner = (id: number, data: any) =>\n  request({\n    url: `/banners/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteBanner = (Bannername: string) =>\n  request({\n    url: `/banners/${Bannername}`,\n    method: 'delete'\n  })\n\nexport const addBanner = (data: any) =>\n  request({\n    url: '/banners/',\n    method: 'post',\n    data\n  })\n\nexport const getBannerCount = (params: any) =>\n  request({\n    url: '/banners/count',\n    method: 'get',\n    params\n  })\n\nexport const updateOrder = (data: any) =>\n  request({\n    url: '/banners/order',\n    method: 'post',\n    data\n  });"]}]}