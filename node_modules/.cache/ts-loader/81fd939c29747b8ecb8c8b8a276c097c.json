{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/components/UserContactDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/components/UserContactDetail.vue","mtime":1672064999299},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Vue","constructor","some_params","smail","acceptedFiles","rule","value","callback","field","$message","message","type","Error","Object","assign","defaultUserContactData","contactNumber","required","trigger","pattern","max","min","name","onCropUploadSuccess","jsonData","showImageUpload","image","files","data","datePickerOptions","disabledDate","date","toggleShow","onClose","lang","AppModule","language","created","userId","parseInt","$route","params","id","isEdit","fetchData","postForm","tempTagView","err","console","error","setTagsViewTitle","title","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","$refs","validate","valid","saveForm","resetForm","resetFields","loading","$notify","duration","router","push","default","Action","default_1","components","Dropzone","AvatarUpload","PanThumb"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/components/UserContactDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { isValidURL } from '@/utils/validate'\nimport {\n  getUserContactById,\n  defaultUserContactData,\n  updateUserContact,\n  addUserContact\n} from '@/api/usersContact'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport Dropzone from '@/components/Dropzone/index.vue'\nimport { uploadFile } from '@/api/common'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport moment from 'moment'\n\n@Component({\n  name: 'UserContactDetail',\n  components: {\n    Dropzone,\n    AvatarUpload,\n    PanThumb\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private validity: Date[] = [];\n  private roleList: any = [];\n  private planList: any = [];\n  private userId=0;\n  private typeList: any = [\n    'Agent',\n    'Development Officer',\n    'SBA',\n    'CLIA',\n    'Other'\n  ];\n\n   private showImageUpload = false\n  private image = 'https://stumpz.s3.ap-south-1.amazonaws.com/1611434872392-img.png'\n  private file='';\n  private params = { some_params: 'your_params_goes_here' }\n  private headers = { smail: '*_~' }\n   options:any={\n     acceptedFiles: 'image/*'\n   };\n\n   private onCropUploadSuccess(jsonData: any, field: string) {\n     this.showImageUpload = false\n     this.image = jsonData.files[field]\n   }\n\n   data() {\n     return {\n       datePickerOptions: {\n         disabledDate(date:any) {\n           return moment() >= date\n         }\n       }\n     }\n   }\n\n   //  private cropSuccess(imgDataUrl: string, field: string) {\n   //    this.image = imgDataUrl\n   //    const data = new FormData()\n   //    fetch(imgDataUrl)\n   //      .then((res) => res.blob())\n   //      .then((blob) => {\n   //        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n   //          type: 'image/png'\n   //        })\n   //        data.append('file', file)\n   //        uploadFile(data, (event: ProgressEvent) => {\n   //          console.log(event)\n   //        }).then((res: any) => {\n   //          this.postForm.featuredImage = res\n   //        })\n   //      })\n   //  }\n\n  private countryList: any = [];\n  private stateList: any = [];\n  private cityList: any = [];\n\n  private planName='';\n\n  private validateRequire = (rule: any, value: string, callback: Function) => {\n    if (value === '') {\n      if (rule.field === 'imageURL') {\n        this.$message({\n          message: 'Upload cover image is required',\n          type: 'error'\n        })\n      } else {\n        this.$message({\n          message: rule.field + ' is required',\n          type: 'error'\n        })\n      }\n      callback(new Error(rule.field + ' is required'))\n    } else {\n      callback()\n    }\n  };\n\n  //  private dropzoneSuccess(file: File, response: any) {\n  //\n  //     const data = new FormData()\n  //     data.append('file', file)\n  //     uploadFile(data, (event: ProgressEvent) => {\n  //       console.log(event)\n  //     }).then(res => {\n  //       this.postForm.termsAndCondition = res.toString()\n  //       console.log(res.toString())\n  //     })\n  //     this.$notify({\n  //       title: 'Success',\n  //       message: 'File saved successfully',\n  //       type: 'success',\n  //       duration: 2000\n  //     })\n  //     this.$message({ message: 'Upload success', type: 'success' })\n  //   }\n\n  private postForm = Object.assign({}, defaultUserContactData);\n  private loading = false;\n  private rules = {\n    contactNumber: [\n      {\n        required: true,\n        message: 'Please enter contact number',\n        trigger: 'blur'\n      },\n      {\n        trigger: ['blur', 'change'],\n        pattern: '(^[0-9]*$)',\n        message: 'Contact number should contain number only'\n      },\n      {\n        max: 10,\n        min: 10,\n        message: 'Length should be of 10 Digits',\n        trigger: ['blur', 'change']\n      }\n    ]\n  };\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    this.userId = parseInt(this.$route.params && this.$route.params.id)\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultUserContactData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n   private selectOptions = [\n     { name: 'Male', value: 'male' },\n     { name: 'Female', value: 'female' },\n     { name: 'Others', value: 'others' }\n   ];\n\n   private async fetchData(id: number) {\n     try {\n       const data: any = await getUserContactById(id)\n       this.postForm = data\n     } catch (err) {\n       console.error(err)\n     }\n   }\n\n   private setTagsViewTitle(title: string) {\n     const tagView = this.tempTagView\n     if (tagView) {\n       tagView.title = `${title}-${this.postForm.id}`\n       TagsViewModule.updateVisitedView(tagView)\n     }\n   }\n\n   private setPageTitle(title: string) {\n     document.title = `${title} - ${this.postForm.id}`\n   }\n\n   private submitForm() {\n     (this.$refs.postForm as Form).validate(valid => {\n       if (valid) {\n         this.saveForm()\n       } else {\n         console.error('Submit Error!')\n         return false\n       }\n     })\n   }\n\n   private resetForm() {\n     (this.$refs.postForm as Form).resetFields()\n   }\n\n  @Action\n   public async saveForm() {\n     try {\n       this.loading = true\n       if (this.isEdit) {\n         await updateUserContact(this.postForm.id, this.postForm)\n       } else {\n         await addUserContact(this.postForm)\n       }\n\n       this.$notify({\n         title: 'Success',\n         message: 'Contact saved successfully',\n         type: 'success',\n         duration: 2000\n       })\n       router.push('/userContact/list/')\n     } catch (err) {\n       this.loading = false\n       console.error(err)\n     }\n   }\n}\n"]}]}