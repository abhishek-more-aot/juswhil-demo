{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/thread-loader/dist/cjs.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--14-3!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/award/components/AwardDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/award/components/AwardDetail.vue","mtime":1673613292342},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/thread-loader/dist/cjs.js","mtime":1655274288448},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF9hd2FyZCA9IHJlcXVpcmUoIkAvYXBpL2F3YXJkIik7CnZhciBfYXBwID0gcmVxdWlyZSgiQC9zdG9yZS9tb2R1bGVzL2FwcCIpOwp2YXIgX3RhZ3NWaWV3ID0gcmVxdWlyZSgiQC9zdG9yZS9tb2R1bGVzL3RhZ3MtdmlldyIpOwp2YXIgX3JvdXRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9yb3V0ZXIiKSk7CnZhciBfdnVleE1vZHVsZURlY29yYXRvcnMgPSByZXF1aXJlKCJ2dWV4LW1vZHVsZS1kZWNvcmF0b3JzIik7CnZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvY29tcG9uZW50cy9QYW5UaHVtYi9pbmRleC52dWUiKSk7CnZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvRmlsZVVwbG9hZC9pbmRleC52dWUiKSk7CnZhciBfY29tbW9uID0gcmVxdWlyZSgiQC9hcGkvY29tbW9uIik7CnZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvQXZhdGFyVXBsb2FkL2luZGV4LnZ1ZSIpKTsKdmFyIF9pbmRleDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvY29tcG9uZW50cy9VcGxvYWRJbWFnZS9pbmRleC52dWUiKSk7Ci8vIGltcG9ydCB7IGdldFVzZXJzIH0gZnJvbSAnQC9hcGkvdXNlcnMnCgpsZXQgZGVmYXVsdF8xID0gY2xhc3MgZGVmYXVsdF8xIGV4dGVuZHMgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlZ1ZSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlciguLi5hcmd1bWVudHMpOwogICAgdGhpcy5wbGF0Zm9ybUxpc3QgPSBbImFuZHJvaWQiLCAiaW9zIl07CiAgICB0aGlzLnBhZ2VMaXN0ID0gWyJIb21lIl07CiAgICB0aGlzLmxpbWl0bnVtID0gMTsKICAgIHRoaXMuZmlsZUxpc3QgPSBbXTsKICAgIHRoaXMuYXBwVmVyc2lvbkxpc3QgPSBbXTsKICAgIHRoaXMuaW1hZ2UgPSAiIjsKICAgIHRoaXMuc2hvd0ltYWdlVXBsb2FkID0gZmFsc2U7CiAgICB0aGlzLmZvcm1EYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgX2F3YXJkLmRlZmF1bHRBd2FyZERhdGEpOwogICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB0aGlzLnJ1bGVzID0gewogICAgICB0aXRsZTogW3sKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0cmlnZ2VyOiAiYmx1ciIsCiAgICAgICAgbWVzc2FnZTogIlRpdGxlIGlzIHJlcXVpcmVkIgogICAgICB9LCB7CiAgICAgICAgbWluOiAzLAogICAgICAgIG1heDogNTAsCiAgICAgICAgbWVzc2FnZTogIkxlbmd0aCBzaG91bGQgYmUgMyB0byA1MCIsCiAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgIH1dLAogICAgICBtZXNzYWdlOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHRyaWdnZXI6ICJibHVyIiwKICAgICAgICBtZXNzYWdlOiAiTWVzc2FnZSBpcyByZXF1aXJlZCIKICAgICAgfSwgewogICAgICAgIG1pbjogMywKICAgICAgICBtZXNzYWdlOiAiTGVuZ3RoIHNob3VsZCBiZSBncmVhdGVyIHRoYW4gMyIsCiAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgIH1dLAogICAgICBzb3VyY2U6IFt7CiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHJpZ2dlcjogImJsdXIiLAogICAgICAgIG1lc3NhZ2U6ICJTb3VyY2UgaXMgcmVxdWlyZWQiCiAgICAgIH1dLAogICAgICBpbWFnZTogW3sKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0cmlnZ2VyOiAiYmx1ciIsCiAgICAgICAgbWVzc2FnZTogIkltYWdlIGlzIHJlcXVpcmVkIgogICAgICB9XSwKICAgICAgcGFnZTogW3sKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgfV0sCiAgICAgIGxpbms6IFt7CiAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgIH0sIHsKICAgICAgICBwYXR0ZXJuOiAvWy1hLXpBLVowLTlAJS5fK34jPV17MSwyNTZ9XC5bYS16QS1aMC05KCldezEsNn1cYihbLWEtekEtWjAtOSgpQDolXysufiM/Ji8vPV0qKS8sCiAgICAgICAgbWVzc2FnZTogIkludmFsaWQgVVJMIGZvcm1hdCIsCiAgICAgICAgdHJpZ2dlcjogWyJibHVyIiwgImNoYW5nZSJdCiAgICAgIH1dCiAgICB9OwogICAgLy8gcHJpdmF0ZSBzZW5kVG9BbGxUb2dnbGVkKCkgewogICAgLy8gICBpZiAodGhpcy5mb3JtRGF0YS5zZW5kVG9BbGwpIHsKICAgIC8vICAgICB0aGlzLiRjb25maXJtKAogICAgLy8gICAgICAgJ0FyZSB5b3Ugc3VyZSB3YW50IHRvIHNlbmQgbm90aWZpY2F0aW9uIHRvIEFsbCB1c2Vycz8nLAogICAgLy8gICAgICAgJ0F0dGVudGlvbiEnLAogICAgLy8gICAgICAgewogICAgLy8gICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogIlllcywgSSBrbm93IHdoYXQgSSdtIGRvaW5nIiwKICAgIC8vICAgICAgICAgY29uZmlybUJ1dHRvbkNsYXNzOiAnZWwtYnV0dG9uLS1zdWNjZXNzJywKICAgIC8vICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogdGhpcy4kdGMoJ3RhYmxlLmNhbmNlbCcpLAogICAgLy8gICAgICAgICBjYW5jZWxCdXR0b25DbGFzczogJ2VsLWJ1dHRvbi0tZGFuZ2VyJywKICAgIC8vICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgLy8gICAgICAgfQogICAgLy8gICAgICkKICAgIC8vICAgICAgIC50aGVuKChjb25maXJtKSA9PiB7CiAgICAvLyAgICAgICAgIC8vIGxldCBpdCBjb25maXJtCiAgICAvLyAgICAgICAgIC8vIGNsZWFyIG90aGVyIGRyb3Bkb3ducwogICAgLy8gICAgICAgICB0aGlzLmZvcm1EYXRhLmNvdW50cnlJZCA9IG51bGwKICAgIC8vICAgICAgICAgdGhpcy5mb3JtRGF0YS5zdGF0ZUlkID0gbnVsbAogICAgLy8gICAgICAgICB0aGlzLmZvcm1EYXRhLmNpdHlJZCA9IG51bGwKICAgIC8vICAgICAgICAgLy8gZGVsZXRlIHRoaXMuZm9ybURhdGEuY291bnRyeQogICAgLy8gICAgICAgICAvLyBkZWxldGUgdGhpcy5mb3JtRGF0YS5zdGF0ZQogICAgLy8gICAgICAgICAvLyBkZWxldGUgdGhpcy5mb3JtRGF0YS5jaXR5CiAgICAvLyAgICAgICB9KQogICAgLy8gICAgICAgLmNhdGNoKChfKSA9PiB7CiAgICAvLyAgICAgICAgIHRoaXMuZm9ybURhdGEuc2VuZFRvQWxsID0gZmFsc2UKICAgIC8vICAgICAgIH0pCiAgICAvLyAgIH0KICAgIC8vIH0KICB9CgogIHVwZGF0ZUltYWdlKHJlcykgewogICAgdGhpcy5mb3JtRGF0YS5pbWFnZSA9IHJlczsKICB9CiAgcmVtb3ZlSW1hZ2UoKSB7CiAgICB0aGlzLmZvcm1EYXRhLmltYWdlID0gIiI7CiAgfQogIGdldCBsYW5nKCkgewogICAgcmV0dXJuIF9hcHAuQXBwTW9kdWxlLmxhbmd1YWdlOwogIH0KICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRBcHBWZXJzaW9uTGlzdCgpOwogICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgdGhpcy5mZXRjaERhdGEocGFyc2VJbnQoaWQpKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuZm9ybURhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBfYXdhcmQuZGVmYXVsdEF3YXJkRGF0YSk7CiAgICB9CiAgICAvLyBXaHkgbmVlZCB0byBtYWtlIGEgY29weSBvZiB0aGlzLiRyb3V0ZSBoZXJlPwogICAgLy8gQmVjYXVzZSBpZiB5b3UgZW50ZXIgdGhpcyBwYWdlIGFuZCBxdWlja2x5IHN3aXRjaCB0YWcsIG1heSBiZSBpbiB0aGUgZXhlY3V0aW9uIG9mIHRoaXMuc2V0VGFnc1ZpZXdUaXRsZSBmdW5jdGlvbiwgdGhpcy4kcm91dGUgaXMgbm8gbG9uZ2VyIHBvaW50aW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9QYW5KaWFDaGVuL3Z1ZS1lbGVtZW50LWFkbWluL2lzc3Vlcy8xMjIxCiAgICB0aGlzLnRlbXBUYWdWaWV3ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUpOwogIH0KICBhc3luYyBmZXRjaERhdGEoaWQpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCAoMCwgX2F3YXJkLmdldEF3YXJkQnlJZCkoaWQpOwogICAgICB0aGlzLnJlbmRlcktleSsrOwogICAgICB0aGlzLmZvcm1EYXRhID0gZGF0YTsKICAgICAgdGhpcy5pbWFnZSA9IGRhdGEuaW1hZ2U7CiAgICAgIGlmIChkYXRhLnN0YXRlSWQpIHsKICAgICAgICAvLyB0aGlzLmdldENpdHlMaXN0KGRhdGEuc3RhdGVJZCkKICAgICAgfQogICAgICAvLyBpZiAoZGF0YS5jaXR5SWQpIHsKICAgICAgLy8gICB0aGlzLmdldFBpbmNvZGVMaXN0KGRhdGEuY2l0eUlkKQogICAgICAvLyB9CiAgICAgIC8vIEp1c3QgZm9yIHRlc3QKICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLmZvcm1EYXRhLmRlc2NyaXB0aW9uID8gdGhpcy5mb3JtRGF0YS5kZXNjcmlwdGlvbiA6ICIiOwogICAgICAvLyBTZXQgdGFnc3ZpZXcgdGl0bGUKICAgICAgdGhpcy5zZXRUYWdzVmlld1RpdGxlKHRpdGxlKTsKICAgICAgLy8gU2V0IHBhZ2UgdGl0bGUKICAgICAgdGhpcy5zZXRQYWdlVGl0bGUodGl0bGUpOwogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIFByb21pc2UucmVqZWN0KGVycik7CiAgICB9CiAgfQogIGFzeW5jIHVwbG9hZFNlY3Rpb25GaWxlKHBhcmFtKSB7CiAgICB2YXIgZmlsZU9iaiA9IHBhcmFtLmZpbGU7CiAgICB2YXIgZm9ybSA9IG5ldyBGb3JtRGF0YSgpOwogICAgZm9ybS5hcHBlbmQoImZpbGUiLCBmaWxlT2JqKTsKICAgIGF3YWl0ICgwLCBfY29tbW9uLnVwbG9hZEZpbGUpKGZvcm0sIGV2ZW50ID0+IHsKICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgfSkudGhlbihyZXMgPT4gewogICAgICB0aGlzLmZvcm1EYXRhLmltYWdlID0gcmVzLnRvU3RyaW5nKCk7CiAgICB9KTsKICB9CiAgdXBsb2FkRmlsZUVycm9yKGVyciwgZmlsZSwgZmlsZUxpc3QpIHsKICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoInVwbG9hZCBmYWlsZWQhIik7CiAgfQogIGV4Y2VlZEZpbGUoZmlsZXMsIGZpbGVMaXN0KSB7CiAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCJPbmx5IHVwbG9hZCIgKyB0aGlzLmxpbWl0bnVtICsgIkZpbGVzIik7CiAgfQogIGhhbmRsZVJlbW92ZShmaWxlKSB7CiAgICB0aGlzLmZvcm1EYXRhLmltYWdlID0gIiI7CiAgICBjb25zdCB0ZW1wID0gdGhpcy4kcmVmcy51cGxvYWQ7CiAgICB0ZW1wLmNsZWFyRmlsZXMoKTsKICB9CiAgdXBsb2FkRmlsZVN1Y2Nlc3MocmVzcG9uc2UsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICBpZiAocmVzcG9uc2UuZGF0YS5lcnJvciA9PSAwKSB7CiAgICAgIGZpbGUucmVzcG9uc2UgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgIHRoaXMuZmlsZUxpc3QucHVzaChmaWxlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcG9uc2UuZGF0YS5tZXNzYWdlKTsgLy8gRmlsZSB1cGxvYWQgZXJyb3IgcHJvbXB0CiAgICB9CiAgfQoKICB0b2dnbGVTaG93KCkgewogICAgdGhpcy5zaG93SW1hZ2VVcGxvYWQgPSAhdGhpcy5zaG93SW1hZ2VVcGxvYWQ7CiAgfQogIG9uQ2xvc2UoKSB7CiAgICB0aGlzLnNob3dJbWFnZVVwbG9hZCA9IGZhbHNlOwogIH0KICBvbkNyb3BVcGxvYWRTdWNjZXNzKGpzb25EYXRhLCBmaWVsZCkgewogICAgdGhpcy5zaG93SW1hZ2VVcGxvYWQgPSBmYWxzZTsKICAgIHRoaXMuaW1hZ2UgPSBqc29uRGF0YS5maWxlc1tmaWVsZF07CiAgfQogIGNyb3BTdWNjZXNzKGltZ0RhdGFVcmwsIGZpZWxkKSB7CiAgICB0aGlzLmltYWdlID0gaW1nRGF0YVVybDsKICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgIGZldGNoKGltZ0RhdGFVcmwpLnRoZW4ocmVzID0+IHJlcy5ibG9iKCkpLnRoZW4oYmxvYiA9PiB7CiAgICAgIGNvbnN0IGZpbGUgPSBuZXcgRmlsZShbYmxvYl0sICJpbWcuIiArIGJsb2IudHlwZS5zcGxpdCgiLyIpWzFdLCB7CiAgICAgICAgdHlwZTogImltYWdlL3BuZyIKICAgICAgfSk7CiAgICAgIGRhdGEuYXBwZW5kKCJmaWxlIiwgZmlsZSk7CiAgICAgICgwLCBfY29tbW9uLnVwbG9hZEZpbGUpKGRhdGEsIGV2ZW50ID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7CiAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLmZvcm1EYXRhLmltYWdlID0gcmVzOwogICAgICB9KTsKICAgIH0pOwogIH0KICBzZXRUYWdzVmlld1RpdGxlKHRpdGxlKSB7CiAgICBjb25zdCB0YWdWaWV3ID0gdGhpcy50ZW1wVGFnVmlldzsKICAgIGlmICh0YWdWaWV3KSB7CiAgICAgIHRhZ1ZpZXcudGl0bGUgPSBgJHt0aXRsZX0tJHt0aGlzLmZvcm1EYXRhLmlkfWA7CiAgICAgIF90YWdzVmlldy5UYWdzVmlld01vZHVsZS51cGRhdGVWaXNpdGVkVmlldyh0YWdWaWV3KTsKICAgIH0KICB9CiAgc2V0UGFnZVRpdGxlKHRpdGxlKSB7CiAgICBkb2N1bWVudC50aXRsZSA9IGAke3RpdGxlfSAtICR7dGhpcy5mb3JtRGF0YS5pZH1gOwogIH0KICBzdWJtaXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5mb3JtRGF0YS52YWxpZGF0ZSh2YWxpZCA9PiB7CiAgICAgIGlmICh2YWxpZCkgewogICAgICAgIHRoaXMuc2F2ZUZvcm0oKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0pOwogIH0KICByZXNldEZvcm0oKSB7CiAgICB0aGlzLmZvcm1EYXRhLmltYWdlID0gIiI7CiAgICB0aGlzLiRyZWZzLmZvcm1EYXRhLnJlc2V0RmllbGRzKCk7CiAgICB0aGlzLnJlbmRlcktleS0tOwogICAgdGhpcy5maWxlTGlzdCA9IFtdOwogIH0KICBhc3luYyBzYXZlRm9ybSgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgIC8vIHRoaXMuZm9ybURhdGEuY291bnRyeSA9IHsgaWQ6IHRoaXMuZm9ybURhdGEuY291bnRyeUlkIH0KICAgICAgICAvLyB0aGlzLmZvcm1EYXRhLnN0YXRlID0geyBpZDogdGhpcy5mb3JtRGF0YS5zdGF0ZUlkIH0KICAgICAgICAvLyB0aGlzLmZvcm1EYXRhLmNpdHkgPSB7IGlkOiB0aGlzLmZvcm1EYXRhLmNpdHlJZCB9CiAgICAgICAgYXdhaXQgKDAsIF9hd2FyZC51cGRhdGVBd2FyZCkodGhpcy5mb3JtRGF0YS5pZCwgdGhpcy5mb3JtRGF0YSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXdhaXQgKDAsIF9hd2FyZC5jcmVhdGVBd2FyZCkodGhpcy5mb3JtRGF0YSk7CiAgICAgIH0KICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICB0aXRsZTogIlN1Y2Nlc3MiLAogICAgICAgIG1lc3NhZ2U6ICJBd2FyZCBzYXZlZCBzdWNjZXNzZnVsbHkiLAogICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KTsKICAgICAgX3JvdXRlci5kZWZhdWx0LnB1c2goIi9hd2FyZC9saXN0Iik7CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB9CiAgfQogIGFzeW5jIGdldEFwcFZlcnNpb25MaXN0KCkgewogICAgdHJ5IHsKICAgICAgdGhpcy5hcHBWZXJzaW9uTGlzdCA9IGF3YWl0ICgwLCBfY29tbW9uLmdldEFwcFZlcnNpb25zKSgpOwogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIFByb21pc2UucmVqZWN0KGVycik7CiAgICB9CiAgfQogIGltYWdlVXBsb2FkKGZpbGUpIHsKICAgIHRoaXMuZm9ybURhdGEuaW1hZ2UgPSBmaWxlLnJlc3BvbnNlOwogIH0KfTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbKDAsIF92dWVQcm9wZXJ0eURlY29yYXRvci5Qcm9wKSh7CiAgZGVmYXVsdDogZmFsc2UKfSldLCBkZWZhdWx0XzEucHJvdG90eXBlLCAiaXNFZGl0Iiwgdm9pZCAwKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIGRlZmF1bHRfMS5wcm90b3R5cGUsICJzYXZlRm9ybSIsIG51bGwpOwpkZWZhdWx0XzEgPSAoMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLkNvbXBvbmVudCkoewogIG5hbWU6ICJBd2FyZERldGFpbCIsCiAgY29tcG9uZW50czogewogICAgRmlsZVVwbG9hZDogX2luZGV4Mi5kZWZhdWx0LAogICAgUGFuVGh1bWI6IF9pbmRleC5kZWZhdWx0LAogICAgQXZhdGFyVXBsb2FkOiBfaW5kZXgzLmRlZmF1bHQsCiAgICBVcGxvYWRJbWFnZTogX2luZGV4NC5kZWZhdWx0CiAgfQp9KV0sIGRlZmF1bHRfMSk7CnZhciBfZGVmYXVsdCA9IGRlZmF1bHRfMTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},null]}