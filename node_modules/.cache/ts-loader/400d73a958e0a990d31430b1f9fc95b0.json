{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/unit/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/unit/list.vue","mtime":1668754947378},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF91bml0ID0gcmVxdWlyZSgiQC9hcGkvdW5pdCIpOwp2YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvUGFnaW5hdGlvbi9pbmRleC52dWUiKSk7CnZhciBfaW5kZXgyID0gcmVxdWlyZSgiQC91dGlscy9pbmRleCIpOwp2YXIgX2V4Y2VsID0gcmVxdWlyZSgiQC91dGlscy9leGNlbCIpOwp2YXIgX2luZGV4MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL0VuYWJsZWQvaW5kZXgudnVlIikpOwpsZXQgZGVmYXVsdF8xID0gY2xhc3MgZXh0ZW5kcyBfdnVlUHJvcGVydHlEZWNvcmF0b3IuVnVlIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICB0aGlzLnRhYmxlS2V5ID0gMDsKICAgIHRoaXMudG90YWwgPSAwOwogICAgdGhpcy5saXN0ID0gW107CiAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgICB0aGlzLnNob3dTb3J0aW5nT3B0aW9uID0gZmFsc2U7CiAgICB0aGlzLnJlbmRlckNvbXBvbmVudCA9IHRydWU7CiAgICB0aGlzLmxpc3RRdWVyeSA9IHsKICAgICAgcGFnZTogMSwKICAgICAgbGltaXQ6IDEwLAogICAgICBzb3J0OiAnaWQsREVTQycsCiAgICAgIGZpbHRlcjogewogICAgICAgIGVuYWJsZWQ6ICdlcScsCiAgICAgICAgbmFtZTogJyRjb250TCcsCiAgICAgICAgbXVsdGlwbGllcjogJ2VxJywKICAgICAgICBmaW5hbHVuaXRzOiAnJGNvbnRMJwogICAgICB9CiAgICB9OwogICAgdGhpcy5zb3J0T3B0aW9ucyA9IFt7CiAgICAgIGxhYmVsOiAnSUQgQXNjZW5kaW5nJywKICAgICAga2V5OiAnaWQsQVNDJwogICAgfSwgewogICAgICBsYWJlbDogJ0lEIERlc2NlbmRpbmcnLAogICAgICBrZXk6ICdpZCxERVNDJwogICAgfV07CiAgICB0aGlzLmVuYWJsZVR5cGVPcHRpb25zID0gW3sKICAgICAga2V5OiB0cnVlLAogICAgICB2YWx1ZTogJ0VuYWJsZScKICAgIH0sIHsKICAgICAga2V5OiBmYWxzZSwKICAgICAgdmFsdWU6ICdEaXNhYmxlZCcKICAgIH1dOwogIH0KICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfQogIGFzeW5jIGdldExpc3QoKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0ICgwLCBfdW5pdC5nZXRVbml0KSgoMCwgX2luZGV4Mi5nZXRRdWVyeSkodGhpcy5saXN0UXVlcnkpKTsKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhOwogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfQogIH0KICBoYW5kbGVGaWx0ZXIoKSB7CiAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMTsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0KICBoYW5kbGVEZWxldGUoZGF0YSkgewogICAgaWYgKGRhdGEpIHsKICAgICAgdGhpcy4kY29uZmlybSh0aGlzLiR0YygndGFibGUuZGVsZXRlQ29uZmlybWF0aW9uJywgdW5kZWZpbmVkLCB7CiAgICAgICAgbmFtZTogZGF0YS5uYW1lCiAgICAgIH0pLCB0aGlzLiR0YygndGFibGUuZGVsZXRlJyksIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy4kdGMoJ3RhYmxlLmRlbGV0ZScpLAogICAgICAgIGNvbmZpcm1CdXR0b25DbGFzczogJ2VsLWJ1dHRvbi0tZGFuZ2VyJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICgwLCBfdW5pdC5kZWxldGVVbml0KShkYXRhLmlkKS50aGVuKGRlbGV0ZWQgPT4gewogICAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHRjKCd0YWJsZS5kZWxldGVDYW5jZWxlZCcpCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KICBzb3J0Q2hhbmdlKGRhdGEpIHsKICAgIGNvbnN0IHsKICAgICAgcHJvcCwKICAgICAgb3JkZXIKICAgIH0gPSBkYXRhOwogICAgaWYgKHByb3ApIHsKICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9IGAke3Byb3B9LGAgKyAob3JkZXIgPT09ICdhc2NlbmRpbmcnID8gJ0FTQycgOiAnREVTQycpOwogICAgICB0aGlzLmhhbmRsZUZpbHRlcigpOwogICAgfQogIH0KICBhc3luYyBoYW5kbGVEb3dubG9hZChwYWlkKSB7CiAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IHRydWU7CiAgICBjb25zdCBmbGl0ZXJEYXRhID0gW107CiAgICBjb25zdCBwYWdlID0gdGhpcy5saXN0UXVlcnkucGFnZTsKICAgIGNvbnN0IGxpbWl0ID0gdGhpcy5saXN0UXVlcnkubGltaXQ7CiAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMTsKICAgIHRoaXMubGlzdFF1ZXJ5LmxpbWl0ID0gMTAwMDAwOwogICAgY29uc3QgZGF0YUFsbCA9IGF3YWl0ICgwLCBfdW5pdC5nZXRVbml0KSgoMCwgX2luZGV4Mi5nZXRRdWVyeSkodGhpcy5saXN0UXVlcnkpKTsKICAgIGNvbnN0IGxpc3RBbGwgPSBkYXRhQWxsLmRhdGE7CiAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gcGFnZTsKICAgIHRoaXMubGlzdFF1ZXJ5LmxpbWl0ID0gbGltaXQ7CiAgICAvLyB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsKICAgIC8vIGlmIChwYWlkKSB7CiAgICAvLyAgIGZsaXRlckRhdGEgPSBsaXN0QWxsLmZpbHRlcihsaXN0ID0+IHsKICAgIC8vICAgICByZXR1cm4gbmV3IERhdGUobGlzdC5wbGFuRXhpcGlyeURhdGUpID4gbmV3IERhdGUoKTsKICAgIC8vICAgfSk7CiAgICAvLyB9IGVsc2UgewogICAgLy8gICBmbGl0ZXJEYXRhID0gbGlzdEFsbC5maWx0ZXIobGlzdCA9PiB7CiAgICAvLyAgICAgcmV0dXJuIG5ldyBEYXRlKGxpc3QucGxhbkV4aXBpcnlEYXRlKSA8IG5ldyBEYXRlKCk7CiAgICAvLyAgIH0pOwogICAgLy8gfQogICAgY29uc3QgdEhlYWRlciA9IFsnaWQnLCAnZnVsbE5hbWUnLCAnZW1haWwnLCAnY29udGFjdE51bWJlcicsICd0eXBlJywgJ2lzTW9udGhseU5ld3NsZXR0ZXInLCAncGxhbkV4aXBpcnlEYXRlJ107CiAgICBjb25zdCBmaWx0ZXJWYWwgPSBbJ2lkJywgJ2Z1bGxOYW1lJywgJ2VtYWlsJywgJ2NvbnRhY3ROdW1iZXInLCAndHlwZScsICdpc01vbnRobHlOZXdzbGV0dGVyJywgJ3BsYW5FeGlwaXJ5RGF0ZSddOwogICAgY29uc3QgZGF0YSA9ICgwLCBfaW5kZXgyLmZvcm1hdEpzb24pKGZpbHRlclZhbCwgZmxpdGVyRGF0YSk7CiAgICAoMCwgX2V4Y2VsLmV4cG9ydEpzb24yRXhjZWwpKHRIZWFkZXIsIGRhdGEsIHRoaXMuJHRjKCdyb3V0ZS51c2VyTWFuYWdlbWVudC5Db25zdW1hYmxlLnRpdGxlJykpOwogICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICB9Cn07CmRlZmF1bHRfMSA9ICgwLCBfdHNsaWIuX19kZWNvcmF0ZSkoWygwLCBfdnVlUHJvcGVydHlEZWNvcmF0b3IuQ29tcG9uZW50KSh7CiAgbmFtZTogJ0NvbnN1bWFibGVMaXN0JywKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uOiBfaW5kZXguZGVmYXVsdCwKICAgIEVuYWJsZWQ6IF9pbmRleDMuZGVmYXVsdAogIH0KfSldLCBkZWZhdWx0XzEpOwp2YXIgX2RlZmF1bHQgPSBkZWZhdWx0XzE7CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"mappings":"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","names":["Vue","constructor","page","limit","sort","filter","enabled","name","multiplier","finalunits","label","key","value","created","getList","listLoading","data","listQuery","list","total","error","handleFilter","handleDelete","$confirm","$tc","undefined","confirmButtonText","confirmButtonClass","cancelButtonText","type","then","id","deleted","catch","$message","message","sortChange","prop","order","handleDownload","paid","downloadLoading","fliterData","dataAll","listAll","tHeader","filterVal","default_1","components","Pagination","Enabled"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/unit/list.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Vue } from 'vue-property-decorator'\nimport { getUnit, deleteUnit } from '@/api/unit'\nimport { IUnitData } from '@/api/types'\nimport Pagination from '@/components/Pagination/index.vue'\nimport { getQuery, formatJson } from '@/utils/index'\nimport { exportJson2Excel } from '@/utils/excel'\nimport Enabled from '@/components/Enabled/index.vue'\n\n@Component({\n  name: 'ConsumableList',\n  components: {\n    Pagination,\n    Enabled\n  }\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IUnitData[] = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: 'id,DESC',\n    filter: {\n      enabled: 'eq',\n      name: '$contL',\n      multiplier: 'eq',\n      finalunits: '$contL'\n\n    }\n  };\n\n  private sortOptions = [\n    { label: 'ID Ascending', key: 'id,ASC' },\n    { label: 'ID Descending', key: 'id,DESC' }\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: 'Enable' },\n    { key: false, value: 'Disabled' }\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList()\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true\n      const data: any = await getUnit(getQuery(this.listQuery))\n      this.list = data.data\n      this.total = data.total\n      this.listLoading = false\n    } catch (error) {\n      this.listLoading = false\n    }\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1\n    this.getList()\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        this.$tc('table.deleteConfirmation', undefined, { name: data.name }),\n        this.$tc('table.delete'),\n        {\n          confirmButtonText: this.$tc('table.delete'),\n          confirmButtonClass: 'el-button--danger',\n          cancelButtonText: 'Cancel',\n          type: 'error'\n        }\n      )\n        .then(() => {\n          deleteUnit(data.id).then(deleted => {\n            this.getList()\n          })\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: this.$tc('table.deleteCanceled')\n          })\n        })\n    }\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === 'ascending' ? 'ASC' : 'DESC')\n      this.handleFilter()\n    }\n  }\n\n  private async handleDownload(paid: boolean) {\n    this.downloadLoading = true\n    const fliterData: any = []\n    const page = this.listQuery.page\n    const limit = this.listQuery.limit\n    this.listQuery.page = 1\n    this.listQuery.limit = 100000\n\n    const dataAll: any = await getUnit(getQuery(this.listQuery))\n    const listAll:IUnitData[] = dataAll.data\n\n    this.listQuery.page = page\n    this.listQuery.limit = limit\n    // this.total = data.total;\n\n    // if (paid) {\n    //   fliterData = listAll.filter(list => {\n    //     return new Date(list.planExipiryDate) > new Date();\n    //   });\n    // } else {\n    //   fliterData = listAll.filter(list => {\n    //     return new Date(list.planExipiryDate) < new Date();\n    //   });\n    // }\n    const tHeader = [\n      'id',\n      'fullName',\n      'email',\n      'contactNumber',\n      'type',\n      'isMonthlyNewsletter',\n      'planExipiryDate'\n    ]\n    const filterVal = [\n      'id',\n      'fullName',\n      'email',\n      'contactNumber',\n      'type',\n      'isMonthlyNewsletter',\n      'planExipiryDate'\n    ]\n    const data = formatJson(filterVal, fliterData)\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc('route.userManagement.Consumable.title')\n    )\n    this.downloadLoading = false\n  }\n}\n"]}]}