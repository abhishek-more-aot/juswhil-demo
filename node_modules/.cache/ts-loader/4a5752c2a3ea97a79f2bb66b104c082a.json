{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/layout/components/TagsView/ScrollPane.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/layout/components/TagsView/ScrollPane.vue","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnZhciBfdHNsaWIgPSByZXF1aXJlKCJ0c2xpYiIpOwp2YXIgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yID0gcmVxdWlyZSgidnVlLXByb3BlcnR5LWRlY29yYXRvciIpOwpjb25zdCB0YWdTcGFjaW5nID0gNDsKbGV0IGRlZmF1bHRfMSA9IGNsYXNzIGV4dGVuZHMgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlZ1ZSB7CiAgaGFuZGxlU2Nyb2xsKGUpIHsKICAgIGNvbnN0IGV2ZW50RGVsdGEgPSBlLndoZWVsRGVsdGEgfHwgLWUuZGVsdGFZICogNDA7CiAgICBjb25zdCBzY3JvbGxDb250YWluZXIgPSB0aGlzLiRyZWZzLnNjcm9sbENvbnRhaW5lcjsKICAgIGNvbnN0IHNjcm9sbFdyYXBwZXIgPSBzY3JvbGxDb250YWluZXIuJHJlZnMud3JhcDsKICAgIHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCA9IHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCArIGV2ZW50RGVsdGEgLyA0OwogIH0KICBtb3ZlVG9UYXJnZXQoY3VycmVudFRhZykgewogICAgdmFyIF90aGlzJCRwYXJlbnQ7CiAgICBjb25zdCBzY3JvbGxDb250YWluZXIgPSB0aGlzLiRyZWZzLnNjcm9sbENvbnRhaW5lcjsKICAgIGNvbnN0IGNvbnRhaW5lciA9IHNjcm9sbENvbnRhaW5lci4kZWw7CiAgICBjb25zdCBjb250YWluZXJXaWR0aCA9IGNvbnRhaW5lci5vZmZzZXRXaWR0aDsKICAgIGNvbnN0IHNjcm9sbFdyYXBwZXIgPSBzY3JvbGxDb250YWluZXIuJHJlZnMud3JhcDsKICAgIGNvbnN0IHRhZ0xpc3QgPSAoX3RoaXMkJHBhcmVudCA9IHRoaXMuJHBhcmVudCkgPT09IG51bGwgfHwgX3RoaXMkJHBhcmVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkJHBhcmVudC4kcmVmcy50YWc7CiAgICBsZXQgZmlyc3RUYWcgPSBudWxsOwogICAgbGV0IGxhc3RUYWcgPSBudWxsOwogICAgLy8gZmluZCBmaXJzdCB0YWcgYW5kIGxhc3QgdGFnCiAgICBpZiAodGFnTGlzdC5sZW5ndGggPiAwKSB7CiAgICAgIGZpcnN0VGFnID0gdGFnTGlzdFswXTsKICAgICAgbGFzdFRhZyA9IHRhZ0xpc3RbdGFnTGlzdC5sZW5ndGggLSAxXTsKICAgIH0KICAgIGlmIChmaXJzdFRhZyA9PT0gY3VycmVudFRhZykgewogICAgICBzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgPSAwOwogICAgfSBlbHNlIGlmIChsYXN0VGFnID09PSBjdXJyZW50VGFnKSB7CiAgICAgIHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCA9IHNjcm9sbFdyYXBwZXIuc2Nyb2xsV2lkdGggLSBjb250YWluZXJXaWR0aDsKICAgIH0gZWxzZSB7CiAgICAgIC8vIGZpbmQgcHJlVGFnIGFuZCBuZXh0VGFnCiAgICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IHRhZ0xpc3QuZmluZEluZGV4KGl0ZW0gPT4gaXRlbSA9PT0gY3VycmVudFRhZyk7CiAgICAgIGNvbnN0IHByZXZUYWcgPSB0YWdMaXN0W2N1cnJlbnRJbmRleCAtIDFdOwogICAgICBjb25zdCBuZXh0VGFnID0gdGFnTGlzdFtjdXJyZW50SW5kZXggKyAxXTsKICAgICAgLy8gdGhlIHRhZydzIG9mZnNldExlZnQgYWZ0ZXIgb2YgbmV4dFRhZwogICAgICBjb25zdCBhZnRlck5leHRUYWdPZmZzZXRMZWZ0ID0gbmV4dFRhZy4kZWwub2Zmc2V0TGVmdCArIG5leHRUYWcuJGVsLm9mZnNldFdpZHRoICsgdGFnU3BhY2luZzsKICAgICAgLy8gdGhlIHRhZydzIG9mZnNldExlZnQgYmVmb3JlIG9mIHByZXZUYWcKICAgICAgY29uc3QgYmVmb3JlUHJldlRhZ09mZnNldExlZnQgPSBwcmV2VGFnLiRlbC5vZmZzZXRMZWZ0IC0gdGFnU3BhY2luZzsKICAgICAgaWYgKGFmdGVyTmV4dFRhZ09mZnNldExlZnQgPiBzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgKyBjb250YWluZXJXaWR0aCkgewogICAgICAgIHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCA9IGFmdGVyTmV4dFRhZ09mZnNldExlZnQgLSBjb250YWluZXJXaWR0aDsKICAgICAgfSBlbHNlIGlmIChiZWZvcmVQcmV2VGFnT2Zmc2V0TGVmdCA8IHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCkgewogICAgICAgIHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCA9IGJlZm9yZVByZXZUYWdPZmZzZXRMZWZ0OwogICAgICB9CiAgICB9CiAgfQp9OwpkZWZhdWx0XzEgPSAoMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLkNvbXBvbmVudCkoewogIG5hbWU6ICdTY3JvbGxQYW5lJwp9KV0sIGRlZmF1bHRfMSk7CnZhciBfZGVmYXVsdCA9IGRlZmF1bHRfMTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"mappings":";;;;;;;AACA;AAEA,MAAMA,UAAU,GAAG,CAAC;AAKpB,8BAA6BC,yBAAG;EACtBC,YAAY,CAACC,CAAkB;IACrC,MAAMC,UAAU,GAAID,CAAS,CAACE,UAAU,IAAI,CAACF,CAAC,CAACG,MAAM,GAAG,EAAE;IAC1D,MAAMC,eAAe,GAAG,IAAI,CAACC,KAAK,CAACD,eAAsB;IACzD,MAAME,aAAa,GAAGF,eAAe,CAACC,KAAK,CAACE,IAAmB;IAC/DD,aAAa,CAACE,UAAU,GAAGF,aAAa,CAACE,UAAU,GAAGP,UAAU,GAAG,CAAC;EACtE;EAEOQ,YAAY,CAACC,UAAuB;IAAA;IACzC,MAAMN,eAAe,GAAG,IAAI,CAACC,KAAK,CAACD,eAAsB;IACzD,MAAMO,SAAS,GAAGP,eAAe,CAACQ,GAAkB;IACpD,MAAMC,cAAc,GAAGF,SAAS,CAACG,WAAW;IAC5C,MAAMR,aAAa,GAAGF,eAAe,CAACC,KAAK,CAACE,IAAmB;IAC/D,MAAMQ,OAAO,oBAAG,IAAI,CAACC,OAAO,kDAAZ,cAAcX,KAAK,CAACY,GAAY;IAEhD,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,OAAO,GAAG,IAAI;IAElB;IACA,IAAIJ,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;MACtBF,QAAQ,GAAGH,OAAO,CAAC,CAAC,CAAC;MACrBI,OAAO,GAAGJ,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,CAAC;;IAGvC,IAAIF,QAAQ,KAAKR,UAAU,EAAE;MAC3BJ,aAAa,CAACE,UAAU,GAAG,CAAC;KAC7B,MAAM,IAAIW,OAAO,KAAKT,UAAU,EAAE;MACjCJ,aAAa,CAACE,UAAU,GAAGF,aAAa,CAACe,WAAW,GAAGR,cAAc;KACtE,MAAM;MACL;MACA,MAAMS,YAAY,GAAGP,OAAO,CAACQ,SAAS,CAACC,IAAI,IAAIA,IAAI,KAAKd,UAAU,CAAC;MACnE,MAAMe,OAAO,GAAGV,OAAO,CAACO,YAAY,GAAG,CAAC,CAAC;MACzC,MAAMI,OAAO,GAAGX,OAAO,CAACO,YAAY,GAAG,CAAC,CAAC;MACzC;MACA,MAAMK,sBAAsB,GAAGD,OAAO,CAACd,GAAG,CAACgB,UAAU,GAAGF,OAAO,CAACd,GAAG,CAACE,WAAW,GAAGjB,UAAU;MAC5F;MACA,MAAMgC,uBAAuB,GAAGJ,OAAO,CAACb,GAAG,CAACgB,UAAU,GAAG/B,UAAU;MAEnE,IAAI8B,sBAAsB,GAAGrB,aAAa,CAACE,UAAU,GAAGK,cAAc,EAAE;QACtEP,aAAa,CAACE,UAAU,GAAGmB,sBAAsB,GAAGd,cAAc;OACnE,MAAM,IAAIgB,uBAAuB,GAAGvB,aAAa,CAACE,UAAU,EAAE;QAC7DF,aAAa,CAACE,UAAU,GAAGqB,uBAAuB;;;EAGxD;CACD;AA7CDC,oCAHC,mCAAS,EAAC;EACTC,IAAI,EAAE;CACP,CAAC,aA8CD;AAAA","names":["tagSpacing","Vue","handleScroll","e","eventDelta","wheelDelta","deltaY","scrollContainer","$refs","scrollWrapper","wrap","scrollLeft","moveToTarget","currentTag","container","$el","containerWidth","offsetWidth","tagList","$parent","tag","firstTag","lastTag","length","scrollWidth","currentIndex","findIndex","item","prevTag","nextTag","afterNextTagOffsetLeft","offsetLeft","beforePrevTagOffsetLeft","default_1","name"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/layout/components/TagsView/ScrollPane.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Vue } from 'vue-property-decorator'\n\nconst tagSpacing = 4\n\n@Component({\n  name: 'ScrollPane'\n})\nexport default class extends Vue {\n  private handleScroll(e: MouseWheelEvent) {\n    const eventDelta = (e as any).wheelDelta || -e.deltaY * 40\n    const scrollContainer = this.$refs.scrollContainer as Vue\n    const scrollWrapper = scrollContainer.$refs.wrap as HTMLElement\n    scrollWrapper.scrollLeft = scrollWrapper.scrollLeft + eventDelta / 4\n  }\n\n  public moveToTarget(currentTag: HTMLElement) {\n    const scrollContainer = this.$refs.scrollContainer as Vue\n    const container = scrollContainer.$el as HTMLElement\n    const containerWidth = container.offsetWidth\n    const scrollWrapper = scrollContainer.$refs.wrap as HTMLElement\n    const tagList = this.$parent?.$refs.tag as any[]\n\n    let firstTag = null\n    let lastTag = null\n\n    // find first tag and last tag\n    if (tagList.length > 0) {\n      firstTag = tagList[0]\n      lastTag = tagList[tagList.length - 1]\n    }\n\n    if (firstTag === currentTag) {\n      scrollWrapper.scrollLeft = 0\n    } else if (lastTag === currentTag) {\n      scrollWrapper.scrollLeft = scrollWrapper.scrollWidth - containerWidth\n    } else {\n      // find preTag and nextTag\n      const currentIndex = tagList.findIndex(item => item === currentTag)\n      const prevTag = tagList[currentIndex - 1]\n      const nextTag = tagList[currentIndex + 1]\n      // the tag's offsetLeft after of nextTag\n      const afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagSpacing\n      // the tag's offsetLeft before of prevTag\n      const beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagSpacing\n\n      if (afterNextTagOffsetLeft > scrollWrapper.scrollLeft + containerWidth) {\n        scrollWrapper.scrollLeft = afterNextTagOffsetLeft - containerWidth\n      } else if (beforePrevTagOffsetLeft < scrollWrapper.scrollLeft) {\n        scrollWrapper.scrollLeft = beforePrevTagOffsetLeft\n      }\n    }\n  }\n}\n"]}]}