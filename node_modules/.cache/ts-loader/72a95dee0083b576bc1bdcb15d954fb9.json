{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/arrivals/components/ArrivalsDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/arrivals/components/ArrivalsDetail.vue","mtime":1672064999279},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAUA,+BAAqB,SAAQA,yBAAG;EAAhCC;;IAEU,iBAAY,GAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;IACtC,aAAQ,GAAQ,CAAC,MAAM,CAAC;IACxB,aAAQ,GAAG,CAAC;IACZ,aAAQ,GAAQ,EAAE;IAClB,mBAAc,GAAQ,EAAE;IACxB,UAAK,GAAG,EAAE;IACV,oBAAe,GAAG,KAAK;IACvB,aAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEC,6BAAmB,CAAC;IACjD,YAAO,GAAG,KAAK;IACf,UAAK,GAAG;MACdC,KAAK,EAAE,CACL;QACEC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE;OACV,EACD;QACEC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,EAAE;QACPF,OAAO,EAAE,0BAA0B;QACnCD,OAAO,EAAE;OACV,CACF;MACDC,OAAO,EAAE,CACP;QACEF,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE;OACV,EACD;QACEC,GAAG,EAAE,CAAC;QACND,OAAO,EAAE,iCAAiC;QAC1CD,OAAO,EAAE;OACV,CACF;MACDI,MAAM,EAAE,CACN;QACEL,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE;OACV,CACF;MACDI,IAAI,EAAE,CACJ;QACEN,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;OACV,CACF;MACDM,IAAI,EAAE,CACJ;QACEN,OAAO,EAAE;OACV,EACD;QACEO,OAAO,EACL,iFAAiF;QACnFN,OAAO,EAAE,oBAAoB;QAC7BD,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ;OAC3B;KAEJ;IAgLD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAzME,IAAIQ,IAAI;IACN,OAAOC,cAAS,CAACC,QAAQ;EAC3B;EAEAC,OAAO;IACL,IAAI,CAACC,iBAAiB,EAAE;IAExB,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,MAAMC,EAAE,GAAG,IAAI,CAACC,MAAM,CAACC,MAAM,IAAI,IAAI,CAACD,MAAM,CAACC,MAAM,CAACF,EAAE;MACtD,IAAI,CAACG,SAAS,CAACC,QAAQ,CAACJ,EAAE,CAAC,CAAC;KAC7B,MAAM;MACL,IAAI,CAACK,QAAQ,GAAGxB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEC,6BAAmB,CAAC;;IAExD;IACA;IACA;IACA,IAAI,CAACuB,WAAW,GAAGzB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACmB,MAAM,CAAC;EACnD;EAEQ,MAAME,SAAS,CAACH,EAAU;IAChC,IAAI;MACF,MAAMO,IAAI,GAAQ,MAAM,6BAAe,EAACP,EAAE,CAAC;MAC3C,IAAI,CAACK,QAAQ,GAAGE,IAAI;MACpB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK;MACvB,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB;MAAA;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;;EAEvB;EAEQ,MAAMG,iBAAiB,CAACC,KAAU;IACxC,IAAIC,OAAO,GAAGD,KAAK,CAACE,IAAI;IACxB,IAAIC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAEzBD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAAC;IAC5B,MAAM,sBAAU,EAACE,IAAI,EAAGG,KAAoB,IAAI;MAC9CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAI;MACd,IAAI,CAACnB,QAAQ,CAACG,KAAK,GAAGgB,GAAG,CAACC,QAAQ,EAAE;IACtC,CAAC,CAAC;EACJ;EAEQC,eAAe,CAAChB,GAAQ,EAAEM,IAAS,EAAEW,QAAa;IACxD,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,gBAAgB,CAAC;EACvC;EAEQC,UAAU,CAACC,KAAU,EAAEJ,QAAa;IAC1C,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC,aAAa,GAAG,IAAI,CAACG,QAAQ,GAAG,OAAO,CAAC;EAC9D;EAEQC,YAAY,CAACjB,IAAS;IAC5B,IAAI,CAACX,QAAQ,CAACG,KAAK,GAAG,EAAE;IACxB,MAAM0B,IAAI,GAAQ,IAAI,CAACC,KAAK,CAACC,MAAM;IACnCF,IAAI,CAACG,UAAU,EAAE;EACnB;EAEQC,iBAAiB,CAACC,QAAa,EAAEvB,IAAS,EAAEW,QAAa;IAC/D,IAAIY,QAAQ,CAAChC,IAAI,CAACsB,KAAK,IAAI,CAAC,EAAE;MAC5Bb,IAAI,CAACuB,QAAQ,GAAGA,QAAQ,CAAChC,IAAI,CAACA,IAAI;MAClC,IAAI,CAACoB,QAAQ,CAACa,IAAI,CAACxB,IAAI,CAAC;KACzB,MAAM;MACL,IAAI,CAACY,QAAQ,CAACC,KAAK,CAACU,QAAQ,CAAChC,IAAI,CAACpB,OAAO,CAAC,CAAC,CAAC;;EAEhD;;EAEQsD,UAAU;IAChB,IAAI,CAACC,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;EAC9C;EAEQC,OAAO;IACb,IAAI,CAACD,eAAe,GAAG,KAAK;EAC9B;EAEQE,mBAAmB,CAACC,QAAa,EAAEC,KAAa;IACtD,IAAI,CAACJ,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAClC,KAAK,GAAGqC,QAAQ,CAACd,KAAK,CAACe,KAAK,CAAC;EACpC;EAEQC,WAAW,CAACC,UAAkB,EAAEF,KAAa;IACnD,IAAI,CAACtC,KAAK,GAAGwC,UAAU;IACvB,MAAMzC,IAAI,GAAG,IAAIW,QAAQ,EAAE;IAC3B+B,KAAK,CAACD,UAAU,CAAC,CACdzB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAAC0B,IAAI,EAAE,CAAC,CACzB3B,IAAI,CAAE2B,IAAI,IAAI;MACb,MAAMlC,IAAI,GAAG,IAAImC,IAAI,CAAC,CAACD,IAAI,CAAC,EAAE,MAAM,GAAGA,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9DD,IAAI,EAAE;OACP,CAAC;MACF7C,IAAI,CAACY,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MACzB,sBAAU,EAACT,IAAI,EAAGa,KAAoB,IAAI;QACxCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC,CAACG,IAAI,CAAEC,GAAQ,IAAI;QACnB,IAAI,CAACnB,QAAQ,CAACG,KAAK,GAAGgB,GAAG;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEQ8B,gBAAgB,CAACtE,KAAa;IACpC,MAAMuE,OAAO,GAAG,IAAI,CAACjD,WAAW;IAChC,IAAIiD,OAAO,EAAE;MACXA,OAAO,CAACvE,KAAK,GAAG,GAAGA,KAAK,IAAI,IAAI,CAACqB,QAAQ,CAACL,EAAE,EAAE;MAC9CwD,wBAAc,CAACC,iBAAiB,CAACF,OAAO,CAAC;;EAE7C;EAEQG,YAAY,CAAC1E,KAAa;IAChC2E,QAAQ,CAAC3E,KAAK,GAAG,GAAGA,KAAK,MAAM,IAAI,CAACqB,QAAQ,CAACL,EAAE,EAAE;EACnD;EAEQ4D,UAAU;IACf,IAAI,CAACzB,KAAK,CAAC9B,QAAiB,CAACwD,QAAQ,CAAEC,KAAK,IAAI;MAC/C,IAAIA,KAAK,EAAE;QACT,IAAI,CAACC,QAAQ,EAAE;OAChB,MAAM;QACL,OAAO,KAAK;;IAEhB,CAAC,CAAC;EACJ;EAEQC,SAAS;IACd,IAAI,CAAC7B,KAAK,CAAC9B,QAAiB,CAAC4D,WAAW,EAAE;IAC3C,IAAI,CAACtC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACtB,QAAQ,CAACG,KAAK,GAAG,EAAE;EAC1B;EAGO,MAAMuD,QAAQ;IACnB,IAAI;MACF,IAAI,CAACG,OAAO,GAAG,IAAI;MACnB,IAAI,IAAI,CAACnE,MAAM,EAAE;QACf;QACA;QACA;QACA,MAAM,4BAAc,EAAC,IAAI,CAACM,QAAQ,CAACL,EAAE,EAAE,IAAI,CAACK,QAAQ,CAAC;OACtD,MAAM;QACL,MAAM,4BAAc,EAAC,IAAI,CAACA,QAAQ,CAAC;;MAGrC,IAAI,CAAC8D,OAAO,CAAC;QACXnF,KAAK,EAAE,SAAS;QAChBG,OAAO,EAAE,6BAA6B;QACtCiE,IAAI,EAAE,SAAS;QACfgB,QAAQ,EAAE;OACX,CAAC;MACFC,eAAM,CAAC7B,IAAI,CAAC,gBAAgB,CAAC;KAC9B,CAAC,OAAO9B,GAAG,EAAE;MACZ,IAAI,CAACwD,OAAO,GAAG,KAAK;;EAExB;EAEQ,MAAMpE,iBAAiB;IAC7B,IAAI;MACF,IAAI,CAACwE,cAAc,GAAG,MAAM,0BAAc,GAAE;KAC7C,CAAC,OAAO5D,GAAG,EAAE;MACZC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;;EAEvB;EAEQ6D,WAAW,CAACvD,IAAS;IAC3B,IAAI,CAACX,QAAQ,CAACG,KAAK,GAAGQ,IAAI,CAACuB,QAAQ;EACrC;CA+BD;AAzQ2B,wBAAzB,8BAAI,EAAC;EAAEiC,OAAO,EAAE;AAAK,CAAE,CAAC,yCAA0B;AAwMnD,wBADCC,4BAAM,yCAuBN;AA/NHC,oCARC,mCAAS,EAAC;EACTC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVC,UAAU,EAAVA,eAAU;IACVC,QAAQ,EAARA,cAAQ;IACRC,YAAY,EAAZA;;CAEH,CAAC,aA2QD;AAAA","names":["Vue","constructor","Object","assign","defaultArrivalsData","title","required","trigger","message","min","max","source","page","link","pattern","lang","AppModule","language","created","getAppVersionList","isEdit","id","$route","params","fetchData","parseInt","formData","tempTagView","data","image","stateId","err","Promise","reject","uploadSectionFile","param","fileObj","file","form","FormData","append","event","console","log","then","res","toString","uploadFileError","fileList","$message","error","exceedFile","files","limitnum","handleRemove","temp","$refs","upload","clearFiles","uploadFileSuccess","response","push","toggleShow","showImageUpload","onClose","onCropUploadSuccess","jsonData","field","cropSuccess","imgDataUrl","fetch","blob","File","type","split","setTagsViewTitle","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","validate","valid","saveForm","resetForm","resetFields","loading","$notify","duration","router","appVersionList","imageUpload","default","Action","default_1","name","components","FileUpload","PanThumb","AvatarUpload"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/arrivals/components/ArrivalsDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport {\n  getArrivalsById,\n  updateArrivals,\n  createArrivals,\n} from \"@/api/arrivals\";\nimport { AppModule } from \"@/store/modules/app\";\nimport { TagsViewModule, ITagView } from \"@/store/modules/tags-view\";\nimport { Form } from \"element-ui\";\nimport router from \"@/router\";\nimport { Action } from \"vuex-module-decorators\";\nimport { getQuery } from \"@/utils\";\nimport PanThumb from \"@/components/PanThumb/index.vue\";\nimport FileUpload from \"@/components/FileUpload/index.vue\";\nimport { getAppVersions, uploadFile } from \"@/api/common\";\nimport { defaultArrivalsData } from \"@/api/arrivals\";\nimport AvatarUpload from \"@/components/AvatarUpload/index.vue\";\n// import { getUsers } from '@/api/users'\n\n@Component({\n  name: \"ArrivalsDetail\",\n  components: {\n    FileUpload,\n    PanThumb,\n    AvatarUpload,\n  },\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private platformList: any = [\"android\", \"ios\"];\n  private pageList: any = [\"Home\"];\n  private limitnum = 1;\n  private fileList: any = [];\n  private appVersionList: any = [];\n  private image = \"\";\n  private showImageUpload = false;\n  private formData = Object.assign({}, defaultArrivalsData);\n  private loading = false;\n  private rules = {\n    title: [\n      {\n        required: true,\n        trigger: \"blur\",\n        message: \"Title is required\",\n      },\n      {\n        min: 3,\n        max: 50,\n        message: \"Length should be 3 to 50\",\n        trigger: \"blur\",\n      },\n    ],\n    message: [\n      {\n        required: true,\n        trigger: \"blur\",\n        message: \"Message is required\",\n      },\n      {\n        min: 3,\n        message: \"Length should be greater than 3\",\n        trigger: \"blur\",\n      },\n    ],\n    source: [\n      {\n        required: true,\n        trigger: \"blur\",\n        message: \"Source is required\",\n      },\n    ],\n    page: [\n      {\n        required: true,\n        trigger: \"blur\",\n      },\n    ],\n    link: [\n      {\n        trigger: \"blur\",\n      },\n      {\n        pattern:\n          /[-a-zA-Z0-9@%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n        message: \"Invalid URL format\",\n        trigger: [\"blur\", \"change\"],\n      },\n    ],\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language;\n  }\n\n  created() {\n    this.getAppVersionList();\n\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id;\n      this.fetchData(parseInt(id));\n    } else {\n      this.formData = Object.assign({}, defaultArrivalsData);\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route);\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getArrivalsById(id);\n      this.formData = data;\n      this.image = data.image;\n      if (data.stateId) {\n        // this.getCityList(data.stateId)\n      }\n      // if (data.cityId) {\n      //   this.getPincodeList(data.cityId)\n      // }\n      // Just for test\n      // const title = this.formData.description ? this.formData.description : ''\n      // Set tagsview title\n      // this.setTagsViewTitle(title)\n      // Set page title\n      // this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err);\n    }\n  }\n\n  private async uploadSectionFile(param: any) {\n    var fileObj = param.file;\n    var form = new FormData();\n\n    form.append(\"file\", fileObj);\n    await uploadFile(form, (event: ProgressEvent) => {\n      console.log(event);\n    }).then((res) => {\n      this.formData.image = res.toString();\n    });\n  }\n\n  private uploadFileError(err: any, file: any, fileList: any) {\n    this.$message.error(\"upload failed!\");\n  }\n\n  private exceedFile(files: any, fileList: any) {\n    this.$message.error(\"Only upload\" + this.limitnum + \"Files\");\n  }\n\n  private handleRemove(file: any) {\n    this.formData.image = \"\";\n    const temp: any = this.$refs.upload;\n    temp.clearFiles();\n  }\n\n  private uploadFileSuccess(response: any, file: any, fileList: any) {\n    if (response.data.error == 0) {\n      file.response = response.data.data;\n      this.fileList.push(file);\n    } else {\n      this.$message.error(response.data.message); // File upload error prompt\n    }\n  }\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload;\n  }\n\n  private onClose() {\n    this.showImageUpload = false;\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false;\n    this.image = jsonData.files[field];\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl;\n    const data = new FormData();\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], \"img.\" + blob.type.split(\"/\")[1], {\n          type: \"image/png\",\n        });\n        data.append(\"file\", file);\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event);\n        }).then((res: any) => {\n          this.formData.image = res;\n        });\n      });\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView;\n    if (tagView) {\n      tagView.title = `${title}-${this.formData.id}`;\n      TagsViewModule.updateVisitedView(tagView);\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.formData.id}`;\n  }\n\n  private submitForm() {\n    (this.$refs.formData as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm();\n      } else {\n        return false;\n      }\n    });\n  }\n\n  private resetForm() {\n    (this.$refs.formData as Form).resetFields();\n    this.fileList = [];\n    this.formData.image = \"\";\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true;\n      if (this.isEdit) {\n        // this.formData.country = { id: this.formData.countryId }\n        // this.formData.state = { id: this.formData.stateId }\n        // this.formData.city = { id: this.formData.cityId }\n        await updateArrivals(this.formData.id, this.formData);\n      } else {\n        await createArrivals(this.formData);\n      }\n\n      this.$notify({\n        title: \"Success\",\n        message: \"Arrivals saved successfully\",\n        type: \"success\",\n        duration: 2000,\n      });\n      router.push(\"/arrivals/list\");\n    } catch (err) {\n      this.loading = false;\n    }\n  }\n\n  private async getAppVersionList() {\n    try {\n      this.appVersionList = await getAppVersions();\n    } catch (err) {\n      Promise.reject(err);\n    }\n  }\n\n  private imageUpload(file: any) {\n    this.formData.image = file.response;\n  }\n\n  // private sendToAllToggled() {\n  //   if (this.formData.sendToAll) {\n  //     this.$confirm(\n  //       'Are you sure want to send notification to All users?',\n  //       'Attention!',\n  //       {\n  //         confirmButtonText: \"Yes, I know what I'm doing\",\n  //         confirmButtonClass: 'el-button--success',\n  //         cancelButtonText: this.$tc('table.cancel'),\n  //         cancelButtonClass: 'el-button--danger',\n  //         type: 'error'\n  //       }\n  //     )\n  //       .then((confirm) => {\n  //         // let it confirm\n  //         // clear other dropdowns\n  //         this.formData.countryId = null\n  //         this.formData.stateId = null\n  //         this.formData.cityId = null\n\n  //         // delete this.formData.country\n  //         // delete this.formData.state\n  //         // delete this.formData.city\n  //       })\n  //       .catch((_) => {\n  //         this.formData.sendToAll = false\n  //       })\n  //   }\n  // }\n}\n"]}]}