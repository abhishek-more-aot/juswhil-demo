{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/documents/components/documentDetails.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/documents/components/documentDetails.vue","mtime":1668755781589},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Vue","constructor","Object","assign","defaultDocumentsData","title","required","message","trigger","pattern","document","source","page","link","lang","AppModule","language","documentClose","formData","tags","created","getAppVersionList","isEdit","id","$route","params","fetchData","parseInt","tempTagView","data","image","err","Promise","reject","uploadDocSectionFile","param","fileObj","file","form","FormData","documentLoading","append","event","console","log","then","res","toString","catch","handleUploadChange","docFileList","uploadFileError","fileList","$message","error","exceedFile","files","limitnum","uploadFileSuccess","response","push","toggleShow","showImageUpload","onClose","onCropUploadSuccess","jsonData","field","cropSuccess","imgDataUrl","fetch","blob","File","type","split","setTagsViewTitle","tagView","TagsViewModule","updateVisitedView","setPageTitle","submitForm","$refs","validate","valid","saveForm","resetForm","resetFields","loading","orderId","Number","$notify","duration","router","appVersionList","imageUpload","default","Action","default_1","name","components","FileUpload","PanThumb","AvatarUpload"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/documents/components/documentDetails.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport {\n  getDocumentsById,\n  updateDocument,\n  createDocument\n} from '@/api/documents'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from '@/router'\nimport { Action } from 'vuex-module-decorators'\nimport { getQuery } from '@/utils'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport FileUpload from '@/components/FileUpload/index.vue'\nimport { getAppVersions, uploadFile } from '@/api/common'\nimport { defaultDocumentsData } from '@/api/documents'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\n// import { getTendors } from '@/api/tendors/tendors'\n// import { defaultDocumentTypeData, getDocumentsType } from '@/api/documenttype/documenttype'\n// import { getUsers } from '@/api/users'\n\n@Component({\n  name: 'documentDetails',\n  components: {\n    FileUpload,\n    PanThumb,\n    AvatarUpload\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private platformList: any = ['android', 'ios'];\n  private pageList: any = ['Home'];\n  private limitnum = 1;\n  \n  // this added\n  private tendorIdList: any = [];\n  private documentMasterIdList: any = [];\n  private documentMaster: any = [];\n  private docFileList:any = [];\n\n  private fileList: any = [];\n  private appVersionList: any = [];\n  private image = '';\n  private document =''\n  private documentLoading=false\n  private showImageUpload = false;\n  private formData = Object.assign({}, defaultDocumentsData);\n  // private postForm = Object.assign({}, defaultDocumentTypeData);\n  private loading = false;\n  private rules = {\n    // title: [\n    //   {\n    //     required: true,\n    //     trigger: 'blur',\n    //     message: 'Title is required'\n    //   },\n    //   {\n    //     min: 3,\n    //     max: 50,\n    //     message: 'Length should be 3 to 50',\n    //     trigger: 'blur'\n    //   }\n    // ],\n    title: [\n      {\n        required: true,\n        message: \"Please enter title\",\n        trigger: [\"blur\",\"change\"]\n      },\n      {\n        pattern: '^[a-zA-Z0-9_]',\n        message: \"Space not allow at start of title \",\n        trigger: [\"blur\", \"change\"],\n      },  \n      // {\n      //   pattern: \"^[a-zA-Z ]*$\",\n      //   message: \"Please enter valid input\"\n      // }\n    ],\n    document: [\n      {\n        required: true,\n        trigger: 'blur',\n        message: 'Please upload document'\n      },\n      // {\n      //   min: 3,\n      //   message: 'Length should be greater than 3',\n      //   trigger: 'blur'\n      // }\n    ],\n    source:[\n       {\n        required: true,\n        trigger: 'blur',\n        message: 'Source is required'\n      },\n    ],\n    page: [\n      {\n        required: true,\n        trigger: 'blur'\n      }\n    ],\n    link: [\n      {\n        trigger: 'blur'\n      },\n      {\n        pattern: /[-a-zA-Z0-9@%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n        message: 'Invalid URL format',\n        trigger: ['blur', 'change']\n      }\n    ]\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n  private documentClose(){\n    this.formData.document='';\n    this.formData.tags=''\n  }\n\n  created() {\n    this.getAppVersionList()\n    // this.fetchTendors()\n    // this.fetchDocTypes()\n\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n      \n    } else {\n      this.formData = Object.assign({}, defaultDocumentsData)\n      \n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getDocumentsById(id)\n      this.formData = data\n      this.image = data.image\n      // this.document=data.document\n      // const title = this.formData.description ? this.formData.description : ''\n      // Set tagsview title\n      // this.setTagsViewTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  //  private async fetchTendors() {\n  //   this.tendorIdList = await getTendors(\n  //     getQuery({\n  //       enabled: true,\n  //       sort: 'id,ASC',\n  //       filter: {\n  //         enabled: 'eq'\n  //       }\n  //     })\n  //   )\n    \n  // }\n\n    // private async fetchDocTypes() {\n    // this.documentMasterIdList = await getDocumentsType(\n    //     getQuery({\n    //       enabled: true,\n    //       sort: 'id,ASC',\n    //       filter: {\n    //         enabled: 'eq'\n    //       }\n    //     })\n    //   )\n      \n    // }\n\n  // private async uploadSectionFile(param: any) {\n    \n  //   var fileObj = param.file\n  //   var form = new FormData()\n    \n  //   form.append('file', fileObj)\n  //   await uploadFile(form, (event: ProgressEvent) => {\n  //     console.log(event)\n  //   }).then((res) => {\n      \n  //     this.formData.image = res.toString()\n  //   })\n    \n  // }\n\n    private async uploadDocSectionFile(param: any) {\n      var fileObj = param.file\n      var form = new FormData()\n      this.documentLoading=true;\n      form.append('file', fileObj)\n      \n      await uploadFile(form, (event: ProgressEvent) => {\n         this.documentLoading=true;\n        console.log(event)\n      }).then((res) => {\n        this.documentLoading=true;\n        this.formData.document = res.toString()\n        console.log(res);\n        console.log(this.formData);\n        this.documentLoading=false;\n      }).catch((err)=>{\n        console.log(err);\n      })\n    }\n\n  private handleUploadChange(file: any){\n    this.docFileList = [file];\n  }\n\n  private uploadFileError(err: any, file: any, fileList: any) {\n    this.$message.error('upload failed!')\n  }\n\n  private exceedFile(files: any, fileList: any) {\n    this.$message.error('Only upload' + this.limitnum + 'Files')\n  }\n\n  // private handleRemove(file: any) {\n    \n  //   this.formData.image = ''\n  //   const temp: any = this.$refs.upload\n  //   temp.clearFiles()\n    \n  // }\n\n  private uploadFileSuccess(response: any, file: any, fileList: any) {\n    if (response.data.error == 0) {\n      file.response = response.data.data\n      this.fileList.push(file)\n    } else {\n      this.$message.error(response.data.message) // File upload error prompt\n    }\n  }\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n\n        }).then((res: any) => {\n          console.log(res)\n          \n          // this.formData.image = res\n        })\n      })\n    \n  }\n\n\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.formData.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.formData.id}`\n    // document.title = `${title}`\n  }\n\n  private submitForm() {\n    (this.$refs.formData as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    (this.$refs.formData as Form).resetFields()\n    this.fileList = []\n    // this.formData.image = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) { \n        \n        // this.formData.documentMaster = { id : this.formData.documentMasterId}\n        // this.formData.tendorId= Number(this.$route.params.id)\n        await updateDocument(this.formData.id, this.formData)\n        \n      } else {\n        \n        this.formData.orderId= Number(this.$route.params.id)\n        await createDocument(this.formData)\n\n        \n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Document saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      \n      router.push('/documents/list/' + Number(this.formData.orderId))\n      \n    } catch (err) {\n      this.loading = false\n    }\n  }\n\n  private async getAppVersionList() {\n    try {\n      this.appVersionList = await getAppVersions()\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private imageUpload(file: any) {\n    // this.formData.image = file.response\n  }\n\n  // private sendToAllToggled() {\n  //   if (this.formData.sendToAll) {\n  //     this.$confirm(\n  //       'Are you sure want to send notification to All users?',\n  //       'Attention!',\n  //       {\n  //         confirmButtonText: \"Yes, I know what I'm doing\",\n  //         confirmButtonClass: 'el-button--success',\n  //         cancelButtonText: this.$tc('table.cancel'),\n  //         cancelButtonClass: 'el-button--danger',\n  //         type: 'error'\n  //       }\n  //     )\n  //       .then((confirm) => {\n  //         // let it confirm\n  //         // clear other dropdowns\n  //         this.formData.countryId = null\n  //         this.formData.stateId = null\n  //         this.formData.cityId = null\n\n  //         // delete this.formData.country\n  //         // delete this.formData.state\n  //         // delete this.formData.city\n  //       })\n  //       .catch((_) => {\n  //         this.formData.sendToAll = false\n  //       })\n  //   }\n  // }\n}\n"]}]}