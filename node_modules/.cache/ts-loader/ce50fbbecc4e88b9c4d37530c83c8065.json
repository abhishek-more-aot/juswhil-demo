{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/cities/components/CitiesDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/cities/components/CitiesDetail.vue","mtime":1668755764669},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF9jaXRpZXMgPSByZXF1aXJlKCJAL2FwaS9jaXRpZXMiKTsKdmFyIF9hcHAgPSByZXF1aXJlKCJAL3N0b3JlL21vZHVsZXMvYXBwIik7CnZhciBfdGFnc1ZpZXcgPSByZXF1aXJlKCJAL3N0b3JlL21vZHVsZXMvdGFncy12aWV3Iik7CnZhciBfcm91dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi8uLi8uLi9yb3V0ZXIiKSk7CnZhciBfdnVleE1vZHVsZURlY29yYXRvcnMgPSByZXF1aXJlKCJ2dWV4LW1vZHVsZS1kZWNvcmF0b3JzIik7Ci8vIGltcG9ydCB7YXJyYW5nZUxldHRlcnN9IGZyb20gJ0AvdXRpbHMvaW5kZXgnCmxldCBkZWZhdWx0XzEgPSBjbGFzcyBkZWZhdWx0XzEgZXh0ZW5kcyBfdnVlUHJvcGVydHlEZWNvcmF0b3IuVnVlIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICB0aGlzLnNob3dJbWFnZVVwbG9hZCA9IGZhbHNlOwogICAgdGhpcy5wYXJhbXMgPSB7CiAgICAgIHNvbWVfcGFyYW1zOiAieW91cl9wYXJhbXNfZ29lc19oZXJlIgogICAgfTsKICAgIHRoaXMucG9zdEZvcm0gPSBPYmplY3QuYXNzaWduKHt9LCBfY2l0aWVzLmRlZmF1bHRDaXR5RGF0YSk7CiAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgIHRoaXMuc3RhdGVJZCA9IDA7CiAgICB0aGlzLnJ1bGVzID0gewogICAgICBuYW1lOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIG1lc3NhZ2U6ICJQbGVhc2UgZW50ZXIgY2l0eSBuYW1lIiwKICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgfSwgewogICAgICAgIHBhdHRlcm46ICJeW2EtekEtWjAtOV9dIiwKICAgICAgICBtZXNzYWdlOiAiU3BhY2Ugbm90IGFsbG93IGF0IHN0YXJ0IG9mIG5hbWUiLAogICAgICAgIHRyaWdnZXI6IFsiYmx1ciIsICJjaGFuZ2UiXQogICAgICB9XSwKICAgICAgY2l0eV9jb2RlOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIG1lc3NhZ2U6ICJQbGVhc2UgZW50ZXIgY2l0eSBjb2RlIG5hbWUiLAogICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICB9LCB7CiAgICAgICAgcGF0dGVybjogIl5bMC05XSokIiwKICAgICAgICBtZXNzYWdlOiAiSW52YWxpZCBjaXR5IGNvZGUiLAogICAgICAgIHRyaWdnZXI6IFsiYmx1ciIsICJjaGFuZ2UiXQogICAgICB9LCB7CiAgICAgICAgbWluOiA1LAogICAgICAgIG1heDogNSwKICAgICAgICBtZXNzYWdlOiAiY2l0eSBjb2RlIG9ubHkgY29udGFpbiA1IGRpZ2l0cyBudW1iZXJzIgogICAgICB9XQogICAgfTsKICB9CiAgZ2V0IGxhbmcoKSB7CiAgICByZXR1cm4gX2FwcC5BcHBNb2R1bGUubGFuZ3VhZ2U7CiAgfQogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnN0YXRlSWQgPSBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMgJiYgdGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcyAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICAgIHRoaXMuZmV0Y2hEYXRhKHBhcnNlSW50KGlkKSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnBvc3RGb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgX2NpdGllcy5kZWZhdWx0Q2l0eURhdGEpOwogICAgfQogICAgLy8gV2h5IG5lZWQgdG8gbWFrZSBhIGNvcHkgb2YgdGhpcy4kcm91dGUgaGVyZT8KICAgIC8vIEJlY2F1c2UgaWYgeW91IGVudGVyIHRoaXMgcGFnZSBhbmQgcXVpY2tseSBzd2l0Y2ggdGFnLCBtYXkgYmUgaW4gdGhlIGV4ZWN1dGlvbiBvZiB0aGlzLnNldFRhZ3NWaWV3VGl0bGUgZnVuY3Rpb24sIHRoaXMuJHJvdXRlIGlzIG5vIGxvbmdlciBwb2ludGluZyB0byB0aGUgY3VycmVudCBwYWdlCiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vUGFuSmlhQ2hlbi92dWUtZWxlbWVudC1hZG1pbi9pc3N1ZXMvMTIyMQogICAgdGhpcy50ZW1wVGFnVmlldyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuJHJvdXRlKTsKICB9CiAgYXN5bmMgZmV0Y2hEYXRhKGlkKSB7CiAgICB0cnkgewogICAgICBjb25zdCBkYXRhID0gYXdhaXQgKDAsIF9jaXRpZXMuZ2V0Y2l0aWVzQnlJZCkoaWQpOwogICAgICB0aGlzLnBvc3RGb3JtID0gZGF0YTsKICAgICAgLy8gSnVzdCBmb3IgdGVzdAogICAgICAvLyAgY29uc3QgdGl0bGUgPSB0aGlzLnBvc3RGb3JtLmVtYWlsCiAgICAgIC8vIFNldCB0YWdzdmlldyB0aXRsZQogICAgICAvLyAgdGhpcy5zZXRUYWdzVmlld1RpdGxlKHRpdGxlKQogICAgICAvLyBTZXQgcGFnZSB0aXRsZQogICAgICAvLyAgdGhpcy5zZXRQYWdlVGl0bGUodGl0bGUpCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgfQogIH0KICBzZXRUYWdzVmlld1RpdGxlKHRpdGxlKSB7CiAgICBjb25zdCB0YWdWaWV3ID0gdGhpcy50ZW1wVGFnVmlldzsKICAgIGlmICh0YWdWaWV3KSB7CiAgICAgIHRhZ1ZpZXcudGl0bGUgPSBgJHt0aXRsZX0tJHt0aGlzLnBvc3RGb3JtLmlkfWA7CiAgICAgIF90YWdzVmlldy5UYWdzVmlld01vZHVsZS51cGRhdGVWaXNpdGVkVmlldyh0YWdWaWV3KTsKICAgIH0KICB9CiAgc2V0UGFnZVRpdGxlKHRpdGxlKSB7CiAgICBkb2N1bWVudC50aXRsZSA9IGAke3RpdGxlfSAtICR7dGhpcy5wb3N0Rm9ybS5pZH1gOwogIH0KICBzdWJtaXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5wb3N0Rm9ybS52YWxpZGF0ZSh2YWxpZCA9PiB7CiAgICAgIGlmICh2YWxpZCkgewogICAgICAgIHRoaXMuc2F2ZUZvcm0oKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJTdWJtaXQgRXJyb3IhIik7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9KTsKICB9CiAgcmVzZXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5wb3N0Rm9ybS5yZXNldEZpZWxkcygpOwogIH0KICBhc3luYyBzYXZlRm9ybSgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIC8vIHRoaXMucG9zdEZvcm0ubmFtZT1hcnJhbmdlTGV0dGVycyh0aGlzLnBvc3RGb3JtLm5hbWUpOwogICAgICBpZiAodGhpcy5pc0VkaXQpIHsKICAgICAgICBhd2FpdCAoMCwgX2NpdGllcy51cGRhdGVjaXRpZXMpKHRoaXMucG9zdEZvcm0uaWQsIHRoaXMucG9zdEZvcm0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJDaXR5IHNhdmVkIHN1Y2Nlc3NmdWxseSIsCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgIH0pOwogICAgICAgICAgX3JvdXRlci5kZWZhdWx0LnB1c2goIi9jaXRpZXMvbGlzdC8iICsgdGhpcy5wb3N0Rm9ybS5zdGF0ZUlkKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBvc3RGb3JtLnN0YXRlSWQgPSB0aGlzLnN0YXRlSWQ7CiAgICAgICAgYXdhaXQgKDAsIF9jaXRpZXMuYWRkY2l0aWVzKSh0aGlzLnBvc3RGb3JtKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogIlN1Y2Nlc3MiLAogICAgICAgICAgICBtZXNzYWdlOiAiQ2l0eSBzYXZlZCBzdWNjZXNzZnVsbHkiLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICB9KTsKICAgICAgICAgIF9yb3V0ZXIuZGVmYXVsdC5wdXNoKCIvY2l0aWVzL2xpc3QvIiArIHRoaXMucG9zdEZvcm0uc3RhdGVJZCk7CiAgICAgICAgfSk7CiAgICAgICAgLy8gLmNhdGNoKChyZXM6IGFueSkgPT4gewogICAgICAgIC8vICAgCiAgICAgICAgLy8gICBpZiAocmVzLnN0YXR1c0NvZGUgPT09IDUwMCkgewogICAgICAgIC8vICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAvLyAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAvLyAgICAgICB0aXRsZTogIldhcm5pbmciLAogICAgICAgIC8vICAgICAgIG1lc3NhZ2U6ICJDaXR5IG5hbWUgYWxyZWFkeSBleGlzdC4iLAogICAgICAgIC8vICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAvLyAgICAgICBkdXJhdGlvbjogMzAwMCwKICAgICAgICAvLyAgICAgfSk7CiAgICAgICAgLy8gICAgIHRoaXMucmVzZXRGb3JtKCk7CiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gfSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgLy8gdGhpcy4kbWVzc2FnZShlcnIubWVzc2FnZSk7CiAgICB9CiAgfQp9OwoKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbKDAsIF92dWVQcm9wZXJ0eURlY29yYXRvci5Qcm9wKSh7CiAgZGVmYXVsdDogZmFsc2UKfSldLCBkZWZhdWx0XzEucHJvdG90eXBlLCAiaXNFZGl0Iiwgdm9pZCAwKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIGRlZmF1bHRfMS5wcm90b3R5cGUsICJzYXZlRm9ybSIsIG51bGwpOwpkZWZhdWx0XzEgPSAoMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLkNvbXBvbmVudCkoewogIG5hbWU6ICJaaXBDb2RlRGV0YWlsIiwKICBjb21wb25lbnRzOiB7fQp9KV0sIGRlZmF1bHRfMSk7CnZhciBfZGVmYXVsdCA9IGRlZmF1bHRfMTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"mappings":"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","names":["Vue","constructor","some_params","Object","assign","defaultCityData","name","required","message","trigger","pattern","city_code","min","max","lang","AppModule","language","created","stateId","parseInt","$route","params","id","isEdit","fetchData","postForm","tempTagView","data","err","console","error","setTagsViewTitle","title","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","$refs","validate","valid","saveForm","resetForm","resetFields","loading","then","res","$notify","type","duration","router","push","default","Action","default_1","components"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/cities/components/CitiesDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport {\n  defaultCityData,\n  addcities,\n  updatecities,\n  getcitiesById,\n} from \"@/api/cities\";\nimport { AppModule } from \"@/store/modules/app\";\nimport { TagsViewModule, ITagView } from \"@/store/modules/tags-view\";\nimport { Form } from \"element-ui\";\nimport router from \"../../../router\";\nimport { Action } from \"vuex-module-decorators\";\n// import {arrangeLetters} from '@/utils/index'\n\n@Component({\n  name: \"ZipCodeDetail\",\n  components: {},\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private showImageUpload = false;\n  private params = { some_params: \"your_params_goes_here\" };\n  private postForm = Object.assign({}, defaultCityData);\n  private loading = false;\n  private stateId = 0;\n\n  private rules = {\n    name: [\n      { required: true, message: \"Please enter city name\", trigger: \"blur\" },\n      {\n        pattern: \"^[a-zA-Z0-9_]\",\n        message: \"Space not allow at start of name\",\n        trigger: [\"blur\", \"change\"],\n      },\n    ],\n    city_code: [\n      { required: true, message: \"Please enter city code name\", trigger: \"blur\" },\n      {\n        pattern: \"^[0-9]*$\",\n        message: \"Invalid city code\",\n        trigger: [\"blur\", \"change\"],\n      },\n      {\n        min: 5,\n        max: 5,\n        message: \"city code only contain 5 digits numbers\",\n      },\n    ],\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language;\n  }\n\n  created() {\n    this.stateId = parseInt(this.$route.params && this.$route.params.id);\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id;\n      this.fetchData(parseInt(id));\n    } else {\n      this.postForm = Object.assign({}, defaultCityData);\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route);\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getcitiesById(id);\n      this.postForm = data;\n      // Just for test\n      //  const title = this.postForm.email\n      // Set tagsview title\n      //  this.setTagsViewTitle(title)\n      // Set page title\n      //  this.setPageTitle(title)\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView;\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`;\n      TagsViewModule.updateVisitedView(tagView);\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`;\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm();\n      } else {\n        console.error(\"Submit Error!\");\n        return false;\n      }\n    });\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields();\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true;\n      // this.postForm.name=arrangeLetters(this.postForm.name);\n      if (this.isEdit) {\n        await updatecities(this.postForm.id, this.postForm).then((res: any) => {\n          this.$notify({\n            title: \"Success\",\n            message: \"City saved successfully\",\n            type: \"success\",\n            duration: 2000,\n          });\n          router.push(\"/cities/list/\" + this.postForm.stateId);\n        });\n      } else {\n        this.postForm.stateId = this.stateId;\n        await addcities(this.postForm)\n          .then((res: any) => {\n            this.$notify({\n              title: \"Success\",\n              message: \"City saved successfully\",\n              type: \"success\",\n              duration: 2000,\n            });\n            router.push(\"/cities/list/\" + this.postForm.stateId);\n          })\n          // .catch((res: any) => {\n          //   \n          //   if (res.statusCode === 500) {\n          //     this.loading = false;\n          //     this.$notify({\n          //       title: \"Warning\",\n          //       message: \"City name already exist.\",\n          //       type: \"warning\",\n          //       duration: 3000,\n          //     });\n          //     this.resetForm();\n          //   }\n          // });\n      }\n    } catch (err) {\n      this.loading = false;\n      // this.$message(err.message);\n    }\n  }\n}\n"]}]}