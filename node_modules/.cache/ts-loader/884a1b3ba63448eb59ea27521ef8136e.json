{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/index.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/index.ts","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnRvZ2dsZUNsYXNzID0gZXhwb3J0cy5yZW1vdmVDbGFzcyA9IGV4cG9ydHMucGFyc2VUaW1lID0gZXhwb3J0cy5oYXNDbGFzcyA9IGV4cG9ydHMuZ2V0UXVlcnkgPSBleHBvcnRzLmdldERlc2NlbmRhbnRQcm9wID0gZXhwb3J0cy5mb3JtYXRKc29uID0gZXhwb3J0cy5hZGRDbGFzcyA9IHZvaWQgMDsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiKTsKLy8gUGFyc2UgdGhlIHRpbWUgdG8gc3RyaW5nCmNvbnN0IHBhcnNlVGltZSA9ICh0aW1lLCBjRm9ybWF0KSA9PiB7CiAgdmFyIF9kYXRlLCBfZGF0ZTIsIF9kYXRlMywgX2RhdGU0LCBfZGF0ZTUsIF9kYXRlNiwgX2RhdGU3OwogIGlmICh0aW1lID09PSB1bmRlZmluZWQpIHsKICAgIHJldHVybiBudWxsOwogIH0KICBjb25zdCBmb3JtYXQgPSBjRm9ybWF0IHx8ICd7eX0te219LXtkfSB7aH06e2l9OntzfSc7CiAgbGV0IGRhdGU7CiAgaWYgKHR5cGVvZiB0aW1lID09PSAnb2JqZWN0JykgewogICAgZGF0ZSA9IHRpbWU7CiAgfSBlbHNlIHsKICAgIGlmICh0eXBlb2YgdGltZSA9PT0gJ3N0cmluZycgJiYgL15bMC05XSskLy50ZXN0KHRpbWUpKSB7CiAgICAgIHRpbWUgPSBwYXJzZUludCh0aW1lKTsKICAgIH0KICAgIGlmICh0eXBlb2YgdGltZSA9PT0gJ251bWJlcicgJiYgdGltZS50b1N0cmluZygpLmxlbmd0aCA9PT0gMTApIHsKICAgICAgdGltZSA9IHRpbWUgKiAxMDAwOwogICAgfQogICAgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogIH0KICBjb25zdCBmb3JtYXRPYmogPSB7CiAgICB5OiAoX2RhdGUgPSBkYXRlKSA9PT0gbnVsbCB8fCBfZGF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGUuZ2V0RnVsbFllYXIoKSwKICAgIG06ICgoX2RhdGUyID0gZGF0ZSkgPT09IG51bGwgfHwgX2RhdGUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0ZTIuZ2V0TW9udGgoKSkgKyAxLAogICAgZDogKF9kYXRlMyA9IGRhdGUpID09PSBudWxsIHx8IF9kYXRlMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGUzLmdldERhdGUoKSwKICAgIGg6IChfZGF0ZTQgPSBkYXRlKSA9PT0gbnVsbCB8fCBfZGF0ZTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRlNC5nZXRIb3VycygpLAogICAgaTogKF9kYXRlNSA9IGRhdGUpID09PSBudWxsIHx8IF9kYXRlNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGU1LmdldE1pbnV0ZXMoKSwKICAgIHM6IChfZGF0ZTYgPSBkYXRlKSA9PT0gbnVsbCB8fCBfZGF0ZTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRlNi5nZXRTZWNvbmRzKCksCiAgICBhOiAoX2RhdGU3ID0gZGF0ZSkgPT09IG51bGwgfHwgX2RhdGU3ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0ZTcuZ2V0RGF5KCkKICB9OwogIGNvbnN0IHRpbWVTdHIgPSBmb3JtYXQucmVwbGFjZSgveyhbeW1kaGlzYV0pK30vZywgKHJlc3VsdCwga2V5KSA9PiB7CiAgICBjb25zdCB2YWx1ZSA9IGZvcm1hdE9ialtrZXldOwogICAgLy8gTm90ZTogZ2V0RGF5KCkgcmV0dXJucyAwIG9uIFN1bmRheQogICAgaWYgKGtleSA9PT0gJ2EnKSB7CiAgICAgIHJldHVybiBbJ+aXpScsICfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrSddW3ZhbHVlXTsKICAgIH0KICAgIGlmIChyZXN1bHQubGVuZ3RoID4gMCAmJiB2YWx1ZSA8IDEwKSB7CiAgICAgIHJldHVybiAnMCcgKyB2YWx1ZTsKICAgIH0KICAgIHJldHVybiBTdHJpbmcodmFsdWUpIHx8ICcwJzsKICB9KTsKICByZXR1cm4gdGltZVN0cjsKfTsKLy8gRm9ybWF0IGFuZCBmaWx0ZXIganNvbiBkYXRhIHVzaW5nIGZpbHRlcktleXMgYXJyYXkKZXhwb3J0cy5wYXJzZVRpbWUgPSBwYXJzZVRpbWU7CmNvbnN0IGZvcm1hdEpzb24gPSAoZmlsdGVyS2V5cywganNvbkRhdGEpID0+IGpzb25EYXRhLm1hcChkYXRhID0+IGZpbHRlcktleXMubWFwKGtleSA9PiB7CiAgaWYgKFsnY3JlYXRlZFRpbWVzdGFtcCcsICd0aW1lc3RhbXAnXS5pbmRleE9mKGtleSkgPiAtMSkgewogICAgcmV0dXJuIHBhcnNlVGltZShkYXRhW2tleV0pOwogIH0gZWxzZSBpZiAoa2V5ID09PSAnZW5hYmxlZCcpIHsKICAgIHJldHVybiBkYXRhW2tleV0gPyAnZW5hYmxlZCcgOiAnZGlzYWJsZWQnOwogIH0gZWxzZSBpZiAoa2V5LmluZGV4T2YoJy4nKSA+IDApIHsKICAgIHJldHVybiBnZXREZXNjZW5kYW50UHJvcChkYXRhLCBrZXkpOwogICAgLy8gcmV0dXJuIGRhdGFba2V5LnN1YnN0cigwLCBrZXkuaW5kZXhPZignLicpKV1ba2V5LnN1YnN0cihrZXkuaW5kZXhPZignLicpICsgMSldCiAgfSBlbHNlIHsKICAgIHJldHVybiBkYXRhW2tleV07CiAgfQp9KSk7Ci8vIENoZWNrIGlmIGFuIGVsZW1lbnQgaGFzIGEgY2xhc3MKZXhwb3J0cy5mb3JtYXRKc29uID0gZm9ybWF0SnNvbjsKY29uc3QgaGFzQ2xhc3MgPSAoZWxlLCBjbGFzc05hbWUpID0+IHsKICByZXR1cm4gISFlbGUuY2xhc3NOYW1lLm1hdGNoKG5ldyBSZWdFeHAoJyhcXHN8XiknICsgY2xhc3NOYW1lICsgJyhcXHN8JCknKSk7Cn07Ci8vIEFkZCBjbGFzcyB0byBlbGVtZW50CmV4cG9ydHMuaGFzQ2xhc3MgPSBoYXNDbGFzczsKY29uc3QgYWRkQ2xhc3MgPSAoZWxlLCBjbGFzc05hbWUpID0+IHsKICBpZiAoIWhhc0NsYXNzKGVsZSwgY2xhc3NOYW1lKSkgZWxlLmNsYXNzTmFtZSArPSAnICcgKyBjbGFzc05hbWU7Cn07Ci8vIFJlbW92ZSBjbGFzcyBmcm9tIGVsZW1lbnQKZXhwb3J0cy5hZGRDbGFzcyA9IGFkZENsYXNzOwpjb25zdCByZW1vdmVDbGFzcyA9IChlbGUsIGNsYXNzTmFtZSkgPT4gewogIGlmIChoYXNDbGFzcyhlbGUsIGNsYXNzTmFtZSkpIHsKICAgIGNvbnN0IHJlZyA9IG5ldyBSZWdFeHAoJyhcXHN8XiknICsgY2xhc3NOYW1lICsgJyhcXHN8JCknKTsKICAgIGVsZS5jbGFzc05hbWUgPSBlbGUuY2xhc3NOYW1lLnJlcGxhY2UocmVnLCAnICcpOwogIH0KfTsKLy8gVG9nZ2xlIGNsYXNzIGZvciB0aGUgc2VsZWN0ZWQgZWxlbWVudApleHBvcnRzLnJlbW92ZUNsYXNzID0gcmVtb3ZlQ2xhc3M7CmNvbnN0IHRvZ2dsZUNsYXNzID0gKGVsZSwgY2xhc3NOYW1lKSA9PiB7CiAgaWYgKCFlbGUgfHwgIWNsYXNzTmFtZSkgewogICAgcmV0dXJuOwogIH0KICBsZXQgY2xhc3NTdHJpbmcgPSBlbGUuY2xhc3NOYW1lOwogIGNvbnN0IG5hbWVJbmRleCA9IGNsYXNzU3RyaW5nLmluZGV4T2YoY2xhc3NOYW1lKTsKICBpZiAobmFtZUluZGV4ID09PSAtMSkgewogICAgY2xhc3NTdHJpbmcgKz0gJycgKyBjbGFzc05hbWU7CiAgfSBlbHNlIHsKICAgIGNsYXNzU3RyaW5nID0gY2xhc3NTdHJpbmcuc3Vic3RyKDAsIG5hbWVJbmRleCkgKyBjbGFzc1N0cmluZy5zdWJzdHIobmFtZUluZGV4ICsgY2xhc3NOYW1lLmxlbmd0aCk7CiAgfQogIGVsZS5jbGFzc05hbWUgPSBjbGFzc1N0cmluZzsKfTsKZXhwb3J0cy50b2dnbGVDbGFzcyA9IHRvZ2dsZUNsYXNzOwpjb25zdCBnZXRRdWVyeSA9IHF1ZXJ5ID0+IHsKICBjb25zdCBwcm9jZXNzZWRRdWVyeSA9IE9iamVjdC5hc3NpZ24oe30sIHF1ZXJ5KTsKICAvLyBzZXQgZmlsdGVyIGFzIGVtcHR5CiAgcHJvY2Vzc2VkUXVlcnkuZmlsdGVyID0gW107CiAgLy8gY2hlY2sgZm9yIGZpbHRlcgogIGlmICgnZmlsdGVyJyBpbiBxdWVyeSkgewogICAgLy8gbG9vcCBvdmVyIGZpZWxkcyBhbmQgY2hlY2sgZm9yIHZhbHVlcwogICAgT2JqZWN0LmVudHJpZXMocXVlcnkuZmlsdGVyKS5mb3JFYWNoKChbZmllbGQsIGNvbmRpdGlvbl0pID0+IHsKICAgICAgLy8gY2hlY2sgaWYgZmllbGQgdmFsdWUgaGFzIGJlIHNldAogICAgICBpZiAoZmllbGQgaW4gcXVlcnkgJiYgW3VuZGVmaW5lZCwgJyddLmluZGV4T2YocXVlcnlbZmllbGRdKSA9PT0gLTEpIHsKICAgICAgICBpZiAoZmllbGQuaW5kZXhPZignXycpID49IDApIHsKICAgICAgICAgIHZhciBmaWVsZF90ZW1wID0gZmllbGQuc3BsaXQoJ18nKVswXTsKICAgICAgICAgIHByb2Nlc3NlZFF1ZXJ5LmZpbHRlci5wdXNoKGZpZWxkX3RlbXAgKyAnfHwnICsgY29uZGl0aW9uICsgJ3x8JyArICciJyArIHByb2Nlc3NlZFF1ZXJ5W2ZpZWxkXSArICciJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHByb2Nlc3NlZFF1ZXJ5LmZpbHRlci5wdXNoKGZpZWxkICsgJ3x8JyArIGNvbmRpdGlvbiArICd8fCcgKyAnIicgKyBwcm9jZXNzZWRRdWVyeVtmaWVsZF0gKyAnIicpOwogICAgICAgIH0KICAgICAgICBkZWxldGUgcHJvY2Vzc2VkUXVlcnlbZmllbGRdOwogICAgICB9CiAgICB9KTsKICB9CiAgcmV0dXJuIHByb2Nlc3NlZFF1ZXJ5Owp9OwpleHBvcnRzLmdldFF1ZXJ5ID0gZ2V0UXVlcnk7CmNvbnN0IGdldERlc2NlbmRhbnRQcm9wID0gKG9iaiwgZGVzYykgPT4gewogIHZhciBhcnIgPSBkZXNjLnNwbGl0KCcuJyk7CiAgd2hpbGUgKGFyci5sZW5ndGggJiYgKG9iaiA9IG9ialthcnIuc2hpZnQoKV0pKTsKICByZXR1cm4gb2JqOwp9OwpleHBvcnRzLmdldERlc2NlbmRhbnRQcm9wID0gZ2V0RGVzY2VuZGFudFByb3A7"},{"version":3,"mappings":";;;;;;;AAAA;AACO,MAAMA,SAAS,GAAG,CACvBC,IAA+B,EAC/BC,OAAgB,KACC;EAAA;EACjB,IAAID,IAAI,KAAKE,SAAS,EAAE;IACtB,OAAO,IAAI;;EAEb,MAAMC,MAAM,GAAGF,OAAO,IAAI,yBAAyB;EACnD,IAAIG,IAAU;EACd,IAAI,OAAOJ,IAAI,KAAK,QAAQ,EAAE;IAC5BI,IAAI,GAAGJ,IAAY;GACpB,MAAM;IACL,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,UAAU,CAACK,IAAI,CAACL,IAAI,CAAC,EAAE;MACrDA,IAAI,GAAGM,QAAQ,CAACN,IAAI,CAAC;;IAEvB,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACO,QAAQ,EAAE,CAACC,MAAM,KAAK,EAAE,EAAE;MAC7DR,IAAI,GAAGA,IAAI,GAAG,IAAI;;IAEpBI,IAAI,GAAG,IAAIK,IAAI,CAACT,IAAI,CAAC;;EAEvB,MAAMU,SAAS,GAA8B;IAC3CC,CAAC,WAAEP,IAAI,0CAAJ,MAAMQ,WAAW,EAAE;IACtBC,CAAC,EAAE,eAAI,2CAAJ,OAAMC,QAAQ,EAAE,IAAG,CAAC;IACvBC,CAAC,YAAEX,IAAI,2CAAJ,OAAMY,OAAO,EAAE;IAClBC,CAAC,YAAEb,IAAI,2CAAJ,OAAMc,QAAQ,EAAE;IACnBC,CAAC,YAAEf,IAAI,2CAAJ,OAAMgB,UAAU,EAAE;IACrBC,CAAC,YAAEjB,IAAI,2CAAJ,OAAMkB,UAAU,EAAE;IACrBC,CAAC,YAAEnB,IAAI,2CAAJ,OAAMoB,MAAM;GAChB;EACD,MAAMC,OAAO,GAAGtB,MAAM,CAACuB,OAAO,CAAC,iBAAiB,EAAE,CAACC,MAAM,EAAEC,GAAG,KAAI;IAChE,MAAMC,KAAK,GAAGnB,SAAS,CAACkB,GAAG,CAAC;IAC5B;IACA,IAAIA,GAAG,KAAK,GAAG,EAAE;MACf,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC;;IAEnD,IAAIF,MAAM,CAACnB,MAAM,GAAG,CAAC,IAAIqB,KAAK,GAAG,EAAE,EAAE;MACnC,OAAO,GAAG,GAAGA,KAAK;;IAEpB,OAAOC,MAAM,CAACD,KAAK,CAAC,IAAI,GAAG;EAC7B,CAAC,CAAC;EACF,OAAOJ,OAAO;AAChB,CAAC;AAED;AAAA;AACO,MAAMM,UAAU,GAAG,CAACC,UAAe,EAAEC,QAAa,KACvDA,QAAQ,CAACC,GAAG,CAAEC,IAAS,IAAKH,UAAU,CAACE,GAAG,CAAEN,GAAW,IAAI;EACzD,IAAI,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAACQ,OAAO,CAACR,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IACvD,OAAO7B,SAAS,CAACoC,IAAI,CAACP,GAAG,CAAC,CAAC;GAC5B,MAAM,IAAIA,GAAG,KAAK,SAAS,EAAE;IAC5B,OAAOO,IAAI,CAACP,GAAG,CAAC,GAAG,SAAS,GAAG,UAAU;GAC1C,MAAM,IAAIA,GAAG,CAACQ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IAC/B,OAAOC,iBAAiB,CAACF,IAAI,EAAEP,GAAG,CAAC;IACnC;GACD,MAAM;IACL,OAAOO,IAAI,CAACP,GAAG,CAAC;;AAEpB,CAAC,CAAC,CAAC;AAEL;AAAA;AACO,MAAMU,QAAQ,GAAG,CAACC,GAAgB,EAAEC,SAAiB,KAAI;EAC9D,OAAO,CAAC,CAACD,GAAG,CAACC,SAAS,CAACC,KAAK,CAAC,IAAIC,MAAM,CAAC,SAAS,GAAGF,SAAS,GAAG,SAAS,CAAC,CAAC;AAC7E,CAAC;AAED;AAAA;AACO,MAAMG,QAAQ,GAAG,CAACJ,GAAgB,EAAEC,SAAiB,KAAI;EAC9D,IAAI,CAACF,QAAQ,CAACC,GAAG,EAAEC,SAAS,CAAC,EAAED,GAAG,CAACC,SAAS,IAAI,GAAG,GAAGA,SAAS;AACjE,CAAC;AAED;AAAA;AACO,MAAMI,WAAW,GAAG,CAACL,GAAgB,EAAEC,SAAiB,KAAI;EACjE,IAAIF,QAAQ,CAACC,GAAG,EAAEC,SAAS,CAAC,EAAE;IAC5B,MAAMK,GAAG,GAAG,IAAIH,MAAM,CAAC,SAAS,GAAGF,SAAS,GAAG,SAAS,CAAC;IACzDD,GAAG,CAACC,SAAS,GAAGD,GAAG,CAACC,SAAS,CAACd,OAAO,CAACmB,GAAG,EAAE,GAAG,CAAC;;AAEnD,CAAC;AAED;AAAA;AACO,MAAMC,WAAW,GAAG,CAACP,GAAgB,EAAEC,SAAiB,KAAI;EACjE,IAAI,CAACD,GAAG,IAAI,CAACC,SAAS,EAAE;IACtB;;EAEF,IAAIO,WAAW,GAAGR,GAAG,CAACC,SAAS;EAC/B,MAAMQ,SAAS,GAAGD,WAAW,CAACX,OAAO,CAACI,SAAS,CAAC;EAChD,IAAIQ,SAAS,KAAK,CAAC,CAAC,EAAE;IACpBD,WAAW,IAAI,EAAE,GAAGP,SAAS;GAC9B,MAAM;IACLO,WAAW,GACTA,WAAW,CAACE,MAAM,CAAC,CAAC,EAAED,SAAS,CAAC,GAChCD,WAAW,CAACE,MAAM,CAACD,SAAS,GAAGR,SAAS,CAAChC,MAAM,CAAC;;EAEpD+B,GAAG,CAACC,SAAS,GAAGO,WAAW;AAC7B,CAAC;AAAA;AAEM,MAAMG,QAAQ,GAAIC,KAAU,IAAI;EACrC,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,KAAK,CAAC;EAC/C;EACAC,cAAc,CAACG,MAAM,GAAG,EAAE;EAC1B;EACA,IAAI,QAAQ,IAAIJ,KAAK,EAAE;IACrB;IACAE,MAAM,CAACG,OAAO,CAACL,KAAK,CAACI,MAAM,CAAC,CAACE,OAAO,CAAC,CAAC,CAACC,KAAK,EAAEC,SAAS,CAAC,KAAI;MAC1D;MACA,IAAID,KAAK,IAAIP,KAAK,IAAI,CAACjD,SAAS,EAAE,EAAE,CAAC,CAACkC,OAAO,CAACe,KAAK,CAACO,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAClE,IAAIA,KAAK,CAACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;UAC3B,IAAIwB,UAAU,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACpCT,cAAc,CAACG,MAAM,CAACO,IAAI,CAACF,UAAU,GAAG,IAAI,GAAGD,SAAS,GAAG,IAAI,GAAG,GAAG,GAAGP,cAAc,CAACM,KAAK,CAAC,GAAG,GAAG,CAAC;SACrG,MAAM;UACLN,cAAc,CAACG,MAAM,CAACO,IAAI,CAACJ,KAAK,GAAG,IAAI,GAAGC,SAAS,GAAG,IAAI,GAAG,GAAG,GAAGP,cAAc,CAACM,KAAK,CAAC,GAAG,GAAG,CAAC;;QAEjG,OAAON,cAAc,CAACM,KAAK,CAAC;;IAEhC,CAAC,CAAC;;EAEJ,OAAON,cAAc;AACvB,CAAC;AAAA;AAEM,MAAMf,iBAAiB,GAAG,CAAC0B,GAAQ,EAAEC,IAAS,KAAI;EACvD,IAAIC,GAAG,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;EACzB,OAAOI,GAAG,CAACzD,MAAM,KAAKuD,GAAG,GAAGA,GAAG,CAACE,GAAG,CAACC,KAAK,EAAE,CAAC,CAAC,CAAC;EAC9C,OAAOH,GAAG;AACZ,CAAC;AAAA","names":["parseTime","time","cFormat","undefined","format","date","test","parseInt","toString","length","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","timeStr","replace","result","key","value","String","formatJson","filterKeys","jsonData","map","data","indexOf","getDescendantProp","hasClass","ele","className","match","RegExp","addClass","removeClass","reg","toggleClass","classString","nameIndex","substr","getQuery","query","processedQuery","Object","assign","filter","entries","forEach","field","condition","field_temp","split","push","obj","desc","arr","shift"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/index.ts"],"sourcesContent":["// Parse the time to string\nexport const parseTime = (\n  time?: object | string | number,\n  cFormat?: string\n): string | null => {\n  if (time === undefined) {\n    return null\n  }\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\n  let date: Date\n  if (typeof time === 'object') {\n    date = time as Date\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time)\n    }\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000\n    }\n    date = new Date(time)\n  }\n  const formatObj: { [key: string]: number } = {\n    y: date?.getFullYear(),\n    m: date?.getMonth() + 1,\n    d: date?.getDate(),\n    h: date?.getHours(),\n    i: date?.getMinutes(),\n    s: date?.getSeconds(),\n    a: date?.getDay()\n  }\n  const timeStr = format.replace(/{([ymdhisa])+}/g, (result, key) => {\n    const value = formatObj[key]\n    // Note: getDay() returns 0 on Sunday\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value]\n    }\n    if (result.length > 0 && value < 10) {\n      return '0' + value\n    }\n    return String(value) || '0'\n  })\n  return timeStr\n}\n\n// Format and filter json data using filterKeys array\nexport const formatJson = (filterKeys: any, jsonData: any) =>\n  jsonData.map((data: any) => filterKeys.map((key: string) => {\n    if (['createdTimestamp', 'timestamp'].indexOf(key) > -1) {\n      return parseTime(data[key])\n    } else if (key === 'enabled') {\n      return data[key] ? 'enabled' : 'disabled'\n    } else if (key.indexOf('.') > 0) {\n      return getDescendantProp(data, key)\n      // return data[key.substr(0, key.indexOf('.'))][key.substr(key.indexOf('.') + 1)]\n    } else {\n      return data[key]\n    }\n  }))\n\n// Check if an element has a class\nexport const hasClass = (ele: HTMLElement, className: string) => {\n  return !!ele.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'))\n}\n\n// Add class to element\nexport const addClass = (ele: HTMLElement, className: string) => {\n  if (!hasClass(ele, className)) ele.className += ' ' + className\n}\n\n// Remove class from element\nexport const removeClass = (ele: HTMLElement, className: string) => {\n  if (hasClass(ele, className)) {\n    const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n    ele.className = ele.className.replace(reg, ' ')\n  }\n}\n\n// Toggle class for the selected element\nexport const toggleClass = (ele: HTMLElement, className: string) => {\n  if (!ele || !className) {\n    return\n  }\n  let classString = ele.className\n  const nameIndex = classString.indexOf(className)\n  if (nameIndex === -1) {\n    classString += '' + className\n  } else {\n    classString =\n      classString.substr(0, nameIndex) +\n      classString.substr(nameIndex + className.length)\n  }\n  ele.className = classString\n}\n\nexport const getQuery = (query: any) => {\n  const processedQuery = Object.assign({}, query)\n  // set filter as empty\n  processedQuery.filter = []\n  // check for filter\n  if ('filter' in query) {\n    // loop over fields and check for values\n    Object.entries(query.filter).forEach(([field, condition]) => {\n      // check if field value has be set\n      if (field in query && [undefined, ''].indexOf(query[field]) === -1) {\n        if (field.indexOf('_') >= 0) {\n          var field_temp = field.split('_')[0]\n          processedQuery.filter.push(field_temp + '||' + condition + '||' + '\"' + processedQuery[field] + '\"')\n        } else {\n          processedQuery.filter.push(field + '||' + condition + '||' + '\"' + processedQuery[field] + '\"')\n        }\n        delete processedQuery[field]\n      }\n    })\n  }\n  return processedQuery\n}\n\nexport const getDescendantProp = (obj: any, desc: any) => {\n  var arr = desc.split('.')\n  while (arr.length && (obj = obj[arr.shift()]));\n  return obj\n}\n"]}]}