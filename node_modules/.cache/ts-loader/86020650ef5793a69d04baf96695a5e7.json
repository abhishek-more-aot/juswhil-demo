{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/adminsRoles.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/adminsRoles.ts","mtime":1668754947338},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVBZG1pbnNSb2xlID0gZXhwb3J0cy5nZXRSb3V0ZXMgPSBleHBvcnRzLmdldEFkbWluc1JvbGVzID0gZXhwb3J0cy5nZXRBZG1pbnNSb2xlQnlJZCA9IGV4cG9ydHMuZGVsZXRlQWRtaW5zUm9sZSA9IGV4cG9ydHMuZGVmYXVsdEFkbWluc1JvbGVEYXRhID0gZXhwb3J0cy5jcmVhdGVBZG1pbnNSb2xlID0gdm9pZCAwOwp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKY29uc3QgZGVmYXVsdEFkbWluc1JvbGVEYXRhID0gewogIGlkOiAwLAogIGVuYWJsZWQ6IHRydWUsCiAgbmFtZTogJycKfTsKZXhwb3J0cy5kZWZhdWx0QWRtaW5zUm9sZURhdGEgPSBkZWZhdWx0QWRtaW5zUm9sZURhdGE7CmNvbnN0IGdldEFkbWluc1JvbGVzID0gcGFyYW1zID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL2FkbWlucy1yb2xlcycsCiAgbWV0aG9kOiAnZ2V0JywKICBwYXJhbXMKfSk7CmV4cG9ydHMuZ2V0QWRtaW5zUm9sZXMgPSBnZXRBZG1pbnNSb2xlczsKY29uc3QgZ2V0QWRtaW5zUm9sZUJ5SWQgPSBpZCA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogYC9hZG1pbnMtcm9sZXMvJHtpZH1gLAogIG1ldGhvZDogJ2dldCcKfSk7CmV4cG9ydHMuZ2V0QWRtaW5zUm9sZUJ5SWQgPSBnZXRBZG1pbnNSb2xlQnlJZDsKY29uc3QgdXBkYXRlQWRtaW5zUm9sZSA9IChpZCwgZGF0YSkgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvYWRtaW5zLXJvbGVzLyR7aWR9YCwKICBtZXRob2Q6ICdwYXRjaCcsCiAgZGF0YQp9KTsKZXhwb3J0cy51cGRhdGVBZG1pbnNSb2xlID0gdXBkYXRlQWRtaW5zUm9sZTsKY29uc3QgZGVsZXRlQWRtaW5zUm9sZSA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2FkbWlucy1yb2xlcy8ke2lkfWAsCiAgbWV0aG9kOiAnZGVsZXRlJwp9KTsKZXhwb3J0cy5kZWxldGVBZG1pbnNSb2xlID0gZGVsZXRlQWRtaW5zUm9sZTsKY29uc3QgY3JlYXRlQWRtaW5zUm9sZSA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvYWRtaW5zLXJvbGVzLycsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5jcmVhdGVBZG1pbnNSb2xlID0gY3JlYXRlQWRtaW5zUm9sZTsKY29uc3QgZ2V0Um91dGVzID0gcGFyYW1zID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL3JvdXRlcycsCiAgbWV0aG9kOiAnZ2V0JywKICBwYXJhbXMKfSk7CmV4cG9ydHMuZ2V0Um91dGVzID0gZ2V0Um91dGVzOw=="},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,qBAAqB,GAAoB;EACpDC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE;CACP;AAAA;AACM,MAAMC,cAAc,GAAIC,MAAW,IACxC,oBAAO,EAAC;EACNC,GAAG,EAAE,eAAe;EACpBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,iBAAiB,GAAIP,EAAU,IAC1C,oBAAO,EAAC;EACNK,GAAG,EAAE,iBAAiBL,EAAE,EAAE;EAC1BM,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,gBAAgB,GAAG,CAACR,EAAU,EAAES,IAAS,KACpD,oBAAO,EAAC;EACNJ,GAAG,EAAE,iBAAiBL,EAAE,EAAE;EAC1BM,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEG,MAAMC,gBAAgB,GAAIV,EAAU,IACzC,oBAAO,EAAC;EACNK,GAAG,EAAE,iBAAiBL,EAAE,EAAE;EAC1BM,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMK,gBAAgB,GAAIF,IAAS,IACxC,oBAAO,EAAC;EACNJ,GAAG,EAAE,gBAAgB;EACrBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AACG,MAAMG,SAAS,GAAIR,MAAW,IACnC,oBAAO,EAAC;EACNC,GAAG,EAAE,SAAS;EACdC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA","names":["defaultAdminsRoleData","id","enabled","name","getAdminsRoles","params","url","method","getAdminsRoleById","updateAdminsRole","data","deleteAdminsRole","createAdminsRole","getRoutes"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/adminsRoles.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { IAdminsRoleData } from './types'\n\nexport const defaultAdminsRoleData: IAdminsRoleData = {\n  id: 0,\n  enabled: true,\n  name: ''\n}\nexport const getAdminsRoles = (params: any) =>\n  request({\n    url: '/admins-roles',\n    method: 'get',\n    params\n  })\n\nexport const getAdminsRoleById = (id: number) =>\n  request({\n    url: `/admins-roles/${id}`,\n    method: 'get'\n  })\n\nexport const updateAdminsRole = (id: number, data: any) =>\n  request({\n    url: `/admins-roles/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteAdminsRole = (id: number) =>\n  request({\n    url: `/admins-roles/${id}`,\n    method: 'delete'\n  })\n\nexport const createAdminsRole = (data: any) =>\n  request({\n    url: '/admins-roles/',\n    method: 'post',\n    data\n  })\nexport const getRoutes = (params: any) =>\n  request({\n    url: '/routes',\n    method: 'get',\n    params\n  })\n"]}]}