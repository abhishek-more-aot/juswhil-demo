{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/FileUpload/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/FileUpload/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnZhciBfdHNsaWIgPSByZXF1aXJlKCJ0c2xpYiIpOwp2YXIgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yID0gcmVxdWlyZSgidnVlLXByb3BlcnR5LWRlY29yYXRvciIpOwp2YXIgX2NvbW1vbiA9IHJlcXVpcmUoIkAvYXBpL2NvbW1vbiIpOwpsZXQgZGVmYXVsdF8xID0gY2xhc3MgZGVmYXVsdF8xIGV4dGVuZHMgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlZ1ZSB7CiAgYmVmb3JlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7CiAgICBpZiAodGhpcy5tdWx0aXBsZSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmaWxlTGlzdC5sZW5ndGggPiAxOyAvLyBmb3Igc2luZ2xlIGZpbGUKICB9CgogIGJlZm9yZUZpbGVVcGxvYWQoZmlsZSkgewogICAgY29uc3QgZXh0ZW5zdGlvbiA9IGZpbGUubmFtZS5zdWJzdHIoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykpOwogICAgY29uc3QgYWNjZXB0YWJsZSA9IHRoaXMuYWNjZXB0LnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uIChhY2NlcHQpIHsKICAgICAgcmV0dXJuIGFjY2VwdC50cmltKCk7CiAgICB9KTsKICAgIGNvbnN0IGlzQWxsb3dlZFR5cGUgPSBhY2NlcHRhYmxlLmluZGV4T2YoZXh0ZW5zdGlvbikgPiAtMTsKICAgIGNvbnN0IGlzTGVzc1RoYW5NYXhTaXplID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCB0aGlzLm1heFNpemU7CiAgICBpZiAoIWlzQWxsb3dlZFR5cGUpIHsKICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignZmlsZSB0eXBlIG5vdCBwZXJtaXR0ZWQhJyk7CiAgICB9CiAgICBpZiAoIWlzTGVzc1RoYW5NYXhTaXplKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ0ljb24gc2l6ZSBjYW4gbm90IGV4Y2VlZCAyTUIhJyk7CiAgICB9CiAgICByZXR1cm4gaXNBbGxvd2VkVHlwZSAmJiBpc0xlc3NUaGFuTWF4U2l6ZTsKICB9CiAgb25GaWxlVHJhbnNmZXJFcnJvcihlcnIsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICBjb25zb2xlLmxvZyhlcnIpOyAvLyBtdWJhc3NoaXIKICB9CgogIG9uRmlsZVRyYW5zZmVyU3VjY2VzcyhyZXNwb25zZSwgZmlsZSwgZmlsZUxpc3QpIHsKICAgIHRoaXMuZmlsZUxpc3QucHVzaChmaWxlKTsKICAgIC8vIGlmIHNpbmdsZSBmaWxlIHRoZW4gd2UgcmVtb3ZlIG90aGVyIGZpbGUKICAgIGlmICghdGhpcy5tdWx0aXBsZSAmJiB0aGlzLmZpbGVMaXN0Lmxlbmd0aCA+IDEpIHsKICAgICAgdGhpcy5maWxlTGlzdC5zaGlmdCgpOwogICAgfQogICAgLy8gc2VuZCBjaGFuZ2UKICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGZpbGUpOwogIH0KICB1cGxvYWRGaWxlKGZpbGUpIHsKICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgIGRhdGEuYXBwZW5kKCdmaWxlJywgZmlsZS5maWxlKTsKICAgIHJldHVybiAoMCwgX2NvbW1vbi51cGxvYWRGaWxlKShkYXRhLCBldmVudCA9PiB7CiAgICAgIGNvbnNvbGUubG9nKGV2ZW50KTsgLy8gbXViYXNzaGlyCiAgICB9KTsKICB9Cn07CgooMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlByb3ApKHsKICBkZWZhdWx0OiAnLmpwZywgLmpwZWcsIC5wbmcnCn0pXSwgZGVmYXVsdF8xLnByb3RvdHlwZSwgImFjY2VwdCIsIHZvaWQgMCk7CigwLCBfdHNsaWIuX19kZWNvcmF0ZSkoWygwLCBfdnVlUHJvcGVydHlEZWNvcmF0b3IuUHJvcCkoewogIGRlZmF1bHQ6IGZhbHNlCn0pXSwgZGVmYXVsdF8xLnByb3RvdHlwZSwgIm11bHRpcGxlIiwgdm9pZCAwKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbKDAsIF92dWVQcm9wZXJ0eURlY29yYXRvci5Qcm9wKSh7CiAgZGVmYXVsdDogMgp9KV0sIGRlZmF1bHRfMS5wcm90b3R5cGUsICJtYXhTaXplIiwgdm9pZCAwKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbKDAsIF92dWVQcm9wZXJ0eURlY29yYXRvci5Qcm9wKSh7CiAgZGVmYXVsdDogW10KfSldLCBkZWZhdWx0XzEucHJvdG90eXBlLCAiZmlsZUxpc3QiLCB2b2lkIDApOwpkZWZhdWx0XzEgPSAoMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLkNvbXBvbmVudCkoewogIG5hbWU6ICdGaWxlVXBsb2FkJwp9KV0sIGRlZmF1bHRfMSk7CnZhciBfZGVmYXVsdCA9IGRlZmF1bHRfMTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"mappings":";;;;;;;;AACA;AACA;AAKA,+BAAqB,SAAQA,yBAAG;EAMtBC,YAAY,CAACC,IAAS,EAAEC,QAAY;IAC1C,IAAI,IAAI,CAACC,QAAQ,EAAE;MACjB,OAAO,IAAI;;IAEb,OAAOD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAC;EAC7B;;EAEQC,gBAAgB,CAACJ,IAAS;IAChC,MAAMK,UAAU,GAAGL,IAAI,CAACM,IAAI,CAACC,MAAM,CAACP,IAAI,CAACM,IAAI,CAACE,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/D,MAAMC,UAAU,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAASF,MAAM;MAC3D,OAAOA,MAAM,CAACG,IAAI,EAAE;IACtB,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAGL,UAAU,CAACM,OAAO,CAACV,UAAU,CAAC,GAAG,CAAC,CAAC;IACzD,MAAMW,iBAAiB,GAAGhB,IAAI,CAACiB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAACC,OAAO;IAEhE,IAAI,CAACJ,aAAa,EAAE;MAClB,IAAI,CAACK,QAAQ,CAACC,KAAK,CAAC,0BAA0B,CAAC;;IAEjD,IAAI,CAACJ,iBAAiB,EAAE;MACtB,IAAI,CAACG,QAAQ,CAACC,KAAK,CAAC,+BAA+B,CAAC;;IAEtD,OAAON,aAAa,IAAIE,iBAAiB;EAC3C;EAEQK,mBAAmB,CAACC,GAAQ,EAAEtB,IAAS,EAAEC,QAAY;IAC3DsB,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,EAAC;EACnB;;EAEQG,qBAAqB,CAACC,QAAa,EAAE1B,IAAS,EAAEC,QAAY;IAClE,IAAI,CAACA,QAAQ,CAAC0B,IAAI,CAAC3B,IAAI,CAAC;IACxB;IACA,IAAI,CAAC,IAAI,CAACE,QAAQ,IAAI,IAAI,CAACD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;MAC9C,IAAI,CAACF,QAAQ,CAAC2B,KAAK,EAAE;;IAEvB;IACA,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE7B,IAAI,CAAC;EAC5B;EAEQ8B,UAAU,CAAC9B,IAAS;IAC1B,MAAM+B,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEjC,IAAI,CAACA,IAAI,CAAC;IAE9B,OAAO,sBAAU,EAAC+B,IAAI,EAAGG,KAAoB,IAAI;MAC/CX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC,EAAC;IACrB,CAAC,CAAC;EACJ;CACD;;AApDyC,wBAAvC,8BAAI,EAAC;EAAEC,OAAO,EAAE;AAAmB,CAAE,CAAC,yCAAyB;AACtC,wBAAzB,8BAAI,EAAC;EAAEA,OAAO,EAAE;AAAK,CAAE,CAAC,2CAA4B;AAC/B,wBAArB,8BAAI,EAAC;EAAEA,OAAO,EAAE;AAAC,CAAE,CAAC,0CAA0B;AACxB,wBAAtB,8BAAI,EAAC;EAAEA,OAAO,EAAE;AAAE,CAAE,CAAC,2CAA+B;AAJvDC,oCAHC,mCAAS,EAAC;EACT9B,IAAI,EAAE;CACP,CAAC,aAsDD;AAAA","names":["Vue","beforeRemove","file","fileList","multiple","length","beforeFileUpload","extenstion","name","substr","lastIndexOf","acceptable","accept","split","map","trim","isAllowedType","indexOf","isLessThanMaxSize","size","maxSize","$message","error","onFileTransferError","err","console","log","onFileTransferSuccess","response","push","shift","$emit","uploadFile","data","FormData","append","event","default","default_1"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/FileUpload/index.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { uploadFile } from '@/api/common'\n\n@Component({\n  name: 'FileUpload'\n})\nexport default class extends Vue {\n  @Prop({ default: '.jpg, .jpeg, .png' }) private accept!: string;\n  @Prop({ default: false }) private multiple!: boolean;\n  @Prop({ default: 2 }) private maxSize!: number;\n  @Prop({ default: [] }) private fileList!: Array<any>;\n\n  private beforeRemove(file: any, fileList: []) {\n    if (this.multiple) {\n      return true\n    }\n    return fileList.length > 1 // for single file\n  }\n\n  private beforeFileUpload(file: any) {\n    const extenstion = file.name.substr(file.name.lastIndexOf('.'))\n    const acceptable = this.accept.split(',').map(function(accept) {\n      return accept.trim()\n    })\n\n    const isAllowedType = acceptable.indexOf(extenstion) > -1\n    const isLessThanMaxSize = file.size / 1024 / 1024 < this.maxSize\n\n    if (!isAllowedType) {\n      this.$message.error('file type not permitted!')\n    }\n    if (!isLessThanMaxSize) {\n      this.$message.error('Icon size can not exceed 2MB!')\n    }\n    return isAllowedType && isLessThanMaxSize\n  }\n\n  private onFileTransferError(err: any, file: any, fileList: []) {\n    console.log(err) // mubasshir\n  }\n\n  private onFileTransferSuccess(response: any, file: any, fileList: []) {\n    this.fileList.push(file)\n    // if single file then we remove other file\n    if (!this.multiple && this.fileList.length > 1) {\n      this.fileList.shift()\n    }\n    // send change\n    this.$emit('change', file)\n  }\n\n  private uploadFile(file: any) {\n    const data = new FormData()\n    data.append('file', file.file)\n\n    return uploadFile(data, (event: ProgressEvent) => {\n      console.log(event) // mubasshir\n    })\n  }\n}\n"]}]}