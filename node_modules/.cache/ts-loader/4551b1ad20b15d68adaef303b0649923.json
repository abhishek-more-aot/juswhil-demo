{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/news/news.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/news/news.ts","mtime":1669011993601},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVPcmRlciA9IGV4cG9ydHMudXBkYXRlTmV3cyA9IGV4cG9ydHMuZ2V0TmV3c0J5SWQgPSBleHBvcnRzLmdldE5ld3MgPSBleHBvcnRzLmdldEZpbHRlcnMgPSBleHBvcnRzLmRlbGV0ZU5ld3MgPSBleHBvcnRzLmRlZmF1bHROZXdzRGF0YSA9IGV4cG9ydHMuY3JlYXRlTmV3cyA9IHZvaWQgMDsKdmFyIF9yZXF1ZXN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL3V0aWxzL3JlcXVlc3QiKSk7CmNvbnN0IGRlZmF1bHROZXdzRGF0YSA9IHsKICBpZDogMCwKICBlbmFibGVkOiB0cnVlLAogIGRlc2NyaXB0aW9uOiAnJywKICBsaW5rOiAnJywKICBpbWFnZTogbnVsbCwKICBzb3VyY2U6ICcnLAogIHByaW9yaXR5OiAwCn07CmV4cG9ydHMuZGVmYXVsdE5ld3NEYXRhID0gZGVmYXVsdE5ld3NEYXRhOwpjb25zdCBnZXROZXdzID0gcGFyYW1zID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL05ld3MnLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldE5ld3MgPSBnZXROZXdzOwpjb25zdCBnZXROZXdzQnlJZCA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL05ld3MvJHtpZH1gLAogIG1ldGhvZDogJ2dldCcKfSk7CmV4cG9ydHMuZ2V0TmV3c0J5SWQgPSBnZXROZXdzQnlJZDsKY29uc3QgdXBkYXRlTmV3cyA9IChpZCwgZGF0YSkgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvTmV3cy8ke2lkfWAsCiAgbWV0aG9kOiAncGF0Y2gnLAogIGRhdGEKfSk7CmV4cG9ydHMudXBkYXRlTmV3cyA9IHVwZGF0ZU5ld3M7CmNvbnN0IHVwZGF0ZU9yZGVyID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9uZXdzL29yZGVyJywKICBtZXRob2Q6ICdwb3N0JywKICBkYXRhCn0pOwpleHBvcnRzLnVwZGF0ZU9yZGVyID0gdXBkYXRlT3JkZXI7CmNvbnN0IGRlbGV0ZU5ld3MgPSBpZCA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogYC9OZXdzLyR7aWR9YCwKICBtZXRob2Q6ICdkZWxldGUnCn0pOwpleHBvcnRzLmRlbGV0ZU5ld3MgPSBkZWxldGVOZXdzOwpjb25zdCBjcmVhdGVOZXdzID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9OZXdzLycsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5jcmVhdGVOZXdzID0gY3JlYXRlTmV3czsKY29uc3QgZ2V0RmlsdGVycyA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvTmV3cy9mZXRjaCcsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5nZXRGaWx0ZXJzID0gZ2V0RmlsdGVyczs="},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,eAAe,GAAc;EACxCC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAC,EAAE;EACTC,QAAQ,EAAC;CACV;AAAA;AACM,MAAMC,OAAO,GAAIC,MAAW,IACjC,oBAAO,EAAC;EACNC,GAAG,EAAE,OAAO;EACZC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,WAAW,GAAIX,EAAU,IACpC,oBAAO,EAAC;EACNS,GAAG,EAAE,SAAST,EAAE,EAAE;EAClBU,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,UAAU,GAAG,CAACZ,EAAU,EAAEa,IAAS,KAC9C,oBAAO,EAAC;EACNJ,GAAG,EAAE,SAAST,EAAE,EAAE;EAClBU,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEK,MAAMC,WAAW,GAAID,IAAS,IACrC,oBAAO,EAAC;EACNJ,GAAG,EAAE,aAAa;EAClBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAME,UAAU,GAAIf,EAAU,IACnC,oBAAO,EAAC;EACNS,GAAG,EAAE,SAAST,EAAE,EAAE;EAClBU,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMM,UAAU,GAAIH,IAAS,IAClC,oBAAO,EAAC;EACNJ,GAAG,EAAE,QAAQ;EACbC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMI,UAAU,GAAIJ,IAAS,IAClC,oBAAO,EAAC;EACNJ,GAAG,EAAE,aAAa;EAClBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA","names":["defaultNewsData","id","enabled","description","link","image","source","priority","getNews","params","url","method","getNewsById","updateNews","data","updateOrder","deleteNews","createNews","getFilters"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/news/news.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { INewsData } from '../types'\n\nexport const defaultNewsData: INewsData = {\n  id: 0,\n  enabled: true,\n  description: '',\n  link: '',\n  image: null,\n  source:'',\n  priority:0,\n}\nexport const getNews = (params: any) =>\n  request({\n    url: '/News',\n    method: 'get',\n    params\n  })\n\nexport const getNewsById = (id: number) =>\n  request({\n    url: `/News/${id}`,\n    method: 'get'\n  })\n\nexport const updateNews = (id: number, data: any) =>\n  request({\n    url: `/News/${id}`,\n    method: 'patch',\n    data\n  })\n  \n  export const updateOrder = (data: any) =>\n  request({\n    url: '/news/order',\n    method: 'post',\n    data\n  })\n\nexport const deleteNews = (id: string) =>\n  request({\n    url: `/News/${id}`,\n    method: 'delete'\n  })\n\nexport const createNews = (data: any) =>\n  request({\n    url: '/News/',\n    method: 'post',\n    data\n  })\n\nexport const getFilters = (data: any) =>\n  request({\n    url: '/News/fetch',\n    method: 'post',\n    data\n  })\n"]}]}