{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/list.vue","mtime":1673593902409},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF91c2Vyc0NvbnRhY3QgPSByZXF1aXJlKCJAL2FwaS91c2Vyc0NvbnRhY3QiKTsKdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL1BhZ2luYXRpb24vaW5kZXgudnVlIikpOwp2YXIgX2luZGV4MiA9IHJlcXVpcmUoIkAvdXRpbHMvaW5kZXgiKTsKdmFyIF9leGNlbCA9IHJlcXVpcmUoIkAvdXRpbHMvZXhjZWwiKTsKdmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvY29tcG9uZW50cy9FbmFibGVkL2luZGV4LnZ1ZSIpKTsKbGV0IGRlZmF1bHRfMSA9IGNsYXNzIGV4dGVuZHMgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLlZ1ZSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlciguLi5hcmd1bWVudHMpOwogICAgdGhpcy50YWJsZUtleSA9IDA7CiAgICB0aGlzLnRvdGFsID0gMDsKICAgIHRoaXMubGlzdCA9IFtdOwogICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IGZhbHNlOwogICAgdGhpcy5uZXdMaXN0ID0gW107CiAgICB0aGlzLm9sZExpc3QgPSBbXTsKICAgIHRoaXMuc2hvd1NvcnRpbmdPcHRpb24gPSBmYWxzZTsKICAgIHRoaXMucmVuZGVyQ29tcG9uZW50ID0gdHJ1ZTsKICAgIHRoaXMubGlzdFF1ZXJ5ID0gewogICAgICBwYWdlOiAxLAogICAgICBsaW1pdDogMTAsCiAgICAgIHNvcnQ6ICdpZCxERVNDJywKICAgICAgZmlsdGVyOiB7CiAgICAgICAgY29udGFjdE51bWJlcjogJyRjb250TCcsCiAgICAgICAgZnVsbE5hbWU6ICckY29udEwnLAogICAgICAgIGVtYWlsOiAnJGNvbnRMJwogICAgICB9CiAgICB9OwogICAgdGhpcy5zb3J0T3B0aW9ucyA9IFt7CiAgICAgIGxhYmVsOiAnQXNjZW5kaW5nJywKICAgICAga2V5OiAnaWQsQVNDJwogICAgfSwgewogICAgICBsYWJlbDogJ0Rlc2NlbmRpbmcnLAogICAgICBrZXk6ICdpZCxERVNDJwogICAgfV07CiAgICB0aGlzLnN0YXR1c0xpc3QgPSBbewogICAgICBsYWJlbDogJ1VwY29taW5nJywKICAgICAgdmFsdWU6ICdVcGNvbWluZycKICAgIH0sIHsKICAgICAgbGFiZWw6ICdPbi1nb2luZycsCiAgICAgIHZhbHVlOiAnT24tZ29pbmcnCiAgICB9LCB7CiAgICAgIGxhYmVsOiAnY29tcGxldGVkJywKICAgICAgdmFsdWU6ICdjb21wbGV0ZWQnCiAgICB9LCB7CiAgICAgIGxhYmVsOiAnQ2xvc2VkJywKICAgICAgdmFsdWU6ICdDbG9zZWQnCiAgICB9XTsKICAgIHRoaXMuZW5hYmxlVHlwZU9wdGlvbnMgPSBbewogICAgICBrZXk6IHRydWUsCiAgICAgIHZhbHVlOiAnRW5hYmxlJwogICAgfSwgewogICAgICBrZXk6IGZhbHNlLAogICAgICB2YWx1ZTogJ0Rpc2FibGVkJwogICAgfV07CiAgfQogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9CiAgYXN5bmMgZ2V0TGlzdCgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhID0gYXdhaXQgKDAsIF91c2Vyc0NvbnRhY3QuZ2V0VXNlckNvbnRhY3RzKSgoMCwgX2luZGV4Mi5nZXRRdWVyeSkodGhpcy5saXN0UXVlcnkpKTsKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhOwogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfQogIH0KICAvLyBwcml2YXRlIGFzeW5jIHVwZGF0ZVN0YXR1cyhpZDogbnVtYmVyLCBzdGF0dXM6IGFueSkgewogIC8vCiAgLy8gICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRFdmVudEJ5SWQoaWQpCiAgLy8gICBkYXRhLmlzQ29udGFjdGVkID0gc3RhdHVzCiAgLy8gICBhd2FpdCB1cGRhdGVFdmVudChpZCwgZGF0YSkKICAvLwogIC8vIH0KICBoYW5kbGVGaWx0ZXIoKSB7CiAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMTsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0KICBnZXRTb3J0Q2xhc3Moa2V5KSB7CiAgICBjb25zdCBzb3J0ID0gdGhpcy5saXN0UXVlcnkuc29ydDsKICAgIHJldHVybiBzb3J0ID09PSBgJHtrZXl9LEFTQ2AgPyAnYXNjZW5kaW5nJyA6IHNvcnQgPT09IGAke2tleX0sREVTQ2AgPyAnZGVzY2VuZGluZycgOiAnJzsKICB9CiAgc29ydENoYW5nZShkYXRhKSB7CiAgICBjb25zdCB7CiAgICAgIHByb3AsCiAgICAgIGlkCiAgICB9ID0gZGF0YTsKICAgIGlmIChwcm9wKSB7CiAgICAgIHRoaXMubGlzdFF1ZXJ5LnNvcnQgPSBgJHtwcm9wfSxgICsgKGlkID09PSAnYXNjZW5kaW5nJyA/ICdBU0MnIDogJ0RFU0MnKTsKICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKTsKICAgIH0KICB9CiAgaGFuZGxlRGVsZXRlKGRhdGEpIHsKICAgIGlmIChkYXRhKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oIkRvIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGNvbnRhY3Q/IiwgdGhpcy4kdGMoInRhYmxlLmRlbGV0ZSIpLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMuJHRjKCJ0YWJsZS5kZWxldGUiKSwKICAgICAgICBjb25maXJtQnV0dG9uQ2xhc3M6ICJlbC1idXR0b24tLWRhbmdlciIsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIkNhbmNlbCIsCiAgICAgICAgdHlwZTogImVycm9yIgogICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAoMCwgX3VzZXJzQ29udGFjdC5kZWxldGVVc2VyQ29udGFjdCkoZGF0YS5pZCkudGhlbihkZWxldGVkID0+IHsKICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICBtZXNzYWdlOiB0aGlzLiR0YygidGFibGUuZGVsZXRlQ2FuY2VsZWQiKQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9CiAgYXN5bmMgaGFuZGxlRG93bmxvYWQocGFpZCkgewogICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSB0cnVlOwogICAgY29uc3QgZmxpdGVyRGF0YSA9IFtdOwogICAgY29uc3QgcGFnZSA9IHRoaXMubGlzdFF1ZXJ5LnBhZ2U7CiAgICBjb25zdCBsaW1pdCA9IHRoaXMubGlzdFF1ZXJ5LmxpbWl0OwogICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDE7CiAgICB0aGlzLmxpc3RRdWVyeS5saW1pdCA9IDEwMDAwMDsKICAgIGNvbnN0IGRhdGFBbGwgPSBhd2FpdCAoMCwgX3VzZXJzQ29udGFjdC5nZXRVc2VyQ29udGFjdHMpKCgwLCBfaW5kZXgyLmdldFF1ZXJ5KSh0aGlzLmxpc3RRdWVyeSkpOwogICAgY29uc3QgbGlzdEFsbCA9IGRhdGFBbGwuZGF0YTsKICAgIHRoaXMubGlzdFF1ZXJ5LnBhZ2UgPSBwYWdlOwogICAgdGhpcy5saXN0UXVlcnkubGltaXQgPSBsaW1pdDsKICAgIC8vIHRoaXMudG90YWwgPSBkYXRhLnRvdGFsOwogICAgLy8gaWYgKHBhaWQpIHsKICAgIC8vICAgZmxpdGVyRGF0YSA9IGxpc3RBbGwuZmlsdGVyKGxpc3QgPT4gewogICAgLy8gICAgIHJldHVybiBuZXcgRGF0ZShsaXN0LnBsYW5FeGlwaXJ5RGF0ZSkgPiBuZXcgRGF0ZSgpOwogICAgLy8gICB9KTsKICAgIC8vIH0gZWxzZSB7CiAgICAvLyAgIGZsaXRlckRhdGEgPSBsaXN0QWxsLmZpbHRlcihsaXN0ID0+IHsKICAgIC8vICAgICByZXR1cm4gbmV3IERhdGUobGlzdC5wbGFuRXhpcGlyeURhdGUpIDwgbmV3IERhdGUoKTsKICAgIC8vICAgfSk7CiAgICAvLyB9CiAgICBjb25zdCB0SGVhZGVyID0gWydpZCcsICdmdWxsTmFtZScsICdlbWFpbCcsICdjb250YWN0TnVtYmVyJywgJ3R5cGUnLCAnaXNNb250aGx5TmV3c2xldHRlcicsICdwbGFuRXhpcGlyeURhdGUnXTsKICAgIGNvbnN0IGZpbHRlclZhbCA9IFsnaWQnLCAnZnVsbE5hbWUnLCAnZW1haWwnLCAnY29udGFjdE51bWJlcicsICd0eXBlJywgJ2lzTW9udGhseU5ld3NsZXR0ZXInLCAncGxhbkV4aXBpcnlEYXRlJ107CiAgICBjb25zdCBkYXRhID0gKDAsIF9pbmRleDIuZm9ybWF0SnNvbikoZmlsdGVyVmFsLCBmbGl0ZXJEYXRhKTsKICAgICgwLCBfZXhjZWwuZXhwb3J0SnNvbjJFeGNlbCkodEhlYWRlciwgZGF0YSwgdGhpcy4kdGMoJ3JvdXRlLnVzZXJNYW5hZ2VtZW50LkV2ZW50LnRpdGxlJykpOwogICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICB9Cn07CmRlZmF1bHRfMSA9ICgwLCBfdHNsaWIuX19kZWNvcmF0ZSkoWygwLCBfdnVlUHJvcGVydHlEZWNvcmF0b3IuQ29tcG9uZW50KSh7CiAgbmFtZTogJ1VzZXJDb250YWN0TGlzdCcsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogX2luZGV4LmRlZmF1bHQsCiAgICBFbmFibGVkOiBfaW5kZXgzLmRlZmF1bHQKICB9Cn0pXSwgZGVmYXVsdF8xKTsKdmFyIF9kZWZhdWx0ID0gZGVmYXVsdF8xOwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":"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","names":["Vue","constructor","page","limit","sort","filter","contactNumber","fullName","email","label","key","value","created","getList","listLoading","data","listQuery","list","total","error","handleFilter","getSortClass","sortChange","prop","id","handleDelete","$confirm","$tc","confirmButtonText","confirmButtonClass","cancelButtonText","type","then","deleted","catch","$message","message","handleDownload","paid","downloadLoading","fliterData","dataAll","listAll","tHeader","filterVal","default_1","name","components","Pagination","Enabled"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/userContact/list.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Vue } from 'vue-property-decorator'\nimport { getUserContacts, deleteUserContact, updateUserContact, getUserContactById } from '@/api/usersContact'\nimport { IEventData } from '@/api/types'\nimport Pagination from '@/components/Pagination/index.vue'\nimport { getQuery, formatJson } from '@/utils/index'\nimport { exportJson2Excel } from '@/utils/excel'\nimport Sortable, { get } from 'sortablejs'\nimport Enabled from '@/components/Enabled/index.vue'\n\n@Component({\n  name: 'UserContactList',\n  components: {\n    Pagination,\n    Enabled\n  }\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IEventData[] = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  newList: any = [];\n  oldList: any = [];\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: 'id,DESC',\n    filter: {\n      contactNumber: '$contL',\n      fullName:'$contL',\n      email:'$contL'\n    }\n  };\n\n  private sortOptions = [\n    { label: 'Ascending', key: 'id,ASC' },\n    { label: 'Descending', key: 'id,DESC' }\n  ];\n\n  private statusList = [\n    { label: 'Upcoming', value: 'Upcoming' },\n    { label: 'On-going', value: 'On-going' },\n    { label: 'completed', value: 'completed' },\n    { label: 'Closed', value: 'Closed' }\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: 'Enable' },\n    { key: false, value: 'Disabled' }\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList()\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true\n      const data: any = await getUserContacts(getQuery(this.listQuery))\n      this.list = data.data\n      this.total = data.total\n      this.listLoading = false\n    } catch (error) {\n      this.listLoading = false\n    }\n  }\n\n  // private async updateStatus(id: number, status: any) {\n  //\n  //   const data: any = await getEventById(id)\n  //   data.isContacted = status\n  //   await updateEvent(id, data)\n  //\n  // }\n\n  private handleFilter() {\n    this.listQuery.page = 1\n    this.getList()\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort\n    return sort === `${key},ASC`\n      ? 'ascending'\n      : sort === `${key},DESC`\n        ? 'descending'\n        : ''\n  }\n\n  private sortChange(data: any) {\n    const { prop, id } = data\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (id === 'ascending' ? 'ASC' : 'DESC')\n      this.handleFilter()\n    }\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        \"Do you want to delete this contact?\",\n        this.$tc(\"table.delete\"),\n        {\n          confirmButtonText: this.$tc(\"table.delete\"),\n          confirmButtonClass: \"el-button--danger\",\n          cancelButtonText: \"Cancel\",\n          type: \"error\",\n        }\n      )\n        .then(() => {\n          deleteUserContact(data.id).then((deleted) => {\n            this.getList();\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: this.$tc(\"table.deleteCanceled\"),\n          });\n        });\n    }\n  }\n\n  private async handleDownload(paid: boolean) {\n    this.downloadLoading = true\n    const fliterData: any = []\n    const page = this.listQuery.page\n    const limit = this.listQuery.limit\n    this.listQuery.page = 1\n    this.listQuery.limit = 100000\n\n    const dataAll: any = await getUserContacts(getQuery(this.listQuery))\n    const listAll:IEventData[] = dataAll.data\n\n    this.listQuery.page = page\n    this.listQuery.limit = limit\n    // this.total = data.total;\n\n    // if (paid) {\n    //   fliterData = listAll.filter(list => {\n    //     return new Date(list.planExipiryDate) > new Date();\n    //   });\n    // } else {\n    //   fliterData = listAll.filter(list => {\n    //     return new Date(list.planExipiryDate) < new Date();\n    //   });\n    // }\n    const tHeader = [\n      'id',\n      'fullName',\n      'email',\n      'contactNumber',\n      'type',\n      'isMonthlyNewsletter',\n      'planExipiryDate'\n    ]\n    const filterVal = [\n      'id',\n      'fullName',\n      'email',\n      'contactNumber',\n      'type',\n      'isMonthlyNewsletter',\n      'planExipiryDate'\n    ]\n    const data = formatJson(filterVal, fliterData)\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc('route.userManagement.Event.title')\n    )\n    this.downloadLoading = false\n  }\n}\n"]}]}