{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/reason/components/ReasonDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/reason/components/ReasonDetail.vue","mtime":1668754947378},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwp2YXIgX3RzbGliID0gcmVxdWlyZSgidHNsaWIiKTsKdmFyIF92dWVQcm9wZXJ0eURlY29yYXRvciA9IHJlcXVpcmUoInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiKTsKdmFyIF9yZWFzb24gPSByZXF1aXJlKCJAL2FwaS9yZWFzb24iKTsKdmFyIF9hcHAgPSByZXF1aXJlKCJAL3N0b3JlL21vZHVsZXMvYXBwIik7CnZhciBfdGFnc1ZpZXcgPSByZXF1aXJlKCJAL3N0b3JlL21vZHVsZXMvdGFncy12aWV3Iik7CnZhciBfcm91dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLy4uLy4uLy4uL3JvdXRlciIpKTsKdmFyIF92dWV4TW9kdWxlRGVjb3JhdG9ycyA9IHJlcXVpcmUoInZ1ZXgtbW9kdWxlLWRlY29yYXRvcnMiKTsKbGV0IGRlZmF1bHRfMSA9IGNsYXNzIGRlZmF1bHRfMSBleHRlbmRzIF92dWVQcm9wZXJ0eURlY29yYXRvci5WdWUgewogIGNvbnN0cnVjdG9yKCkgewogICAgc3VwZXIoLi4uYXJndW1lbnRzKTsKICAgIHRoaXMucG9zdEZvcm0gPSBPYmplY3QuYXNzaWduKHt9LCBfcmVhc29uLmRlZmF1bHRSZWFzb25EYXRhKTsKICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgdGhpcy5ydWxlcyA9IHsKICAgICAgcmVhc29uOiBbewogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIG1lc3NhZ2U6ICdQbGVhc2UgZW50ZXIgcmVhc29uJywKICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgfSwgewogICAgICAgIG1pbjogMywKICAgICAgICBtYXg6IDI1LAogICAgICAgIG1lc3NhZ2U6ICdMZW5ndGggc2hvdWxkIGJlIDMgdG8gMjUnLAogICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICB9LCB7CiAgICAgICAgcGF0dGVybjogJ15bYS16QS1aMC05XScsCiAgICAgICAgbWVzc2FnZTogJ05vIFNwZWNpYWwgQ2hhcmFjdGVycyBhbGxvd2VkJywKICAgICAgICB0cmlnZ2VyOiBbJ2JsdXInLCAnY2hhbmdlJ10KICAgICAgfV0KICAgIH07CiAgfQogIGdldCBsYW5nKCkgewogICAgcmV0dXJuIF9hcHAuQXBwTW9kdWxlLmxhbmd1YWdlOwogIH0KICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgdGhpcy5mZXRjaERhdGEocGFyc2VJbnQoaWQpKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucG9zdEZvcm0gPSBPYmplY3QuYXNzaWduKHt9LCBfcmVhc29uLmRlZmF1bHRSZWFzb25EYXRhKTsKICAgIH0KICAgIC8vIFdoeSBuZWVkIHRvIG1ha2UgYSBjb3B5IG9mIHRoaXMuJHJvdXRlIGhlcmU/CiAgICAvLyBCZWNhdXNlIGlmIHlvdSBlbnRlciB0aGlzIHBhZ2UgYW5kIHF1aWNrbHkgc3dpdGNoIHRhZywgbWF5IGJlIGluIHRoZSBleGVjdXRpb24gb2YgdGhpcy5zZXRUYWdzVmlld1RpdGxlIGZ1bmN0aW9uLCB0aGlzLiRyb3V0ZSBpcyBubyBsb25nZXIgcG9pbnRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZQogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vaXNzdWVzLzEyMjEKICAgIHRoaXMudGVtcFRhZ1ZpZXcgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRyb3V0ZSk7CiAgfQogIGFzeW5jIGZldGNoRGF0YShpZCkgewogICAgdHJ5IHsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0ICgwLCBfcmVhc29uLmdldFJlYXNvbkJ5SWQpKGlkKTsKICAgICAgdGhpcy5wb3N0Rm9ybSA9IGRhdGE7CiAgICAgIC8vIEp1c3QgZm9yIHRlc3QKICAgICAgLy8gY29uc3QgdGl0bGUgPSB0aGlzLnBvc3RGb3JtLm5hbWUKICAgICAgLy8gU2V0IHRhZ3N2aWV3IHRpdGxlCiAgICAgIC8vIHRoaXMuc2V0VGFnc1ZpZXdUaXRsZSh0aXRsZSkKICAgICAgLy8gU2V0IHBhZ2UgdGl0bGUKICAgICAgLy8gdGhpcy5zZXRQYWdlVGl0bGUodGl0bGUpCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgUHJvbWlzZS5yZWplY3QoZXJyKTsKICAgIH0KICB9CiAgc2V0VGFnc1ZpZXdUaXRsZSh0aXRsZSkgewogICAgY29uc3QgdGFnVmlldyA9IHRoaXMudGVtcFRhZ1ZpZXc7CiAgICBpZiAodGFnVmlldykgewogICAgICB0YWdWaWV3LnRpdGxlID0gYCR7dGl0bGV9LSR7dGhpcy5wb3N0Rm9ybS5pZH1gOwogICAgICBfdGFnc1ZpZXcuVGFnc1ZpZXdNb2R1bGUudXBkYXRlVmlzaXRlZFZpZXcodGFnVmlldyk7CiAgICB9CiAgfQogIHNldFBhZ2VUaXRsZSh0aXRsZSkgewogICAgZG9jdW1lbnQudGl0bGUgPSBgJHt0aXRsZX0gLSAke3RoaXMucG9zdEZvcm0uaWR9YDsKICB9CiAgc3VibWl0Rm9ybSgpIHsKICAgIHRoaXMuJHJlZnMucG9zdEZvcm0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICBpZiAodmFsaWQpIHsKICAgICAgICB0aGlzLnNhdmVGb3JtKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9KTsKICB9CiAgcmVzZXRGb3JtKCkgewogICAgdGhpcy4kcmVmcy5wb3N0Rm9ybS5yZXNldEZpZWxkcygpOwogIH0KICBhc3luYyBzYXZlRm9ybSgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgIGF3YWl0ICgwLCBfcmVhc29uLnVwZGF0ZVJlYXNvbikodGhpcy5wb3N0Rm9ybS5pZCwgdGhpcy5wb3N0Rm9ybSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXdhaXQgKDAsIF9yZWFzb24uY3JlYXRlUmVhc29uKSh0aGlzLnBvc3RGb3JtKTsKICAgICAgfQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgbWVzc2FnZTogJ1JlYXNvbiBhZGRlZCBzdWNjZXNzZnVsbHknLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KTsKICAgICAgX3JvdXRlci5kZWZhdWx0LnB1c2goJy9yZWFzb24vbGlzdCcpOwogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgfQogIH0KfTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbKDAsIF92dWVQcm9wZXJ0eURlY29yYXRvci5Qcm9wKSh7CiAgZGVmYXVsdDogZmFsc2UKfSldLCBkZWZhdWx0XzEucHJvdG90eXBlLCAiaXNFZGl0Iiwgdm9pZCAwKTsKKDAsIF90c2xpYi5fX2RlY29yYXRlKShbX3Z1ZXhNb2R1bGVEZWNvcmF0b3JzLkFjdGlvbl0sIGRlZmF1bHRfMS5wcm90b3R5cGUsICJzYXZlRm9ybSIsIG51bGwpOwpkZWZhdWx0XzEgPSAoMCwgX3RzbGliLl9fZGVjb3JhdGUpKFsoMCwgX3Z1ZVByb3BlcnR5RGVjb3JhdG9yLkNvbXBvbmVudCkoewogIG5hbWU6ICdSZWFzb25EZXRhaWwnLAogIGNvbXBvbmVudHM6IHt9Cn0pXSwgZGVmYXVsdF8xKTsKdmFyIF9kZWZhdWx0ID0gZGVmYXVsdF8xOwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":"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","names":["Vue","constructor","Object","assign","defaultReasonData","reason","required","message","trigger","min","max","pattern","lang","AppModule","language","created","isEdit","id","$route","params","fetchData","parseInt","postForm","tempTagView","data","err","Promise","reject","setTagsViewTitle","title","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","$refs","validate","valid","saveForm","resetForm","resetFields","loading","$notify","type","duration","router","push","default","Action","default_1","name","components"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/reason/components/ReasonDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { isValidURL } from '@/utils/validate'\nimport {\n  getReasonById,\n  defaultReasonData,\n  updateReason,\n  createReason\n} from '@/api/reason'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\n\n@Component({\n  name: 'ReasonDetail',\n  components: {}\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n\n  private postForm = Object.assign({}, defaultReasonData);\n  private loading = false;\n  private rules = {\n    reason: [\n      {\n        required: true,\n        message: 'Please enter reason',\n        trigger: 'blur'\n      },\n      { min: 3, max: 25, message: 'Length should be 3 to 25', trigger: 'blur' },\n      {\n        pattern: '^[a-zA-Z0-9]',\n        message: 'No Special Characters allowed',\n        trigger: ['blur', 'change']\n      }\n    ]\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultReasonData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getReasonById(id)\n      this.postForm = data\n      // Just for test\n      // const title = this.postForm.name\n      // Set tagsview title\n      // this.setTagsViewTitle(title)\n      // Set page title\n      // this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields()\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        await updateReason(this.postForm.id, this.postForm)\n      } else {\n        await createReason(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Reason added successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/reason/list')\n    } catch (err) {\n      this.loading = false\n    }\n  }\n}\n"]}]}