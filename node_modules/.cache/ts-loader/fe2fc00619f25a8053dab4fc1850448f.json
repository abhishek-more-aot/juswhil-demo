{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/notifications.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/notifications.ts","mtime":1668754947338},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVOb3RpZmljYXRpb25zID0gZXhwb3J0cy5nZXROb3RpZmljYXRpb25zQnlJZCA9IGV4cG9ydHMuZ2V0Tm90aWZpY2F0aW9ucyA9IGV4cG9ydHMuZ2V0RmlsdGVycyA9IGV4cG9ydHMuZGVsZXRlTm90aWZpY2F0aW9ucyA9IGV4cG9ydHMuZGVmYXVsdE5vdGlmaWNhdGlvbkRhdGEgPSBleHBvcnRzLmNyZWF0ZU5vdGlmaWNhdGlvbnMgPSB2b2lkIDA7CnZhciBfcmVxdWVzdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC91dGlscy9yZXF1ZXN0IikpOwpjb25zdCBkZWZhdWx0Tm90aWZpY2F0aW9uRGF0YSA9IHsKICBpZDogMCwKICBlbmFibGVkOiB0cnVlLAogIHRpdGxlOiAnJywKICBtZXNzYWdlOiAnJywKICBpbWFnZTogbnVsbCwKICB0b3BpYzogJ0FsbCcsCiAgc2VuZFRvQWxsOiB0cnVlCn07CmV4cG9ydHMuZGVmYXVsdE5vdGlmaWNhdGlvbkRhdGEgPSBkZWZhdWx0Tm90aWZpY2F0aW9uRGF0YTsKY29uc3QgZ2V0Tm90aWZpY2F0aW9ucyA9IHBhcmFtcyA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9ub3RpZmljYXRpb24nLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldE5vdGlmaWNhdGlvbnMgPSBnZXROb3RpZmljYXRpb25zOwpjb25zdCBnZXROb3RpZmljYXRpb25zQnlJZCA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL25vdGlmaWNhdGlvbi8ke2lkfWAsCiAgbWV0aG9kOiAnZ2V0Jwp9KTsKZXhwb3J0cy5nZXROb3RpZmljYXRpb25zQnlJZCA9IGdldE5vdGlmaWNhdGlvbnNCeUlkOwpjb25zdCB1cGRhdGVOb3RpZmljYXRpb25zID0gKGlkLCBkYXRhKSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogYC9ub3RpZmljYXRpb24vJHtpZH1gLAogIG1ldGhvZDogJ3BhdGNoJywKICBkYXRhCn0pOwpleHBvcnRzLnVwZGF0ZU5vdGlmaWNhdGlvbnMgPSB1cGRhdGVOb3RpZmljYXRpb25zOwpjb25zdCBkZWxldGVOb3RpZmljYXRpb25zID0gaWQgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvbm90aWZpY2F0aW9uLyR7aWR9YCwKICBtZXRob2Q6ICdkZWxldGUnCn0pOwpleHBvcnRzLmRlbGV0ZU5vdGlmaWNhdGlvbnMgPSBkZWxldGVOb3RpZmljYXRpb25zOwpjb25zdCBjcmVhdGVOb3RpZmljYXRpb25zID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9ub3RpZmljYXRpb24vJywKICBtZXRob2Q6ICdwb3N0JywKICBkYXRhCn0pOwpleHBvcnRzLmNyZWF0ZU5vdGlmaWNhdGlvbnMgPSBjcmVhdGVOb3RpZmljYXRpb25zOwpjb25zdCBnZXRGaWx0ZXJzID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9ub3RpZmljYXRpb24vZmV0Y2gnLAogIG1ldGhvZDogJ3Bvc3QnLAogIGRhdGEKfSk7CmV4cG9ydHMuZ2V0RmlsdGVycyA9IGdldEZpbHRlcnM7"},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,uBAAuB,GAAuB;EACzDC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAC,KAAK;EACXC,SAAS,EAAE;CACZ;AAAA;AACM,MAAMC,gBAAgB,GAAIC,MAAW,IAC1C,oBAAO,EAAC;EACNC,GAAG,EAAE,eAAe;EACpBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,oBAAoB,GAAIX,EAAU,IAC7C,oBAAO,EAAC;EACNS,GAAG,EAAE,iBAAiBT,EAAE,EAAE;EAC1BU,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,mBAAmB,GAAG,CAACZ,EAAU,EAAEa,IAAS,KACvD,oBAAO,EAAC;EACNJ,GAAG,EAAE,iBAAiBT,EAAE,EAAE;EAC1BU,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEG,MAAMC,mBAAmB,GAAId,EAAU,IAC5C,oBAAO,EAAC;EACNS,GAAG,EAAE,iBAAiBT,EAAE,EAAE;EAC1BU,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMK,mBAAmB,GAAIF,IAAS,IAC3C,oBAAO,EAAC;EACNJ,GAAG,EAAE,gBAAgB;EACrBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMG,UAAU,GAAIH,IAAS,IAClC,oBAAO,EAAC;EACNJ,GAAG,EAAE,qBAAqB;EAC1BC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA","names":["defaultNotificationData","id","enabled","title","message","image","topic","sendToAll","getNotifications","params","url","method","getNotificationsById","updateNotifications","data","deleteNotifications","createNotifications","getFilters"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/notifications.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { INotificationsData } from './types'\n\nexport const defaultNotificationData: INotificationsData = {\n  id: 0,\n  enabled: true,\n  title: '',\n  message: '',\n  image: null,\n  topic:'All',\n  sendToAll: true,\n}\nexport const getNotifications = (params: any) =>\n  request({\n    url: '/notification',\n    method: 'get',\n    params\n  })\n\nexport const getNotificationsById = (id: number) =>\n  request({\n    url: `/notification/${id}`,\n    method: 'get'\n  })\n\nexport const updateNotifications = (id: number, data: any) =>\n  request({\n    url: `/notification/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteNotifications = (id: string) =>\n  request({\n    url: `/notification/${id}`,\n    method: 'delete'\n  })\n\nexport const createNotifications = (data: any) =>\n  request({\n    url: '/notification/',\n    method: 'post',\n    data\n  })\n\nexport const getFilters = (data: any) =>\n  request({\n    url: '/notification/fetch',\n    method: 'post',\n    data\n  })\n"]}]}