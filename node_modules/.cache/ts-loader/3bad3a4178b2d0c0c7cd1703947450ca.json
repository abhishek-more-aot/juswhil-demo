{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/users.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/users.ts","mtime":1668754947338},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy52ZXJpZnlPdHAgPSBleHBvcnRzLnZlcmlmeURlbGV0aW9uT3RwID0gZXhwb3J0cy51cGRhdGVVc2VyID0gZXhwb3J0cy5zZW5kT3RwID0gZXhwb3J0cy5zZW5kRGVsZXRpb25PdHAgPSBleHBvcnRzLmdldFVzZXJzQ291bnQgPSBleHBvcnRzLmdldFVzZXJzID0gZXhwb3J0cy5nZXRVc2VySW5mbyA9IGV4cG9ydHMuZ2V0VXNlckJ5SWQgPSBleHBvcnRzLmdldFVzZXJCeUNvbnRhY3ROdW1iZXIgPSBleHBvcnRzLmdldERpc3RyaWJ1dG9yc0NvdW50ID0gZXhwb3J0cy5kZWxldGVVc2VyID0gZXhwb3J0cy5kZWZhdWx0VXNlcnNEYXRhID0gZXhwb3J0cy5hZGRVc2VyID0gdm9pZCAwOwp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKY29uc3QgZGVmYXVsdFVzZXJzRGF0YSA9IHsKICBpZDogMCwKICBlbmFibGVkOiB0cnVlLAogIGZ1bGxOYW1lOiAnJywKICB1c2VyVHlwZTogbnVsbCwKICBlbWFpbDogJycsCiAgY29tcGFueU5hbWU6ICcnLAogIHBpbmNvZGU6IG51bGwsCiAgaXNEZWxldGVkOiBmYWxzZSwKICBhZG1pbklkOiBudWxsLAogIGNvdW50cnlJZDogMSwKICBzdGF0ZTogW10sCiAgc3RhdGVJZDogbnVsbCwKICBjaXR5SWQ6IG51bGwsCiAgY2l0eTogW10KfTsKZXhwb3J0cy5kZWZhdWx0VXNlcnNEYXRhID0gZGVmYXVsdFVzZXJzRGF0YTsKY29uc3QgZ2V0VXNlcnMgPSBwYXJhbXMgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvdXNlcnMnLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldFVzZXJzID0gZ2V0VXNlcnM7CmNvbnN0IGdldFVzZXJCeUlkID0gaWQgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvdXNlcnMvJHtpZH1gLAogIG1ldGhvZDogJ2dldCcKfSk7CmV4cG9ydHMuZ2V0VXNlckJ5SWQgPSBnZXRVc2VyQnlJZDsKY29uc3QgZ2V0VXNlckJ5Q29udGFjdE51bWJlciA9IHBhcmFtcyA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogYC91c2Vycy9zZWFyY2hgLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldFVzZXJCeUNvbnRhY3ROdW1iZXIgPSBnZXRVc2VyQnlDb250YWN0TnVtYmVyOwpjb25zdCBnZXRVc2VySW5mbyA9IGRhdGEgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvdXNlcnMvbWUnLAogIG1ldGhvZDogJ3Bvc3QnLAogIGRhdGEKfSk7CmV4cG9ydHMuZ2V0VXNlckluZm8gPSBnZXRVc2VySW5mbzsKY29uc3Qgc2VuZE90cCA9ICgpID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL3VzZXJzL3NlbmQtb3RwJywKICBtZXRob2Q6ICdwb3N0Jwp9KTsKZXhwb3J0cy5zZW5kT3RwID0gc2VuZE90cDsKY29uc3QgdmVyaWZ5T3RwID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy91c2Vycy92ZXJpZnktLW90cCcsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy52ZXJpZnlPdHAgPSB2ZXJpZnlPdHA7CmNvbnN0IHNlbmREZWxldGlvbk90cCA9ICgpID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL3VzZXJzL3NlbmQtZGVsZXRpb24tb3RwJywKICBtZXRob2Q6ICdwb3N0Jwp9KTsKZXhwb3J0cy5zZW5kRGVsZXRpb25PdHAgPSBzZW5kRGVsZXRpb25PdHA7CmNvbnN0IHZlcmlmeURlbGV0aW9uT3RwID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy91c2Vycy92ZXJpZnktZGVsZXRpb24tb3RwJywKICBtZXRob2Q6ICdwb3N0JywKICBkYXRhCn0pOwovLyBleHBvcnQgY29uc3QgZ2V0VXNlckJ5RW1haWwgPSAoQmxvZ2VtYWlsOiBzdHJpbmcpID0+Ci8vICAgcmVxdWVzdCh7Ci8vICAgICB1cmw6IGAvdXNlcnMvJHtVc2VyZW1haWx9YCwKLy8gICAgIG1ldGhvZDogJ2dldCcKLy8gICB9KQpleHBvcnRzLnZlcmlmeURlbGV0aW9uT3RwID0gdmVyaWZ5RGVsZXRpb25PdHA7CmNvbnN0IHVwZGF0ZVVzZXIgPSAoaWQsIGRhdGEpID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL3VzZXJzLyR7aWR9YCwKICBtZXRob2Q6ICdwYXRjaCcsCiAgZGF0YQp9KTsKZXhwb3J0cy51cGRhdGVVc2VyID0gdXBkYXRlVXNlcjsKY29uc3QgZGVsZXRlVXNlciA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL3VzZXJzLyR7aWR9YCwKICBtZXRob2Q6ICdkZWxldGUnCn0pOwpleHBvcnRzLmRlbGV0ZVVzZXIgPSBkZWxldGVVc2VyOwpjb25zdCBhZGRVc2VyID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy91c2Vycy9hZGQnLAogIG1ldGhvZDogJ3Bvc3QnLAogIGRhdGEKfSk7CmV4cG9ydHMuYWRkVXNlciA9IGFkZFVzZXI7CmNvbnN0IGdldFVzZXJzQ291bnQgPSBwYXJhbXMgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvdXNlcnMvdXNlckNvdW50JywKICBtZXRob2Q6ICdnZXQnLAogIHBhcmFtcwp9KTsKZXhwb3J0cy5nZXRVc2Vyc0NvdW50ID0gZ2V0VXNlcnNDb3VudDsKY29uc3QgZ2V0RGlzdHJpYnV0b3JzQ291bnQgPSBwYXJhbXMgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvdXNlcnMvY291bnQnLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldERpc3RyaWJ1dG9yc0NvdW50ID0gZ2V0RGlzdHJpYnV0b3JzQ291bnQ7"},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,gBAAgB,GAAe;EAE1CC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAC,IAAI;EACZC,SAAS,EAAC,CAAC;EACXC,KAAK,EAAC,EAAE;EACRC,OAAO,EAAC,IAAI;EACZC,MAAM,EAAC,IAAI;EACXC,IAAI,EAAC;CAEN;AAAA;AACM,MAAMC,QAAQ,GAAIC,MAAW,IAClC,oBAAO,EAAC;EACNC,GAAG,EAAE,QAAQ;EACbC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,WAAW,GAAIlB,EAAU,IACpC,oBAAO,EAAC;EACNgB,GAAG,EAAE,UAAUhB,EAAE,EAAE;EACnBiB,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,sBAAsB,GAAIJ,MAAU,IAC/C,oBAAO,EAAC;EACNC,GAAG,EAAE,eAAe;EACpBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMK,WAAW,GAAIC,IAAS,IACnC,oBAAO,EAAC;EACNL,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE,MAAM;EACdI;CACD,CAAC;AAAA;AAEG,MAAMC,OAAO,GAAG,MACrB,oBAAO,EAAC;EACNN,GAAG,EAAE,iBAAiB;EACtBC,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMM,SAAS,GAAIF,IAAQ,IAChC,oBAAO,EAAC;EACNL,GAAG,EAAE,oBAAoB;EACzBC,MAAM,EAAE,MAAM;EACdI;CACD,CAAC;AAAA;AAEG,MAAMG,eAAe,GAAG,MAC7B,oBAAO,EAAC;EACNR,GAAG,EAAE,0BAA0B;EAC/BC,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMQ,iBAAiB,GAAIJ,IAAQ,IACxC,oBAAO,EAAC;EACNL,GAAG,EAAE,4BAA4B;EACjCC,MAAM,EAAE,MAAM;EACdI;CACD,CAAC;AAEJ;AACA;AACA;AACA;AACA;AAAA;AAEO,MAAMK,UAAU,GAAG,CAAC1B,EAAU,EAAEqB,IAAS,KAC9C,oBAAO,EAAC;EACNL,GAAG,EAAE,UAAUhB,EAAE,EAAE;EACnBiB,MAAM,EAAE,OAAO;EACfI;CACD,CAAC;AAAA;AAEG,MAAMM,UAAU,GAAI3B,EAAU,IACnC,oBAAO,EAAC;EACNgB,GAAG,EAAE,UAAUhB,EAAE,EAAE;EACnBiB,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMW,OAAO,GAAIP,IAAS,IAC/B,oBAAO,EAAC;EACNL,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE,MAAM;EACdI;CACD,CAAC;AAAA;AAEG,MAAMQ,aAAa,GAAId,MAAW,IACvC,oBAAO,EAAC;EACNC,GAAG,EAAE,kBAAkB;EACvBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEK,MAAMe,oBAAoB,GAAIf,MAAW,IAChD,oBAAO,EAAC;EACNC,GAAG,EAAE,cAAc;EACnBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA","names":["defaultUsersData","id","enabled","fullName","userType","email","companyName","pincode","isDeleted","adminId","countryId","state","stateId","cityId","city","getUsers","params","url","method","getUserById","getUserByContactNumber","getUserInfo","data","sendOtp","verifyOtp","sendDeletionOtp","verifyDeletionOtp","updateUser","deleteUser","addUser","getUsersCount","getDistributorsCount"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/users.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { IUsersData } from './types'\n\nexport const defaultUsersData: IUsersData = {\n\n  id: 0,\n  enabled: true,\n  fullName: '',\n  userType: null,\n  email: '',\n  companyName: '',\n  pincode: null,\n  isDeleted: false,\n  adminId:null,\n  countryId:1,\n  state:[],\n  stateId:null,\n  cityId:null,\n  city:[]\n\n}\nexport const getUsers = (params: any) =>\n  request({\n    url: '/users',\n    method: 'get',\n    params\n  })\n\nexport const getUserById = (id: number) =>\n  request({\n    url: `/users/${id}`,\n    method: 'get'\n  })\n\nexport const getUserByContactNumber = (params:any) =>\n  request({\n    url: `/users/search`,\n    method: 'get',\n    params\n  })\n\nexport const getUserInfo = (data: any) =>\n  request({\n    url: '/users/me',\n    method: 'post',\n    data\n  })\n\nexport const sendOtp = () =>\n  request({\n    url: '/users/send-otp',\n    method: 'post'\n  })\n\nexport const verifyOtp = (data:any) =>\n  request({\n    url: '/users/verify--otp',\n    method: 'post',\n    data\n  })\n\nexport const sendDeletionOtp = () =>\n  request({\n    url: '/users/send-deletion-otp',\n    method: 'post'\n  })\n\nexport const verifyDeletionOtp = (data:any) =>\n  request({\n    url: '/users/verify-deletion-otp',\n    method: 'post',\n    data\n  })\n\n// export const getUserByEmail = (Blogemail: string) =>\n//   request({\n//     url: `/users/${Useremail}`,\n//     method: 'get'\n//   })\n\nexport const updateUser = (id: number, data: any) =>\n  request({\n    url: `/users/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteUser = (id: number) =>\n  request({\n    url: `/users/${id}`,\n    method: 'delete'\n  })\n\nexport const addUser = (data: any) =>\n  request({\n    url: '/users/add',\n    method: 'post',\n    data\n  })\n\nexport const getUsersCount = (params: any) =>\n  request({\n    url: '/users/userCount',\n    method: 'get',\n    params\n  })\n\n  export const getDistributorsCount = (params: any) =>\n  request({\n    url: '/users/count',\n    method: 'get',\n    params\n  })\n"]}]}