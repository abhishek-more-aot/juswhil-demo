{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/permission.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/permission.ts","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7CnZhciBfcm91dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3JvdXRlciIpKTsKdmFyIF9ucHJvZ3Jlc3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIm5wcm9ncmVzcyIpKTsKcmVxdWlyZSgibnByb2dyZXNzL25wcm9ncmVzcy5jc3MiKTsKdmFyIF9lbGVtZW50VWkgPSByZXF1aXJlKCJlbGVtZW50LXVpIik7CnZhciBfYWRtaW4gPSByZXF1aXJlKCJAL3N0b3JlL21vZHVsZXMvYWRtaW4iKTsKdmFyIF9wZXJtaXNzaW9uID0gcmVxdWlyZSgiQC9zdG9yZS9tb2R1bGVzL3Blcm1pc3Npb24iKTsKdmFyIF9sYW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2xhbmciKSk7CnZhciBfc2V0dGluZ3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vc2V0dGluZ3MiKSk7Ci8vIEludGVybmF0aW9uYWxpemF0aW9uCgpfbnByb2dyZXNzLmRlZmF1bHQuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7CmNvbnN0IHdoaXRlTGlzdCA9IFsnL2xvZ2luJywgJy9hdXRoLXJlZGlyZWN0J107CmNvbnN0IGdldFBhZ2VUaXRsZSA9IGtleSA9PiB7CiAgY29uc3QgaGFzS2V5ID0gX2xhbmcuZGVmYXVsdC50ZShgcm91dGUuJHtrZXl9YCk7CiAgaWYgKGhhc0tleSkgewogICAgY29uc3QgcGFnZU5hbWUgPSBfbGFuZy5kZWZhdWx0LnQoYHJvdXRlLiR7a2V5fWApOwogICAgcmV0dXJuIGAke3BhZ2VOYW1lfSAtICR7X3NldHRpbmdzLmRlZmF1bHQudGl0bGV9YDsKICB9CiAgcmV0dXJuIGAke19zZXR0aW5ncy5kZWZhdWx0LnRpdGxlfWA7Cn07Cl9yb3V0ZXIuZGVmYXVsdC5iZWZvcmVFYWNoKGFzeW5jICh0bywgXywgbmV4dCkgPT4gewogIC8vIFN0YXJ0IHByb2dyZXNzIGJhcgogIF9ucHJvZ3Jlc3MuZGVmYXVsdC5zdGFydCgpOwogIC8vIERldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4KICBpZiAoX2FkbWluLkFkbWluTW9kdWxlLnRva2VuKSB7CiAgICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsKICAgICAgLy8gSWYgaXMgbG9nZ2VkIGluLCByZWRpcmVjdCB0byB0aGUgaG9tZSBwYWdlCiAgICAgIG5leHQoewogICAgICAgIHBhdGg6ICcvJwogICAgICB9KTsKICAgICAgX25wcm9ncmVzcy5kZWZhdWx0LmRvbmUoKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIENoZWNrIHdoZXRoZXIgdGhlIHVzZXIgaGFzIG9idGFpbmVkIGhpcyBwZXJtaXNzaW9uIHJvbGVzCiAgICAgIGlmIChfYWRtaW4uQWRtaW5Nb2R1bGUucm9sZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIC8vIE5vdGU6IHJvbGVzIG11c3QgYmUgYSBvYmplY3QgYXJyYXkhIHN1Y2ggYXM6IFsnc3VwZXJhZG1pbicsJ2FkbWluJ10gb3IgWydleGVjdXRpdmUnXQogICAgICAgICAgYXdhaXQgX2FkbWluLkFkbWluTW9kdWxlLkdldEFkbWluSW5mbygpOwogICAgICAgICAgY29uc3Qgcm9sZXMgPSBfYWRtaW4uQWRtaW5Nb2R1bGUucm9sZXM7CiAgICAgICAgICAvLyBHZW5lcmF0ZSBhY2Nlc3NpYmxlIHJvdXRlcyBtYXAgYmFzZWQgb24gcm9sZQogICAgICAgICAgX3Blcm1pc3Npb24uUGVybWlzc2lvbk1vZHVsZS5HZW5lcmF0ZVJvdXRlcyhyb2xlcyk7CiAgICAgICAgICAvLyBEeW5hbWljYWxseSBhZGQgYWNjZXNzaWJsZSByb3V0ZXMKICAgICAgICAgIF9yb3V0ZXIuZGVmYXVsdC5hZGRSb3V0ZXMoX3Blcm1pc3Npb24uUGVybWlzc2lvbk1vZHVsZS5keW5hbWljUm91dGVzKTsKICAgICAgICAgIC8vIEhhY2s6IGVuc3VyZSBhZGRSb3V0ZXMgaXMgY29tcGxldGUKICAgICAgICAgIC8vIFNldCB0aGUgcmVwbGFjZTogdHJ1ZSwgc28gdGhlIG5hdmlnYXRpb24gd2lsbCBub3QgbGVhdmUgYSBoaXN0b3J5IHJlY29yZAogICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgIC4uLnRvLAogICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICB9KTsKICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIC8vIFJlbW92ZSB0b2tlbiBhbmQgcmVkaXJlY3QgdG8gbG9naW4gcGFnZQogICAgICAgICAgX2FkbWluLkFkbWluTW9kdWxlLlJlc2V0VG9rZW4oKTsKICAgICAgICAgIF9lbGVtZW50VWkuTWVzc2FnZS5lcnJvcihlcnIgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgbmV4dChgL2xvZ2luP3JlZGlyZWN0PSR7dG8ucGF0aH1gKTsKICAgICAgICAgIF9ucHJvZ3Jlc3MuZGVmYXVsdC5kb25lKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIG5leHQoKTsKICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICAvLyBIYXMgbm8gdG9rZW4KICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgLy8gSW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICBjb25zb2xlLmxvZygnd2hpdGVsaXN0Jyk7CiAgICAgIG5leHQoKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUubG9nKCdlbHNlJyk7CiAgICAgIC8vIE90aGVyIHBhZ2VzIHRoYXQgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgYXJlIHJlZGlyZWN0ZWQgdG8gdGhlIGxvZ2luIHBhZ2UuCiAgICAgIG5leHQoYC9sb2dpbj9yZWRpcmVjdD0ke3RvLnBhdGh9YCk7CiAgICAgIF9ucHJvZ3Jlc3MuZGVmYXVsdC5kb25lKCk7CiAgICB9CiAgfQp9KTsKX3JvdXRlci5kZWZhdWx0LmFmdGVyRWFjaCh0byA9PiB7CiAgdmFyIF90byRtZXRhOwogIC8vIEZpbmlzaCBwcm9ncmVzcyBiYXIKICBfbnByb2dyZXNzLmRlZmF1bHQuZG9uZSgpOwogIC8vIHNldCBwYWdlIHRpdGxlCiAgZG9jdW1lbnQudGl0bGUgPSBnZXRQYWdlVGl0bGUoKF90byRtZXRhID0gdG8ubWV0YSkgPT09IG51bGwgfHwgX3RvJG1ldGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90byRtZXRhLnRpdGxlKTsKfSk7"},{"version":3,"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAD0B;;AAG1BA,kBAAS,CAACC,SAAS,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAE,CAAC;AAE3C,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC;AAE9C,MAAMC,YAAY,GAAIC,GAAW,IAAI;EACnC,MAAMC,MAAM,GAAGC,aAAI,CAACC,EAAE,CAAC,SAASH,GAAG,EAAE,CAAC;EACtC,IAAIC,MAAM,EAAE;IACV,MAAMG,QAAQ,GAAGF,aAAI,CAACG,CAAC,CAAC,SAASL,GAAG,EAAE,CAAC;IACvC,OAAO,GAAGI,QAAQ,MAAME,iBAAQ,CAACC,KAAK,EAAE;;EAE1C,OAAO,GAAGD,iBAAQ,CAACC,KAAK,EAAE;AAC5B,CAAC;AAEDC,eAAM,CAACC,UAAU,CAAC,OAAMC,EAAS,EAAEC,CAAQ,EAAEC,IAAS,KAAI;EACxD;EACAjB,kBAAS,CAACkB,KAAK,EAAE;EAEjB;EACA,IAAIC,kBAAW,CAACC,KAAK,EAAE;IACrB,IAAIL,EAAE,CAACM,IAAI,KAAK,QAAQ,EAAE;MACxB;MACAJ,IAAI,CAAC;QAAEI,IAAI,EAAE;MAAG,CAAE,CAAC;MACnBrB,kBAAS,CAACsB,IAAI,EAAE;KACjB,MAAM;MACL;MACA,IAAIH,kBAAW,CAACI,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAClC,IAAI;UACF;UACA,MAAML,kBAAW,CAACM,YAAY,EAAE;UAEhC,MAAMF,KAAK,GAAGJ,kBAAW,CAACI,KAAK;UAC/B;UACAG,4BAAgB,CAACC,cAAc,CAACJ,KAAK,CAAC;UACtC;UACAV,eAAM,CAACe,SAAS,CAACF,4BAAgB,CAACG,aAAa,CAAC;UAChD;UACA;UACAZ,IAAI,CAAC;YAAE,GAAGF,EAAE;YAAEe,OAAO,EAAE;UAAI,CAAE,CAAC;SAC/B,CAAC,OAAOC,GAAG,EAAE;UACZ;UACAZ,kBAAW,CAACa,UAAU,EAAE;UACxBC,kBAAO,CAACC,KAAK,CAACH,GAAG,IAAI,WAAW,CAAC;UACjCd,IAAI,CAAC,mBAAmBF,EAAE,CAACM,IAAI,EAAE,CAAC;UAClCrB,kBAAS,CAACsB,IAAI,EAAE;;OAEnB,MAAM;QACLL,IAAI,EAAE;;;GAGX,MAAM;IACL;IACA,IAAId,SAAS,CAACgC,OAAO,CAACpB,EAAE,CAACM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACrC;MACAe,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAExBpB,IAAI,EAAE;KACP,MAAM;MAELmB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB;MACApB,IAAI,CAAC,mBAAmBF,EAAE,CAACM,IAAI,EAAE,CAAC;MAClCrB,kBAAS,CAACsB,IAAI,EAAE;;;AAGtB,CAAC,CAAC;AAEFT,eAAM,CAACyB,SAAS,CAAEvB,EAAS,IAAI;EAAA;EAC7B;EACAf,kBAAS,CAACsB,IAAI,EAAE;EAEhB;EACAiB,QAAQ,CAAC3B,KAAK,GAAGR,YAAY,aAACW,EAAE,CAACyB,IAAI,6CAAP,SAAS5B,KAAK,CAAC;AAC/C,CAAC,CAAC","names":["NProgress","configure","showSpinner","whiteList","getPageTitle","key","hasKey","i18n","te","pageName","t","settings","title","router","beforeEach","to","_","next","start","AdminModule","token","path","done","roles","length","GetAdminInfo","PermissionModule","GenerateRoutes","addRoutes","dynamicRoutes","replace","err","ResetToken","Message","error","indexOf","console","log","afterEach","document","meta"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/permission.ts"],"sourcesContent":["import router from './router'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\nimport { Message } from 'element-ui'\nimport { Route } from 'vue-router'\nimport { AdminModule } from '@/store/modules/admin'\nimport { PermissionModule } from '@/store/modules/permission'\nimport i18n from '@/lang' // Internationalization\nimport settings from './settings'\n\nNProgress.configure({ showSpinner: false })\n\nconst whiteList = ['/login', '/auth-redirect']\n\nconst getPageTitle = (key: string) => {\n  const hasKey = i18n.te(`route.${key}`)\n  if (hasKey) {\n    const pageName = i18n.t(`route.${key}`)\n    return `${pageName} - ${settings.title}`\n  }\n  return `${settings.title}`\n}\n\nrouter.beforeEach(async(to: Route, _: Route, next: any) => {\n  // Start progress bar\n  NProgress.start()\n\n  // Determine whether the user has logged in\n  if (AdminModule.token) {\n    if (to.path === '/login') {\n      // If is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      // Check whether the user has obtained his permission roles\n      if (AdminModule.roles.length === 0) {\n        try {\n          // Note: roles must be a object array! such as: ['superadmin','admin'] or ['executive']\n          await AdminModule.GetAdminInfo()\n          \n          const roles = AdminModule.roles\n          // Generate accessible routes map based on role\n          PermissionModule.GenerateRoutes(roles)\n          // Dynamically add accessible routes\n          router.addRoutes(PermissionModule.dynamicRoutes)\n          // Hack: ensure addRoutes is complete\n          // Set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true })\n        } catch (err) {\n          // Remove token and redirect to login page\n          AdminModule.ResetToken()\n          Message.error(err || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      } else {\n        next()\n      }\n    }\n  } else {\n    // Has no token\n    if (whiteList.indexOf(to.path) !== -1) {\n      // In the free login whitelist, go directly\n      console.log('whitelist')\n      \n      next()\n    } else {\n      \n      console.log('else')\n      // Other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach((to: Route) => {\n  // Finish progress bar\n  NProgress.done()\n\n  // set page title\n  document.title = getPageTitle(to.meta?.title)\n})\n"]}]}