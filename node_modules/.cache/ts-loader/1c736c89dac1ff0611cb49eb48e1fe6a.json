{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/callback.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/callback.ts","mtime":1668754947338},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVDYWxsYmFjayA9IGV4cG9ydHMuZ2V0RmlsdGVycyA9IGV4cG9ydHMuZ2V0Q2FsbGJhY2tCeUlkID0gZXhwb3J0cy5nZXRDYWxsYmFjayA9IGV4cG9ydHMuZGVsZXRlQ2FsbGJhY2sgPSBleHBvcnRzLmRlZmF1bHRDYWxsYmFja0RhdGEgPSBleHBvcnRzLmNyZWF0ZUNhbGxiYWNrID0gdm9pZCAwOwp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKY29uc3QgZGVmYXVsdENhbGxiYWNrRGF0YSA9IHsKICBpZDogMCwKICBlbmFibGVkOiB0cnVlLAogIGlzSW50cmVzdGVkOiBmYWxzZSwKICBpc0NvbnRhY3RlZDogZmFsc2UsCiAgbnVtYmVyOiAnJwp9OwpleHBvcnRzLmRlZmF1bHRDYWxsYmFja0RhdGEgPSBkZWZhdWx0Q2FsbGJhY2tEYXRhOwpjb25zdCBnZXRDYWxsYmFjayA9IHBhcmFtcyA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9jYWxsYmFjaycsCiAgbWV0aG9kOiAnZ2V0JywKICBwYXJhbXMKfSk7CmV4cG9ydHMuZ2V0Q2FsbGJhY2sgPSBnZXRDYWxsYmFjazsKY29uc3QgZ2V0Q2FsbGJhY2tCeUlkID0gaWQgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvY2FsbGJhY2svJHtpZH1gLAogIG1ldGhvZDogJ2dldCcKfSk7CmV4cG9ydHMuZ2V0Q2FsbGJhY2tCeUlkID0gZ2V0Q2FsbGJhY2tCeUlkOwpjb25zdCB1cGRhdGVDYWxsYmFjayA9IChpZCwgZGF0YSkgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvY2FsbGJhY2svJHtpZH1gLAogIG1ldGhvZDogJ3BhdGNoJywKICBkYXRhCn0pOwpleHBvcnRzLnVwZGF0ZUNhbGxiYWNrID0gdXBkYXRlQ2FsbGJhY2s7CmNvbnN0IGRlbGV0ZUNhbGxiYWNrID0gaWQgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6IGAvY2FsbGJhY2svJHtpZH1gLAogIG1ldGhvZDogJ2RlbGV0ZScKfSk7CmV4cG9ydHMuZGVsZXRlQ2FsbGJhY2sgPSBkZWxldGVDYWxsYmFjazsKY29uc3QgY3JlYXRlQ2FsbGJhY2sgPSBkYXRhID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL2NhbGxiYWNrLycsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5jcmVhdGVDYWxsYmFjayA9IGNyZWF0ZUNhbGxiYWNrOwpjb25zdCBnZXRGaWx0ZXJzID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9jYWxsYmFjay9mZXRjaCcsCiAgbWV0aG9kOiAncG9zdCcsCiAgZGF0YQp9KTsKZXhwb3J0cy5nZXRGaWx0ZXJzID0gZ2V0RmlsdGVyczs="},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,mBAAmB,GAAkB;EAChDC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,KAAK;EAClBC,MAAM,EAAE;CACT;AAAA;AACM,MAAMC,WAAW,GAAIC,MAAW,IACrC,oBAAO,EAAC;EACNC,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,eAAe,GAAIT,EAAU,IACxC,oBAAO,EAAC;EACNO,GAAG,EAAE,aAAaP,EAAE,EAAE;EACtBQ,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,cAAc,GAAG,CAACV,EAAU,EAAEW,IAAS,KAClD,oBAAO,EAAC;EACNJ,GAAG,EAAE,aAAaP,EAAE,EAAE;EACtBQ,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEG,MAAMC,cAAc,GAAIZ,EAAU,IACvC,oBAAO,EAAC;EACNO,GAAG,EAAE,aAAaP,EAAE,EAAE;EACtBQ,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMK,cAAc,GAAIF,IAAS,IACtC,oBAAO,EAAC;EACNJ,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMG,UAAU,GAAIH,IAAS,IAClC,oBAAO,EAAC;EACNJ,GAAG,EAAE,iBAAiB;EACtBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA","names":["defaultCallbackData","id","enabled","isIntrested","isContacted","number","getCallback","params","url","method","getCallbackById","updateCallback","data","deleteCallback","createCallback","getFilters"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/callback.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { ICallbackData } from './types'\n\nexport const defaultCallbackData: ICallbackData = {\n  id: 0,\n  enabled: true,\n  isIntrested: false,\n  isContacted: false,\n  number: ''\n}\nexport const getCallback = (params: any) =>\n  request({\n    url: '/callback',\n    method: 'get',\n    params\n  })\n\nexport const getCallbackById = (id: number) =>\n  request({\n    url: `/callback/${id}`,\n    method: 'get'\n  })\n\nexport const updateCallback = (id: number, data: any) =>\n  request({\n    url: `/callback/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteCallback = (id: string) =>\n  request({\n    url: `/callback/${id}`,\n    method: 'delete'\n  })\n\nexport const createCallback = (data: any) =>\n  request({\n    url: '/callback/',\n    method: 'post',\n    data\n  })\n\nexport const getFilters = (data: any) =>\n  request({\n    url: '/callback/fetch',\n    method: 'post',\n    data\n  })\n"]}]}