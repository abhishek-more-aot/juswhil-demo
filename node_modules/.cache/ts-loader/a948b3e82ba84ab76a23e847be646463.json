{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/enquiry.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/enquiry.ts","mtime":1668754947338},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy51cGRhdGVFbnF1aXJ5ID0gZXhwb3J0cy5nZXRGaWx0ZXJzID0gZXhwb3J0cy5nZXRFbnF1aXJ5QnlJZCA9IGV4cG9ydHMuZ2V0RW5xdWlyeSA9IGV4cG9ydHMuZGVsZXRlRW5xdWlyeSA9IGV4cG9ydHMuZGVmYXVsdEVucXVpcnlEYXRhID0gZXhwb3J0cy5jcmVhdGVFbnF1aXJ5ID0gdm9pZCAwOwp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKY29uc3QgZGVmYXVsdEVucXVpcnlEYXRhID0gewogIGlkOiAwLAogIGVuYWJsZWQ6IHRydWUsCiAgbmFtZTogJycsCiAgbnVtYmVyOiAnJywKICBlbWFpbDogJycsCiAgbWVzc2FnZTogJycKfTsKZXhwb3J0cy5kZWZhdWx0RW5xdWlyeURhdGEgPSBkZWZhdWx0RW5xdWlyeURhdGE7CmNvbnN0IGdldEVucXVpcnkgPSBwYXJhbXMgPT4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICB1cmw6ICcvY29udGFjdHMnLAogIG1ldGhvZDogJ2dldCcsCiAgcGFyYW1zCn0pOwpleHBvcnRzLmdldEVucXVpcnkgPSBnZXRFbnF1aXJ5Owpjb25zdCBnZXRFbnF1aXJ5QnlJZCA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2NvbnRhY3RzLyR7aWR9YCwKICBtZXRob2Q6ICdnZXQnCn0pOwpleHBvcnRzLmdldEVucXVpcnlCeUlkID0gZ2V0RW5xdWlyeUJ5SWQ7CmNvbnN0IHVwZGF0ZUVucXVpcnkgPSAoaWQsIGRhdGEpID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2NvbnRhY3RzLyR7aWR9YCwKICBtZXRob2Q6ICdwYXRjaCcsCiAgZGF0YQp9KTsKZXhwb3J0cy51cGRhdGVFbnF1aXJ5ID0gdXBkYXRlRW5xdWlyeTsKY29uc3QgZGVsZXRlRW5xdWlyeSA9IGlkID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiBgL2NvbnRhY3RzLyR7aWR9YCwKICBtZXRob2Q6ICdkZWxldGUnCn0pOwpleHBvcnRzLmRlbGV0ZUVucXVpcnkgPSBkZWxldGVFbnF1aXJ5Owpjb25zdCBjcmVhdGVFbnF1aXJ5ID0gZGF0YSA9PiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogIHVybDogJy9jb250YWN0cy8nLAogIG1ldGhvZDogJ3Bvc3QnLAogIGRhdGEKfSk7CmV4cG9ydHMuY3JlYXRlRW5xdWlyeSA9IGNyZWF0ZUVucXVpcnk7CmNvbnN0IGdldEZpbHRlcnMgPSBkYXRhID0+ICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgdXJsOiAnL2NvbnRhY3RzL2ZldGNoJywKICBtZXRob2Q6ICdwb3N0JywKICBkYXRhCn0pOwpleHBvcnRzLmdldEZpbHRlcnMgPSBnZXRGaWx0ZXJzOw=="},{"version":3,"mappings":";;;;;;;AAAA;AAGO,MAAMA,kBAAkB,GAAiB;EAC5CC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;CACZ;AAAA;AACM,MAAMC,UAAU,GAAIC,MAAW,IACpC,oBAAO,EAAC;EACNC,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE,KAAK;EACbF;CACD,CAAC;AAAA;AAEG,MAAMG,cAAc,GAAIV,EAAU,IACvC,oBAAO,EAAC;EACNQ,GAAG,EAAE,aAAaR,EAAE,EAAE;EACtBS,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAME,aAAa,GAAG,CAACX,EAAU,EAAEY,IAAS,KACjD,oBAAO,EAAC;EACNJ,GAAG,EAAE,aAAaR,EAAE,EAAE;EACtBS,MAAM,EAAE,OAAO;EACfG;CACD,CAAC;AAAA;AAEG,MAAMC,aAAa,GAAIb,EAAU,IACtC,oBAAO,EAAC;EACNQ,GAAG,EAAE,aAAaR,EAAE,EAAE;EACtBS,MAAM,EAAE;CACT,CAAC;AAAA;AAEG,MAAMK,aAAa,GAAIF,IAAS,IACrC,oBAAO,EAAC;EACNJ,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA;AAEG,MAAMG,UAAU,GAAIH,IAAS,IAClC,oBAAO,EAAC;EACNJ,GAAG,EAAE,iBAAiB;EACtBC,MAAM,EAAE,MAAM;EACdG;CACD,CAAC;AAAA","names":["defaultEnquiryData","id","enabled","name","number","email","message","getEnquiry","params","url","method","getEnquiryById","updateEnquiry","data","deleteEnquiry","createEnquiry","getFilters"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/api/enquiry.ts"],"sourcesContent":["import request from '@/utils/request'\nimport { IEnquiryData } from './types'\n\nexport const defaultEnquiryData: IEnquiryData = {\n    id: 0,\n    enabled: true,\n    name: '',\n    number: '',\n    email: '',\n    message: ''\n}\nexport const getEnquiry = (params: any) =>\n  request({\n    url: '/contacts',\n    method: 'get',\n    params\n  })\n\nexport const getEnquiryById = (id: number) =>\n  request({\n    url: `/contacts/${id}`,\n    method: 'get'\n  })\n\nexport const updateEnquiry = (id: number, data: any) =>\n  request({\n    url: `/contacts/${id}`,\n    method: 'patch',\n    data\n  })\n\nexport const deleteEnquiry = (id: string) =>\n  request({\n    url: `/contacts/${id}`,\n    method: 'delete'\n  })\n\nexport const createEnquiry = (data: any) =>\n  request({\n    url: '/contacts/',\n    method: 'post',\n    data\n  })\n\nexport const getFilters = (data: any) =>\n  request({\n    url: '/contacts/fetch',\n    method: 'post',\n    data\n  })\n"]}]}