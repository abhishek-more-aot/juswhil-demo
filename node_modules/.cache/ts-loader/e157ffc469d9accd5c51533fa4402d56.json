{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/directives/clipboard/index.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/directives/clipboard/index.ts","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvaG9tZS9hbGdvb2NlYW4vRGVza3RvcC9BT1QtUHJvamVjdC9teXZhcm5pLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5jbGlwYm9hcmQgPSB2b2lkIDA7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci5jYXVzZS5qcyIpOwp2YXIgX2NsaXBib2FyZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiY2xpcGJvYXJkIikpOwovLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vSW5uZHkvdnVlLWNsaXBib2FyZDIKCmlmICghX2NsaXBib2FyZC5kZWZhdWx0KSB7CiAgdGhyb3cgbmV3IEVycm9yKCd5b3Ugc2hvdWxkIG5wbSBpbnN0YWxsIGBjbGlwYm9hcmRgIC0tc2F2ZSBhdCBmaXJzdCAnKTsKfQpsZXQgc3VjY2Vzc0NhbGxiYWNrOwpsZXQgZXJyb3JDYWxsYmFjazsKbGV0IGNsaXBib2FyZEluc3RhbmNlOwpjb25zdCBjbGlwYm9hcmQgPSB7CiAgYmluZChlbCwgYmluZGluZykgewogICAgaWYgKGJpbmRpbmcuYXJnID09PSAnc3VjY2VzcycpIHsKICAgICAgc3VjY2Vzc0NhbGxiYWNrID0gYmluZGluZy52YWx1ZTsKICAgIH0gZWxzZSBpZiAoYmluZGluZy5hcmcgPT09ICdlcnJvcicpIHsKICAgICAgZXJyb3JDYWxsYmFjayA9IGJpbmRpbmcudmFsdWU7CiAgICB9IGVsc2UgewogICAgICBjbGlwYm9hcmRJbnN0YW5jZSA9IG5ldyBfY2xpcGJvYXJkLmRlZmF1bHQoZWwsIHsKICAgICAgICB0ZXh0KCkgewogICAgICAgICAgcmV0dXJuIGJpbmRpbmcudmFsdWU7CiAgICAgICAgfSwKICAgICAgICBhY3Rpb24oKSB7CiAgICAgICAgICByZXR1cm4gYmluZGluZy5hcmcgPT09ICdjdXQnID8gJ2N1dCcgOiAnY29weSc7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgY2xpcGJvYXJkSW5zdGFuY2Uub24oJ3N1Y2Nlc3MnLCBlID0+IHsKICAgICAgICBjb25zdCBjYWxsYmFjayA9IHN1Y2Nlc3NDYWxsYmFjazsKICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhlKTsKICAgICAgfSk7CiAgICAgIGNsaXBib2FyZEluc3RhbmNlLm9uKCdlcnJvcicsIGUgPT4gewogICAgICAgIGNvbnN0IGNhbGxiYWNrID0gZXJyb3JDYWxsYmFjazsKICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhlKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICB1cGRhdGUoZWwsIGJpbmRpbmcpIHsKICAgIGlmIChiaW5kaW5nLmFyZyA9PT0gJ3N1Y2Nlc3MnKSB7CiAgICAgIHN1Y2Nlc3NDYWxsYmFjayA9IGJpbmRpbmcudmFsdWU7CiAgICB9IGVsc2UgaWYgKGJpbmRpbmcuYXJnID09PSAnZXJyb3InKSB7CiAgICAgIGVycm9yQ2FsbGJhY2sgPSBiaW5kaW5nLnZhbHVlOwogICAgfSBlbHNlIHsKICAgICAgY2xpcGJvYXJkSW5zdGFuY2UgPSBuZXcgX2NsaXBib2FyZC5kZWZhdWx0KGVsLCB7CiAgICAgICAgdGV4dCgpIHsKICAgICAgICAgIHJldHVybiBiaW5kaW5nLnZhbHVlOwogICAgICAgIH0sCiAgICAgICAgYWN0aW9uKCkgewogICAgICAgICAgcmV0dXJuIGJpbmRpbmcuYXJnID09PSAnY3V0JyA/ICdjdXQnIDogJ2NvcHknOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICB1bmJpbmQoXywgYmluZGluZykgewogICAgaWYgKGJpbmRpbmcuYXJnID09PSAnc3VjY2VzcycpIHsKICAgICAgc3VjY2Vzc0NhbGxiYWNrID0gbnVsbDsKICAgIH0gZWxzZSBpZiAoYmluZGluZy5hcmcgPT09ICdlcnJvcicpIHsKICAgICAgZXJyb3JDYWxsYmFjayA9IG51bGw7CiAgICB9IGVsc2UgewogICAgICBpZiAoY2xpcGJvYXJkSW5zdGFuY2UpIHsKICAgICAgICBjbGlwYm9hcmRJbnN0YW5jZS5kZXN0cm95KCk7CiAgICAgIH0KICAgICAgY2xpcGJvYXJkSW5zdGFuY2UgPSBudWxsOwogICAgfQogIH0KfTsKZXhwb3J0cy5jbGlwYm9hcmQgPSBjbGlwYm9hcmQ7"},{"version":3,"mappings":";;;;;;;;AACA;AADA;;AAIA,IAAI,CAACA,kBAAS,EAAE;EACd,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;;AAGxE,IAAIC,eAAgC;AACpC,IAAIC,aAA8B;AAClC,IAAIC,iBAAmC;AAEhC,MAAMC,SAAS,GAAqB;EACzCC,IAAI,CAACC,EAAE,EAAEC,OAAO;IACd,IAAIA,OAAO,CAACC,GAAG,KAAK,SAAS,EAAE;MAC7BP,eAAe,GAAGM,OAAO,CAACE,KAAK;KAChC,MAAM,IAAIF,OAAO,CAACC,GAAG,KAAK,OAAO,EAAE;MAClCN,aAAa,GAAGK,OAAO,CAACE,KAAK;KAC9B,MAAM;MACLN,iBAAiB,GAAG,IAAIJ,kBAAS,CAACO,EAAE,EAAE;QACpCI,IAAI;UAAK,OAAOH,OAAO,CAACE,KAAK;QAAC,CAAC;QAC/BE,MAAM;UAAK,OAAOJ,OAAO,CAACC,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;QAAC;OAC1D,CAAC;MACFL,iBAAiB,CAACS,EAAE,CAAC,SAAS,EAAEC,CAAC,IAAG;QAClC,MAAMC,QAAQ,GAAGb,eAAe;QAChCa,QAAQ,IAAIA,QAAQ,CAACD,CAAC,CAAC;MACzB,CAAC,CAAC;MACFV,iBAAiB,CAACS,EAAE,CAAC,OAAO,EAAEC,CAAC,IAAG;QAChC,MAAMC,QAAQ,GAAGZ,aAAa;QAC9BY,QAAQ,IAAIA,QAAQ,CAACD,CAAC,CAAC;MACzB,CAAC,CAAC;;EAEN,CAAC;EAEDE,MAAM,CAACT,EAAE,EAAEC,OAAO;IAChB,IAAIA,OAAO,CAACC,GAAG,KAAK,SAAS,EAAE;MAC7BP,eAAe,GAAGM,OAAO,CAACE,KAAK;KAChC,MAAM,IAAIF,OAAO,CAACC,GAAG,KAAK,OAAO,EAAE;MAClCN,aAAa,GAAGK,OAAO,CAACE,KAAK;KAC9B,MAAM;MACLN,iBAAiB,GAAG,IAAIJ,kBAAS,CAACO,EAAE,EAAE;QACpCI,IAAI;UAAK,OAAOH,OAAO,CAACE,KAAK;QAAC,CAAC;QAC/BE,MAAM;UAAK,OAAOJ,OAAO,CAACC,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;QAAC;OAC1D,CAAC;;EAEN,CAAC;EAEDQ,MAAM,CAACC,CAAC,EAAEV,OAAO;IACf,IAAIA,OAAO,CAACC,GAAG,KAAK,SAAS,EAAE;MAC7BP,eAAe,GAAG,IAAI;KACvB,MAAM,IAAIM,OAAO,CAACC,GAAG,KAAK,OAAO,EAAE;MAClCN,aAAa,GAAG,IAAI;KACrB,MAAM;MACL,IAAIC,iBAAiB,EAAE;QACrBA,iBAAiB,CAACe,OAAO,EAAE;;MAE7Bf,iBAAiB,GAAG,IAAI;;EAE5B;CACD;AAAA","names":["Clipboard","Error","successCallback","errorCallback","clipboardInstance","clipboard","bind","el","binding","arg","value","text","action","on","e","callback","update","unbind","_","destroy"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/directives/clipboard/index.ts"],"sourcesContent":["// Inspired by https://github.com/Inndy/vue-clipboard2\nimport Clipboard from 'clipboard'\nimport { DirectiveOptions } from 'vue'\n\nif (!Clipboard) {\n  throw new Error('you should npm install `clipboard` --save at first ')\n}\n\nlet successCallback: Function | null\nlet errorCallback: Function | null\nlet clipboardInstance: Clipboard | null\n\nexport const clipboard: DirectiveOptions = {\n  bind(el, binding) {\n    if (binding.arg === 'success') {\n      successCallback = binding.value\n    } else if (binding.arg === 'error') {\n      errorCallback = binding.value\n    } else {\n      clipboardInstance = new Clipboard(el, {\n        text() { return binding.value },\n        action() { return binding.arg === 'cut' ? 'cut' : 'copy' }\n      })\n      clipboardInstance.on('success', e => {\n        const callback = successCallback\n        callback && callback(e)\n      })\n      clipboardInstance.on('error', e => {\n        const callback = errorCallback\n        callback && callback(e)\n      })\n    }\n  },\n\n  update(el, binding) {\n    if (binding.arg === 'success') {\n      successCallback = binding.value\n    } else if (binding.arg === 'error') {\n      errorCallback = binding.value\n    } else {\n      clipboardInstance = new Clipboard(el, {\n        text() { return binding.value },\n        action() { return binding.arg === 'cut' ? 'cut' : 'copy' }\n      })\n    }\n  },\n\n  unbind(_, binding) {\n    if (binding.arg === 'success') {\n      successCallback = null\n    } else if (binding.arg === 'error') {\n      errorCallback = null\n    } else {\n      if (clipboardInstance) {\n        clipboardInstance.destroy()\n      }\n      clipboardInstance = null\n    }\n  }\n}\n"]}]}