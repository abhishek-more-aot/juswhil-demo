{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/testimonial/component/TestimonialDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/testimonial/component/TestimonialDetail.vue","mtime":1668755884584},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Vue","constructor","some_params","smail","Object","assign","defaultTestimonialData","name","required","message","trigger","min","max","pattern","image","priority","toggleShow","showImageUpload","toggleSketch","showSketchUpload","cropSuccess","imgDataUrl","field","data","FormData","fetch","then","res","blob","file","File","type","split","append","event","console","log","postForm","cropSketchSuccess","sketch","review","onClose","onSketchClose","lang","AppModule","language","created","isEdit","id","$route","params","fetchData","parseInt","tempTagView","err","error","setTagsViewTitle","title","tagView","TagsViewModule","updateVisitedView","setPageTitle","document","submitForm","$refs","validate","valid","saveForm","resetForm","resetImage","resetFields","loading","$notify","duration","router","push","$message","default","Action","default_1","components","Dropzone","AvatarUpload","PanThumb"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/testimonial/component/TestimonialDetail.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport {\n  getTestimonialById,\n  defaultTestimonialData,\n  updateTestimonial,\n  addTestimonial\n} from '@/api/testimonial'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport Dropzone from '@/components/Dropzone/index.vue'\nimport { uploadFile } from '@/api/common'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\n\n@Component({\n  name: 'TestimonialDetail',\n  components: {\n    Dropzone,\n    AvatarUpload,\n    PanThumb\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private dialogVisibility:boolean=false\n   private showImageUpload = false\n   private showSketchUpload = false\n  private sketch = 'https://via.placeholder.com/300'\n  private image = 'https://via.placeholder.com/300'\n  private resetImage = 'https://via.placeholder.com/300'\n  private params = { some_params: 'your_params_goes_here' }\n  private headers = { smail: '*_~' }\n\n  private postForm = Object.assign({}, defaultTestimonialData);\n  private loading = false;\n  private rules = {\n    name: [\n      { required: true, message: 'Please enter testimonial name', trigger: 'blur' },\n      {\n        min: 3,\n        max: 150,\n        message: 'Length should be 3 to 150',\n        trigger: 'blur'\n      },\n      {\n        pattern: '^[a-zA-Z0-9]',\n        message: 'No Special Characters allowed',\n        trigger: ['blur', 'change']\n      }\n    ],\n\n    image: [\n      {\n        message: 'Please enter image',\n        required: true,\n        trigger: 'blur'\n      }\n      // { validator: this.validateImage, trigger: 'blur' }\n    ],\n    priority: [\n      { required: true, message: 'Please enter priority', trigger: 'blur' }\n\n    ]\n\n  };\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private toggleSketch() {\n    this.showSketchUpload = !this.showSketchUpload\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.image = res\n        })\n      })\n  }\n\n  private cropSketchSuccess(imgDataUrl: string, field: string) {\n    this.sketch = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.review = res\n        })\n      })\n  }\n\n  // validateImage (rule:any, value:any, callback:any) {\n  //   \n  //     if (this.postForm.image.length<=0) {\n  //       \n  //       callback(new Error('Icon is required'));\n  //     } else {\n  //       callback();\n  //     }\n  //   };\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private onSketchClose() {\n    this.showSketchUpload = false\n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultTestimonialData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getTestimonialById(id)\n      this.image = data.image\n      this.postForm = data\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        console.error('Submit Error!')\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    this.image = this.resetImage;\n    (this.$refs.postForm as Form).resetFields()\n    this.postForm.image = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        await updateTestimonial(this.postForm.id, this.postForm)\n      } else {\n        await addTestimonial(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Testimonial saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/testimonial/list')\n    } catch (err) {\n      this.loading = false\n      this.$message(err.message)\n    }\n  }\n}\n"]}]}