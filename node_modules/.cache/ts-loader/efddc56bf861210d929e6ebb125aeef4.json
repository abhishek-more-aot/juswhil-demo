{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/login/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/login/index.vue","mtime":1672835322359},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Vue","constructor","rule","value","callback","Error","length","email","password","confirmPassword","userId","sessionId","validator","validateUsername","trigger","validatePassword","validateEmail","message","created","paramsArray","window","location","href","split","code","id","changePasswordForm","parseInt","checkLink","then","res","responseCode","AdminModule","$message","type","changePasswordDialog","error","onRouteChange","route","query","redirect","otherQuery","getOtherQuery","mounted","loginForm","$refs","focus","closeDialog","centerDialogVisible","resetForm","changePassword","validate","valid","changePasswordloading","$notify","title","duration","forgotPassword","resetloading","data","showPwd","passwordType","$nextTick","showConfirmPwd","confirmPasswordType","handleLogin","loading","Login","$router","push","path","Object","keys","reduce","acc","cur","immediate","default_1","name","components","LangSelect"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/login/index.vue?vue&type=script&lang=ts&"],"sourcesContent":["\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { AdminModule } from '@/store/modules/admin'\nimport { isValidEmail } from '@/utils/validate'\nimport LangSelect from '@/components/LangSelect/index.vue'\nimport { Dictionary, Route } from 'vue-router/types/router'\nimport { Input } from 'element-ui'\nimport { ElForm } from 'element-ui/types/form'\nimport {\n  changePassword,\n  changePasswordLink,\n  forgotPassword\n} from '@/api/admins'\nimport data from '../pdf/content'\n\n@Component({\n  name: 'Login',\n  components: {\n    LangSelect\n  }\n})\nexport default class extends Vue {\n  centerDialogVisible: boolean = false;\n  private validateUsername = (rule: any, value: string, callback: Function) => {\n    if (!isValidEmail(value)) {\n      callback(new Error('Please enter valid email'))\n    } else {\n      callback()\n    }\n  };\n\n  private validatePassword = (rule: any, value: string, callback: Function) => {\n    if (value.length < 6) {\n      callback(new Error('The password can not be less than 6 digits'))\n    } else {\n      callback()\n    }\n  };\n\n  private validateEmail = (rule: any, value: string, callback: Function) => {\n    if (!isValidEmail(value)) {\n      callback(new Error('Please enter valid email'))\n    } else {\n      callback()\n    }\n  };\n\n  created() {\n     var paramsArray:any=window.location.href.split('?')[1].split('&')\n    const code = paramsArray[1].split('=')[1]\n    const id = paramsArray[0].split('=')[1]\n    \n    if (code != null && id != null) {\n      this.changePasswordForm.userId = parseInt(id)\n      this.changePasswordForm.sessionId = code\n      this.checkLink()\n    }\n  }\n\n    // const urlParams = new URLSearchParams(window.location.search)\n    // const code = urlParams.get('sessionId')\n    // const id = urlParams.get('id')\n    // if (code != null && id != null) {\n    //   this.changePasswordForm.userId = parseInt(id)\n    //   this.changePasswordForm.sessionId = code\n    //   this.checkLink()\n    // }\n  // }\n\n  private async checkLink() {\n    try {\n      await changePasswordLink(this.changePasswordForm).then((res: any) => {\n        if (res.responseCode == 300 && AdminModule.id == null) {\n          this.$message({\n            message: 'Oops! Link expired',\n            type: 'error'\n          })\n        } else if (res.responseCode == 200) {\n          this.changePasswordDialog = true\n        } else {\n        }\n      })\n    } catch (error) {\n      this.$message(error.message)\n    }\n  }\n\n  private loginForm = {\n    email: '',\n    password: ''\n  };\n\n  private resetForm = {\n    email: ''\n  };\n\n  private changePasswordForm = {\n    password: '',\n    confirmPassword: '',\n    userId: 0,\n    sessionId: ''\n  };\n\n  private loginRules = {\n    email: [{ validator: this.validateUsername, trigger: 'blur' }],\n    password: [{ validator: this.validatePassword, trigger: 'blur' }]\n  };\n\n  private resetRules = {\n    email: [{ validator: this.validateEmail, trigger: 'blur' }]\n  };\n\n  private changePassRules = {\n    password: [\n      {\n        validator: this.validatePassword,\n        trigger: 'blur',\n        message: 'Password is required'\n      }\n    ],\n    confirmPassword: [\n      {\n        validator: this.validatePassword,\n        trigger: 'blur',\n        message: 'Confirm password is required'\n      }\n    ]\n  };\n\n  private passwordType = 'password'\n  private confirmPasswordType = 'password'\n  private resetloading = false\n  private showDialog = false\n  private changePasswordDialog = false\n  private changePasswordloading = false\n  private loading = false\n\n  private redirect?: string;\n  private otherQuery: Dictionary<string> = {}\n\n  @Watch('$route', { immediate: true })\n  private onRouteChange(route: Route) {\n    // TODO: remove the \"as Dictionary<string>\" hack after v4 release for vue-router\n    // See https://github.com/vuejs/vue-router/pull/2050 for details\n    const query = route.query as Dictionary<string>\n    if (query) {\n      this.redirect = query.redirect\n      this.otherQuery = this.getOtherQuery(query)\n    }\n  }\n\n  mounted() {\n  //   if (this.loginForm.email === '') {\n  //     (this.$refs.email as Input).focus()\n  //   } else if (this.loginForm.password === '') {\n  //     (this.$refs.password as Input).focus()\n  //   }\n  // }\n   if (this.loginForm.email === '') {\n      (this.$refs.email as Input).focus()\n    } else if (this.loginForm.password === '') {\n      (this.$refs.password as Input).focus()\n    }\n  }\n\n  private closeDialog(){\n    this.centerDialogVisible = false\n    this.resetForm.email = ''\n  }\n\n  private async changePassword() {\n    (this.$refs.changePasswordForm as ElForm).validate(\n      async(valid: boolean) => {\n        if (this.changePasswordForm.password === this.changePasswordForm.confirmPassword) {\n          if (valid) {\n            this.changePasswordloading = true\n            try {\n              await changePassword(this.changePasswordForm)\n              this.$notify({\n                title: 'Success',\n                message: 'Password changed successfully',\n                type: 'success',\n                duration: 3000\n              })\n              this.changePasswordloading = false\n              this.changePasswordDialog = false\n            } catch (error) {\n              this.changePasswordloading = false\n              this.$message(error.message)\n            }\n          } else {\n            this.$message({\n              message: 'Enter all details',\n              type: 'error'\n            })\n            return false\n          }\n        } else {\n          this.$message({\n            message: 'Password doesn\\'t match',\n            type: 'error'\n          })\n          return false\n        }\n      }\n    )\n  }\n\n  private async forgotPassword() {\n    (this.$refs.resetForm as ElForm).validate(async(valid: boolean) => {\n      if (valid) {\n        this.resetloading = true\n        try {\n          var data:any = await forgotPassword(this.resetForm)\n          if (data.responseCode == 200) {\n            this.$notify({\n              title: 'Success',\n              message: 'Reset link has been sent to your mail',\n              type: 'success',\n              duration: 3000\n            })\n            this.centerDialogVisible = false\n            this.resetForm.email = ''\n          } else {\n            this.$message({\n              message: 'Email does not exists',\n              type: 'error'\n            })\n          }\n          this.resetloading = false\n        } catch (error) {\n          this.resetloading = false\n        }\n      } else {\n        this.$message({\n          message: 'Invalid email',\n          type: 'error'\n        })\n        return false\n      }\n    })\n  }\n\n  private showPwd() {\n    if (this.passwordType === 'password') {\n      this.passwordType = ''\n    } else {\n      this.passwordType = 'password'\n    }\n    this.$nextTick(() => {\n      (this.$refs.password as Input).focus()\n    })\n  }\n\n  private showConfirmPwd() {\n    if (this.confirmPasswordType === 'password') {\n      this.confirmPasswordType = ''\n    } else {\n      this.confirmPasswordType = 'password'\n    }\n    this.$nextTick(() => {\n      (this.$refs.confirmPassword as Input).focus()\n    })\n  }\n\n  private handleLogin() {\n    (this.$refs.loginForm as ElForm).validate(async(valid: boolean) => {\n      if (valid) {\n        this.loading = true\n        try {\n          await AdminModule.Login(this.loginForm)\n          this.$router.push({\n            path: this.redirect || '/',\n            query: this.otherQuery\n          })\n        } catch (error) {\n          this.loading = false\n        }\n      } else {\n        this.$message({\n          message: 'Invalid email or password',\n          type: 'error'\n        })\n        return false\n      }\n    })\n  }\n\n  private getOtherQuery(query: Dictionary<string>) {\n    return Object.keys(query).reduce((acc, cur) => {\n      if (cur !== 'redirect') {\n        acc[cur] = query[cur]\n      }\n      return acc\n    }, {} as Dictionary<string>)\n  }\n}\n"]}]}