{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js??ref--15-2!/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/excel.ts","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/excel.ts","mtime":1668754947370},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/babel.config.js","mtime":1668754947334},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js","mtime":1655274294254}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["Workbook","constructor","generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspanStr","getAttribute","rowspanStr","colspan","rowspan","parseInt","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","date","Date","UTC","sheetFromDataArray","data","ws","v","t","z","cellRef","XLSX","utils","encode_cell","SSF","get_table","encode_range","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","exportTable2Excel","id","theTable","document","getElementById","oo","wsName","wb","SheetNames","Sheets","wbout","write","bookType","bookSST","type","Blob","exportJson2Excel","header","filename","multiHeader","merges","autoWidth","unshift","item","decode_range","colWidth","map","val","wch","toString","result","j"],"sourceRoot":"","sources":["/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/eslint-loader/index.js??ref--14-0!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/utils/excel.ts"],"sourcesContent":["import { saveAs } from 'file-saver'\nimport XLSX, { WorkBook, WorkSheet } from 'xlsx'\n\ninterface ICell {\n  v: Date | number | boolean | string\n  t: string\n  z: string\n}\n\nclass Workbook implements WorkBook {\n  SheetNames: string[] = []\n  Sheets: { [sheet: string]: WorkSheet } = {}\n}\n\nconst generateArray = (table: HTMLElement) => {\n  const out = []\n  const rows = table.querySelectorAll('tr')\n  const ranges = []\n  for (let R = 0; R < rows.length; ++R) {\n    const outRow = []\n    const row = rows[R]\n    const columns = row.querySelectorAll('td')\n    for (let C = 0; C < columns.length; ++C) {\n      const cell = columns[C]\n      const colspanStr = cell.getAttribute('colspan')\n      const rowspanStr = cell.getAttribute('rowspan')\n      let colspan\n      let rowspan\n      if (colspanStr) {\n        colspan = parseInt(colspanStr)\n      }\n      if (rowspanStr) {\n        rowspan = parseInt(rowspanStr)\n      }\n      const cellValue = cell.innerText\n      // Skip ranges\n      ranges.forEach(function(range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (let i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null)\n        }\n      })\n      // Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1\n        colspan = colspan || 1\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        })\n      }\n      // Handle Value\n      outRow.push(cellValue !== '' ? cellValue : null)\n      // Handle Colspan\n      if (colspan) {\n        for (let k = 0; k < colspan - 1; ++k) {\n          outRow.push(null)\n        }\n      }\n    }\n    out.push(outRow)\n  }\n  return [out, ranges]\n}\n\nconst datenum = (date: Date) => {\n  return (+date - +new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000)\n}\n\nconst sheetFromDataArray = (data: any) => {\n  const ws: { [key: string]: any } = {}\n  const range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  }\n  for (let R = 0; R !== data.length; ++R) {\n    for (let C = 0; C !== data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R\n      if (range.s.c > C) range.s.c = C\n      if (range.e.r < R) range.e.r = R\n      if (range.e.c < C) range.e.c = C\n      const cell: ICell = {\n        v: data[R][C],\n        t: '',\n        z: ''\n      }\n      if (cell.v == null) continue\n      const cellRef = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      })\n      if (typeof cell.v === 'number') cell.t = 'n'\n      else if (typeof cell.v === 'boolean') cell.t = 'b'\n      else if (cell.v instanceof Date) {\n        cell.t = 'n'\n        cell.z = XLSX.SSF.get_table()[14]\n        cell.v = datenum(cell.v)\n      } else cell.t = 's'\n      ws[cellRef] = cell\n    }\n  }\n  if (range.s.c < 10000000) {\n    ws['!ref'] = XLSX.utils.encode_range(range)\n  }\n  return ws\n}\n\nconst s2ab = (s: string) => {\n  const buf = new ArrayBuffer(s.length)\n  const view = new Uint8Array(buf)\n  for (let i = 0; i !== s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF\n  }\n  return buf\n}\n\nexport const exportTable2Excel = (id: string) => {\n  const theTable = document.getElementById(id)\n  if (theTable) {\n    const oo = generateArray(theTable)\n    const ranges = oo[1]\n\n    /* original data */\n    const data = oo[0]\n    const wsName: string = 'SheetJS'\n\n    const wb = new Workbook()\n    const ws = sheetFromDataArray(data)\n\n    /* add ranges to worksheet */\n    // ws['!cols'] = ['apple', 'banan']\n    ws['!merges'] = ranges\n\n    /* add worksheet to workbook */\n    wb.SheetNames.push(wsName)\n    wb.Sheets[wsName] = ws\n\n    const wbout = XLSX.write(wb, {\n      bookType: 'xlsx',\n      bookSST: false,\n      type: 'binary'\n    })\n\n    saveAs(new Blob([s2ab(wbout)], {\n      type: 'application/octet-stream'\n    }), 'test.xlsx')\n  }\n}\n\nexport const exportJson2Excel = (header: string[], data: any, filename: string = 'excel-list', multiHeader: string[][] = [], merges:any[] = [], autoWidth: boolean = true, bookType: string = 'xlsx') => {\n  data = [...data]\n  data.unshift(header)\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i])\n  }\n\n  const wsName = 'SheetJS'\n  const wb = new Workbook()\n  const ws = sheetFromDataArray(data)\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) {\n      ws['!merges'] = []\n    }\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item))\n    })\n  }\n\n  if (autoWidth) {\n    // 设置worksheet每列的最大宽度\n    const colWidth = data.map((row: any) => row.map((val: any) => {\n      // 先判断是否为 null/undefined\n      if (val == null) {\n        return {\n          wch: 10\n        }\n      // 再判断是否为中文\n      } else if (val.toString().charCodeAt(0) > 255) {\n        return {\n          wch: val.toString().length * 2\n        }\n      } else {\n        return {\n          wch: val.toString().length\n        }\n      }\n    }))\n    // 以第一行为初始值\n    const result = colWidth[0]\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j].wch < colWidth[i][j].wch) {\n          result[j].wch = colWidth[i][j].wch\n        }\n      }\n    }\n    ws['!cols'] = result\n  }\n\n  // Add worksheet to workbook\n  wb.SheetNames.push(wsName)\n  wb.Sheets[wsName] = ws\n\n  const wbout = XLSX.write(wb, {\n    bookType: bookType as any,\n    bookSST: false,\n    type: 'binary'\n  })\n\n  saveAs(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }), `${filename}.${bookType}`)\n}\n"]}]}