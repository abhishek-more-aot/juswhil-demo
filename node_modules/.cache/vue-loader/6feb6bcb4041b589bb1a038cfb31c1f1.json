{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/warranty/components/WarrantyDetail.vue?vue&type=style&index=0&id=700cb36d&lang=scss&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/warranty/components/WarrantyDetail.vue","mtime":1672064999299},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZG1pbi10ZXh0YXJlYSB7CiAgdGV4dGFyZWEgewogICAgcGFkZGluZy1yaWdodDogNDBweDsKICAgIHJlc2l6ZTogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkdGV4dEFyZWFCb3R0b207CiAgfQp9Cg=="},{"version":3,"sources":["WarrantyDetail.vue"],"names":[],"mappings":";AAwdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WarrantyDetail.vue","sourceRoot":"src/views/warranty/components","sourcesContent":["<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        status-icon\n        :rules=\"rules\"\n        label-width=\"160px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          style=\"margin-bottom: 20px\"\n          label=\"Enabled\"\n          prop=\"enabled\"\n        >\n          <el-switch v-model=\"postForm.enabled\" />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px\"\n          label=\"First Name\"\n          prop=\"firstName\"\n        >\n          <el-input\n            v-model=\"postForm.firstName\"\n            name=\"firstName\"\n            style=\"width: 50%\"\n            required\n            placeholder=\"First Name\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px\"\n          label=\"Last Name\"\n          prop=\"lastName\"\n        >\n          <el-input\n            v-model=\"postForm.lastName\"\n            name=\"lastName\"\n            style=\"width: 50%\"\n            required\n            placeholder=\"Last Name\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px\"\n          label=\"Phone Number\"\n          prop=\"contactNumber\"\n        >\n          <el-input\n            v-model=\"postForm.contactNumber\"\n            name=\"contactNumber\"\n            style=\"width: 50%\"\n            required\n            placeholder=\"Phone Number\"\n          />\n        </el-form-item>\n\n        <el-form-item style=\"margin-bottom: 20px\" label=\"Email\" prop=\"email\">\n          <el-input\n            v-model=\"postForm.email\"\n            name=\"email\"\n            style=\"width: 50%\"\n            required\n            placeholder=\"Email\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px; margin-top: 20px\"\n          label=\"Products Id\"\n          prop=\"productsId\"\n        >\n          <el-select\n            v-model=\"postForm.productsId\"\n            name=\"productsId\"\n            style=\"width: 50%\"\n            filterable\n            placeholder=\"Select\"\n            @change=\"fetchValues()\"\n          >\n            <el-option\n              v-for=\"item in redirectionOption\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px; margin-top: 20px\"\n          label=\"Purchased From\"\n          prop=\"purchasedFromId\"\n        >\n          <el-select\n            v-model=\"postForm.purchasedFromId\"\n            name=\"purchasedFromId\"\n            style=\"width: 50%\"\n            filterable\n            placeholder=\"Select\"\n            @change=\"fetchValues()\"\n          >\n            <el-option\n              v-for=\"item in purchasedFromOption\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px; margin-top: 20px\"\n          label=\"Purchased Date\"\n          prop=\"purchasedDate\"\n        >\n          <el-date-picker\n            style=\"width: 50%\"\n            v-model=\"postForm.purchasedDate\"\n            type=\"date\"\n            placeholder=\"Pick a day\"\n          >\n          </el-date-picker>\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px; margin-top: 20px\"\n          label=\"Invoice\"\n          prop=\"invoice\"\n        >\n          <el-upload\n            class=\"upload-demo\"\n            action=\"https://jsonplaceholder.typicode.com/posts/\"\n            :http-request=\"uploadDocument\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :before-remove=\"beforeRemove\"\n            :before-upload=\"beforeUpload\"\n            multiple\n            :on-exceed=\"handleExceed\"\n            :show-file-list=\"false\"\n          >\n            <el-button\n              v-loading=\"documentLoading\"\n              size=\"small\"\n              type=\"primary\"\n            >\n              Click to upload\n            </el-button>\n          </el-upload>\n          <div v-if=\"postForm.invoice != ''\">\n              <el-tag\n                type=\"danger\"\n                style=\"color:blue\"\n                :closable=\"true\"\n                @close=\"handleCloseDocument\"\n              >\n                <a\n                  :href=\"this.postForm.invoice\"\n                  target=\"_blank\"\n                >{{\n                  this.postForm.invoice.split(\"/\")[this.postForm.invoice.split(\"/\").length - 1]\n                }}</a>\n              </el-tag>\n          </div>\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px; margin-top: 20px\"\n          label=\"Categories Id\"\n          prop=\"categoriesId\"\n        >\n          <el-select\n            v-model=\"postForm.categoriesId\"\n            name=\"categoriesId\"\n            style=\"width: 50%\"\n            filterable\n            placeholder=\"Select\"\n            @change=\"fetchCategories()\"\n          >\n            <el-option\n              v-for=\"item in CategoriesOption\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n             style=\"background:#59b6e3;border:1px solid #59b6e3\"\n            @click=\"submitForm\"\n          >\n            {{ $t(\"global.form.save\") }}\n          </el-button>\n          <el-button v-waves type=\"reset\" @click=\"resetForm\">\n            {{ $t(\"global.form.reset\") }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport { AppModule } from \"@/store/modules/app\";\nimport { TagsViewModule, ITagView } from \"@/store/modules/tags-view\";\nimport { Form } from \"element-ui\";\nimport router from \"../../../router\";\nimport { Action } from \"vuex-module-decorators\";\nimport { getAdminsRoles } from \"@/api/adminsRoles\";\nimport { getQuery } from \"../../../utils\";\nimport {\n  defaultWarrantyData,\n  updateWarranty,\n  addWarranty,\n  getWarranty,\n  getWarrantyById,\n} from \"@/api/warranty\";\nimport PanThumb from \"@/components/PanThumb/index.vue\";\nimport AvatarUpload from \"@/components/AvatarUpload/index.vue\";\nimport { uploadFile } from \"@/api/common\";\nimport { getCategorys } from \"@/api/category\";\nimport UploadImage from \"@/components/UploadImage/index.vue\";\n\n@Component({\n  name: \"WarrantyDetail\",\n  components: {\n    // PanThumb,\n    // AvatarUpload,\n    UploadImage,\n  },\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private redirectionValue: any = [];\n  private redirectionValue1: any = [];\n  private redirectionOption: any = [\n    {\n      id: 0,\n      name: \"Category Page\",\n    },\n    {\n      id: 1,\n      name: \"Category Page 1\",\n    },\n  ];\n  private purchasedFromOption: any = [\n    {\n      id: 0,\n      name: \"Purchased Product 1\",\n    },\n    {\n      id: 1,\n      name: \"Purchased Product 2\",\n    },\n  ];\n  private CategoriesOption: any = [\n    {\n      id: 0,\n      name: \"Category Product 1\",\n    },\n    {\n      id: 2,\n      name: \"Category Product 2\",\n    }\n  ]\n\n  private documentLoading = false;\n  private showImageUpload = false;\n  private renderKey = 0;\n  private image = \"https://via.placeholder.com/\";\n\n  private postForm = Object.assign({}, defaultWarrantyData);\n  private loading = false;\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload;\n  }\n  // private updateBannerImage(res:any){\n  //   this.postForm.image=res;\n  // }\n\n  //  private removeBannerImage(){\n  //   this.postForm.image='';\n  // }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false;\n    this.image = jsonData.files[field];\n  }\n\n  private onClose() {\n    this.showImageUpload = false;\n  }\n\n  private rules = {\n    image: [\n      {\n        message: \"Please enter image\",\n        required: true,\n        trigger: \"blur\",\n      },\n    ],\n    redirectionType: [\n      {\n        message: \"Please enter type\",\n        required: true,\n        trigger: \"blur\",\n      },\n    ],\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language;\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id;\n      this.fetchData(parseInt(id));\n    } else {\n      this.postForm = Object.assign({}, defaultWarrantyData);\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route);\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getWarrantyById(id);\n      this.postForm = data;\n      this.renderKey++;\n      this.image = data.image;\n      this.fetchValues();\n      this.fetchCategories();\n      // Just for test\n      const title = \"image\";\n      // Set tagsview title\n      this.setTagsViewTitle(title);\n      // Set page title\n      this.setPageTitle(title);\n    } catch (err) {\n      Promise.reject(err);\n    }\n  }\n\n  // Document Upload\n  private async uploadDocument(param: any) {\n    var fileObj = param.file\n    var form = new FormData()\n    form.append('file', fileObj)\n    this.documentLoading = true\n    await uploadFile(form, (event: ProgressEvent) => {\n      this.documentLoading = false\n      console.log(event)\n    }).then((res) => {\n      this.postForm.invoice = res.toString()\n      this.documentLoading = false\n      debugger\n    })\n    this.documentLoading = false\n  }\n  handlePreview(file: any) {\n    console.log(file)\n  }\n  handleRemove(file: any, fileList: any) {\n    console.log(file, fileList)\n  }\n  beforeUpload(file:any){\n    const doc= file.type == 'application/pdf'?true:false\n    if(!doc){\n      this.$message.error('Only pdf file upload');\n      \n    }\n    return doc\n  }\n  private handleCloseDocument(tag:any) {\n    this.postForm.invoice = \"\"\n  }\n\n  private async fetchValues() {\n    this.redirectionValue = await getWarranty(\n      getQuery({\n        enabled: true,\n        isDeleted: false,\n        filter: {\n          enabled: \"eq\",\n          isDeleted: \"eq\",\n        },\n      })\n    );\n  }\n  private async fetchCategories(){\n    this.redirectionValue1 = await getWarranty(\n      getQuery({\n        enabled: true,\n        isDeleted: false,\n        filter: {\n          enabled: \"eq\",\n          isDeleted: \"eq\",\n        },\n      })\n    )\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView;\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`;\n      TagsViewModule.updateVisitedView(tagView);\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`;\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm();\n      } else {\n        return false;\n      }\n    });\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields();\n\n    this.renderKey--;\n    // this.postForm.image = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true;\n      if (this.isEdit) {\n        await updateWarranty(this.postForm.id, this.postForm);\n      } else {\n        await addWarranty(this.postForm);\n      }\n\n      this.$notify({\n        title: \"Success\",\n        message: \"Warranty saved successfully\",\n        type: \"success\",\n        duration: 2000,\n      });\n      router.push(\"/warranty/list\");\n    } catch (err) {\n      this.loading = false;\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n    border-bottom: 1px solid $textAreaBottom;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n</style>\n"]}]}