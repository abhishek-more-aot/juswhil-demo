{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Dropzone/index.vue?vue&type=style&index=0&id=0248200e&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Dropzone/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kcm9wem9uZS1jdXN0b20tY29udGVudCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTUlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5zdWJ0aXRsZSB7CiAgY29sb3I6ICMzMTRiNWY7Cn0KCi5kcm9wem9uZSB7CiAgbWluLWhlaWdodDogMjUwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Dropzone","sourcesContent":["<template>\n  <vue-dropzone\n    :id=\"id\"\n    :options=\"dropzoneOptions\"\n    :use-custom-slot=\"true\"\n    @vdropzone-removed-file=\"dropzoneRemovedFile\"\n    @vdropzone-success=\"dropzoneSuccess\"\n  >\n    <div class=\"dropzone-custom-content\">\n      <h3\n        class=\"dropzone-custom-title\"\n        :style=\"{color: themeColor}\"\n      >\n        Drag and drop to upload content!\n      </h3>\n      <div class=\"subtitle\">\n        ...or click to select a file from your computer\n      </div>\n    </div>\n  </vue-dropzone>\n</template>\n\n<script lang=\"ts\">\nimport VueDropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\nimport { SettingsModule } from '@/store/modules/settings'\n\n@Component({\n  name: 'Dropzone',\n  components: {\n    VueDropzone\n  }\n})\nexport default class extends Vue {\n  // You can add more Prop, see: https://www.dropzonejs.com/#configuration\n  @Prop({ required: true }) private id!: string\n  @Prop({ required: true }) private url!: string\n  @Prop({ default: 200 }) private thumbnailHeight!: number\n  @Prop({ default: 200 }) private thumbnailWidth!: number\n  @Prop({ default: 4 }) private maxFiles!: number\n  @Prop({ default: 5 }) private maxFilesize!: number // In MB\n  @Prop({ default: true }) private autoProcessQueue!: boolean\n  @Prop({ default: true }) private addRemoveLinks!: boolean\n  @Prop({ default: 'Drop files here to upload' }) private dictDefaultMessage!: string\n  @Prop({ default: 'Your broswer does not support dropzone.js' }) private dictFallbackMessage!: string\n  @Prop({ default: 'Remove' }) private dictRemoveFile!: string\n  @Prop({ default: 'Max Files Exceeded' }) private dictMaxFilesExceeded!: string\n\n  get dropzoneOptions() {\n    return {\n      url: this.url,\n      thumbnailWidth: this.thumbnailWidth,\n      thumbnailHeight: this.thumbnailHeight,\n      maxFiles: this.maxFiles,\n      maxFilesize: this.maxFilesize,\n      autoProcessQueue: this.autoProcessQueue,\n      addRemoveLinks: this.addRemoveLinks,\n      dictDefaultMessage: this.dictDefaultMessage,\n      dictFallbackMessage: this.dictFallbackMessage,\n      dictRemoveFile: this.dictRemoveFile,\n      dictMaxFilesExceeded: this.dictMaxFilesExceeded\n    }\n  }\n\n  get themeColor() {\n    return SettingsModule.theme\n  }\n\n  // You can add more Event handler, see: https://rowanwins.github.io/vue-dropzone/docs/dist/#/events\n  private dropzoneSuccess(file: File, response: any) {\n    this.$emit('dropzone-success', file, response)\n  }\n\n  private dropzoneRemovedFile(file: File, error: Error, xhr: XMLHttpRequest) {\n    this.$emit('dropzone-removed-file', file, error, xhr)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dropzone-custom-content {\n  position: absolute;\n  top: 55%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n.subtitle {\n  color: #314b5f;\n}\n\n.dropzone {\n  min-height: 250px;\n}\n</style>\n"]}]}