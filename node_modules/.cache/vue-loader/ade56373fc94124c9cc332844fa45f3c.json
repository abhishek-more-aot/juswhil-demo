{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/gallerys/components/GalleryDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/gallerys/components/GalleryDetail.vue","mtime":1668754947374},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL2FwcCcKaW1wb3J0IHsgVGFnc1ZpZXdNb2R1bGUsIElUYWdWaWV3IH0gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL3RhZ3MtdmlldycKaW1wb3J0IHsgRm9ybSB9IGZyb20gJ2VsZW1lbnQtdWknCmltcG9ydCByb3V0ZXIgZnJvbSAnLi8uLi8uLi8uLi9yb3V0ZXInCmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ3Z1ZXgtbW9kdWxlLWRlY29yYXRvcnMnCmltcG9ydCB7IGdldEFkbWluc1JvbGVzIH0gZnJvbSAnQC9hcGkvYWRtaW5zUm9sZXMnCmltcG9ydCB7IGdldFF1ZXJ5IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMnCmltcG9ydCB7CiAgZGVmYXVsdEdhbGxlcnlEYXRhLAogIHVwZGF0ZUdhbGxlcnksCiAgYWRkR2FsbGVyeSwKICBnZXRHYWxsZXJ5QnlJZAp9IGZyb20gJ0AvYXBpL2dhbGxlcnkvZ2FsbGVyeXMnCmltcG9ydCBQYW5UaHVtYiBmcm9tICdAL2NvbXBvbmVudHMvUGFuVGh1bWIvaW5kZXgudnVlJwppbXBvcnQgQXZhdGFyVXBsb2FkIGZyb20gJ0AvY29tcG9uZW50cy9BdmF0YXJVcGxvYWQvaW5kZXgudnVlJwppbXBvcnQgeyB1cGxvYWRGaWxlIH0gZnJvbSAnQC9hcGkvY29tbW9uJwppbXBvcnQgeyBnZXRDYXRlZ29yeXMgfSBmcm9tICdAL2FwaS9jYXRlZ29yeScKaW1wb3J0IFVwbG9hZEltYWdlIGZyb20gJ0AvY29tcG9uZW50cy9VcGxvYWRJbWFnZS9pbmRleC52dWUnCmltcG9ydCB7IGdldFByb2R1Y3RzIH0gZnJvbSAnQC9hcGkvcHJvZHVjdCcKCkBDb21wb25lbnQoewogIG5hbWU6ICdHYWxsZXJ5RGV0YWlsJywKICBjb21wb25lbnRzOiB7CiAgICBQYW5UaHVtYiwKICAgIEF2YXRhclVwbG9hZCwKICAgIFVwbG9hZEltYWdlCiAgfQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFZ1ZSB7CiAgQFByb3AoeyBkZWZhdWx0OiBmYWxzZSB9KSBwcml2YXRlIGlzRWRpdCE6IGJvb2xlYW47CiAgcHJpdmF0ZSByZWRpcmVjdGlvblZhbHVlOiBhbnkgPSBbXQogIHByaXZhdGUgcmVuZGVyS2V5OmFueTsKICBwcml2YXRlIHJlZGlyZWN0aW9uT3B0aW9uOiBhbnkgPSBbCiAgICB7CiAgICAgIGlkOiAwLAogICAgICBuYW1lOiAnQ2F0ZWdvcnkgUGFnZScKICAgIH0KICBdOwoKICBwcml2YXRlIHNob3dJbWFnZVVwbG9hZCA9IGZhbHNlOwogIHByaXZhdGUgaW1hZ2UgPQogICAgJ2h0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS8xMDAweDEwMDAnOwoKICBwcml2YXRlIHBvc3RGb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdEdhbGxlcnlEYXRhKTsKICBwcml2YXRlIGxvYWRpbmcgPSBmYWxzZTsKICBwcml2YXRlIHRvZ2dsZVNob3coKSB7CiAgICB0aGlzLnNob3dJbWFnZVVwbG9hZCA9ICF0aGlzLnNob3dJbWFnZVVwbG9hZAogIH0KCiAgcHJpdmF0ZSBvbkNyb3BVcGxvYWRTdWNjZXNzKGpzb25EYXRhOiBhbnksIGZpZWxkOiBzdHJpbmcpIHsKICAgIHRoaXMuc2hvd0ltYWdlVXBsb2FkID0gZmFsc2UKICAgIHRoaXMuaW1hZ2UgPSBqc29uRGF0YS5maWxlc1tmaWVsZF0KICB9CgogIHByaXZhdGUgb25DbG9zZSgpIHsKICAgIHRoaXMuc2hvd0ltYWdlVXBsb2FkID0gZmFsc2UKICB9CgogIHByaXZhdGUgY3JvcFN1Y2Nlc3MoaW1nRGF0YVVybDogc3RyaW5nLCBmaWVsZDogc3RyaW5nKSB7CiAgICB0aGlzLmltYWdlID0gaW1nRGF0YVVybAogICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpCiAgICBmZXRjaChpbWdEYXRhVXJsKQogICAgICAudGhlbigocmVzKSA9PiByZXMuYmxvYigpKQogICAgICAudGhlbigoYmxvYikgPT4gewogICAgICAgIGNvbnN0IGZpbGUgPSBuZXcgRmlsZShbYmxvYl0sICdpbWcuJyArIGJsb2IudHlwZS5zcGxpdCgnLycpWzFdLCB7CiAgICAgICAgICB0eXBlOiAnaW1hZ2UvcG5nJwogICAgICAgIH0pCiAgICAgICAgZGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKQogICAgICAgIHVwbG9hZEZpbGUoZGF0YSwgKGV2ZW50OiBQcm9ncmVzc0V2ZW50KSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCkKICAgICAgICB9KS50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMucG9zdEZvcm0uaW1hZ2UgPSByZXMudG9TdHJpbmcoKQogICAgICAgIH0pCiAgICAgIH0pCiAgfQoKICBwcml2YXRlIHJ1bGVzID0gewoKICAgIGltYWdlOiBbCiAgICAgIHsKICAgICAgICBtZXNzYWdlOiAnUGxlYXNlIGVudGVyIGltYWdlJywKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgfQogICAgXSwKICAgIHJlZGlyZWN0aW9uVHlwZTogWwogICAgICB7CiAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBlbnRlciB0eXBlJywKICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgfQogICAgXQogIH07CgogIHByaXZhdGUgdXBkYXRlSW1hZ2UocmVzOmFueSl7CiAgICB0aGlzLnBvc3RGb3JtLmltYWdlID1yZXM7CgogIH0KICAgcHJpdmF0ZSByZW1vdmVJbWFnZSgpewogICAgdGhpcy5wb3N0Rm9ybS5pbWFnZSA9Jyc7CiAgICAKICB9CgogIHByaXZhdGUgdGVtcFRhZ1ZpZXc/OiBJVGFnVmlldzsKCiAgZ2V0IGxhbmcoKSB7CiAgICByZXR1cm4gQXBwTW9kdWxlLmxhbmd1YWdlCiAgfQoKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZAogICAgICB0aGlzLmZldGNoRGF0YShwYXJzZUludChpZCkpCiAgICB9IGVsc2UgewogICAgICB0aGlzLnBvc3RGb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdEdhbGxlcnlEYXRhKQogICAgfQogICAgLy8gV2h5IG5lZWQgdG8gbWFrZSBhIGNvcHkgb2YgdGhpcy4kcm91dGUgaGVyZT8KICAgIC8vIEJlY2F1c2UgaWYgeW91IGVudGVyIHRoaXMgcGFnZSBhbmQgcXVpY2tseSBzd2l0Y2ggdGFnLCBtYXkgYmUgaW4gdGhlIGV4ZWN1dGlvbiBvZiB0aGlzLnNldFRhZ3NWaWV3VGl0bGUgZnVuY3Rpb24sIHRoaXMuJHJvdXRlIGlzIG5vIGxvbmdlciBwb2ludGluZyB0byB0aGUgY3VycmVudCBwYWdlCiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vUGFuSmlhQ2hlbi92dWUtZWxlbWVudC1hZG1pbi9pc3N1ZXMvMTIyMQogICAgdGhpcy50ZW1wVGFnVmlldyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuJHJvdXRlKQogIH0KCiAgcHJpdmF0ZSBhc3luYyBmZXRjaERhdGEoaWQ6IG51bWJlcikgewogICAgdHJ5IHsKICAgICAgY29uc3QgZGF0YTogYW55ID0gYXdhaXQgZ2V0R2FsbGVyeUJ5SWQoaWQpCiAgICAgIHRoaXMucG9zdEZvcm0gPSBkYXRhCiAgICAgIHRoaXMucmVuZGVyS2V5KysKICAgICAgdGhpcy5pbWFnZSA9IGRhdGEuaW1hZ2UKICAgICAgdGhpcy5mZXRjaFZhbHVlcygpCiAgICAgIC8vIEp1c3QgZm9yIHRlc3QKICAgICAgY29uc3QgdGl0bGUgPSAnaW1hZ2UnCiAgICAgIC8vIFNldCB0YWdzdmlldyB0aXRsZQogICAgICB0aGlzLnNldFRhZ3NWaWV3VGl0bGUodGl0bGUpCiAgICAgIC8vIFNldCBwYWdlIHRpdGxlCiAgICAgIHRoaXMuc2V0UGFnZVRpdGxlKHRpdGxlKQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIFByb21pc2UucmVqZWN0KGVycikKICAgIH0KICB9CgogIHByaXZhdGUgYXN5bmMgZmV0Y2hWYWx1ZXMoKSB7CiAgICB0aGlzLnJlZGlyZWN0aW9uVmFsdWUgPSBhd2FpdCBnZXRDYXRlZ29yeXMoZ2V0UXVlcnkoewogICAgICBlbmFibGVkOiB0cnVlLAogICAgICBpc0RlbGV0ZWQ6IGZhbHNlLAogICAgICBmaWx0ZXI6IHsKICAgICAgICBlbmFibGVkOiAnZXEnLAogICAgICAgIGlzRGVsZXRlZDogJ2VxJwogICAgICB9CiAgICB9KSkKICB9CgogIHByaXZhdGUgc2V0VGFnc1ZpZXdUaXRsZSh0aXRsZTogc3RyaW5nKSB7CiAgICBjb25zdCB0YWdWaWV3ID0gdGhpcy50ZW1wVGFnVmlldwogICAgaWYgKHRhZ1ZpZXcpIHsKICAgICAgdGFnVmlldy50aXRsZSA9IGAke3RpdGxlfS0ke3RoaXMucG9zdEZvcm0uaWR9YAogICAgICBUYWdzVmlld01vZHVsZS51cGRhdGVWaXNpdGVkVmlldyh0YWdWaWV3KQogICAgfQogIH0KCiAgcHJpdmF0ZSBzZXRQYWdlVGl0bGUodGl0bGU6IHN0cmluZykgewogICAgZG9jdW1lbnQudGl0bGUgPSBgJHt0aXRsZX0gLSAke3RoaXMucG9zdEZvcm0uaWR9YAogIH0KCiAgcHJpdmF0ZSBzdWJtaXRGb3JtKCkgewogICAgKHRoaXMuJHJlZnMucG9zdEZvcm0gYXMgRm9ybSkudmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgIGlmICh2YWxpZCkgewogICAgICAgIHRoaXMuc2F2ZUZvcm0oKQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICB9KQogIH0KCiAgcHJpdmF0ZSByZXNldEZvcm0oKSB7CiAgICAodGhpcy4kcmVmcy5wb3N0Rm9ybSBhcyBGb3JtKS5yZXNldEZpZWxkcygpCiAgICB0aGlzLmltYWdlID0gJ2h0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS8nCiAgICB0aGlzLnJlbmRlcktleS0tCiAgICB0aGlzLnBvc3RGb3JtLmltYWdlID0gJycKICB9CgogIEBBY3Rpb24KICBwdWJsaWMgYXN5bmMgc2F2ZUZvcm0oKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgIGF3YWl0IHVwZGF0ZUdhbGxlcnkodGhpcy5wb3N0Rm9ybS5pZCwgdGhpcy5wb3N0Rm9ybSkKICAgICAgfSBlbHNlIHsKICAgICAgICBhd2FpdCBhZGRHYWxsZXJ5KHRoaXMucG9zdEZvcm0pCiAgICAgIH0KCiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICBtZXNzYWdlOiAnR2FsbGVyeSBzYXZlZCBzdWNjZXNzZnVsbHknLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICByb3V0ZXIucHVzaCgnL2dhbGxlcnkvbGlzdCcpCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgIH0KICB9Cn0K"},{"version":3,"sources":["GalleryDetail.vue"],"names":[],"mappings":";AAkfile":"GalleryDetail.vue","sourceRoot":"src/views/gallerys/components","sourcesContent":["<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        status-icon\n        :rules=\"rules\"\n        label-width=\"160px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Enabled\"\n          prop=\"enabled\"\n        >\n          <el-switch v-model=\"postForm.enabled\" />\n        </el-form-item>\n         <el-form-item style=\"margin-bottom: 30px\" label=\"Image\" prop=\"image\">\n            <upload-image\n              :key=\"renderKey\"\n              :form-field=\"postForm.image\"\n              @handle-upload=\"updateImage\"\n              @handle-remove=\"removeImage\"\n            />\n            <!-- <el-tooltip\n              class=\"item\"\n              effect=\"dark\"\n              content=\"Only Image of dimension 1000 * 1000 is accepted\"\n              placement=\"left-start\"\n            >\n              <span class=\"el-icon-question\" style=\"font-size: 20px\" />\n            </el-tooltip> -->\n          </el-form-item>\n\n        <!-- <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Image\"\n          prop=\"image\"\n        >\n          <div\n            style=\"margin: auto;padding: 10px;display: flex;align-items: center;background:white;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\"\n          >\n            <div style=\"width:50%;text-align:center;\">\n              <pan-thumb\n                :image=\"image\"\n                width=\"350px\"\n                height=\"150px\"\n              />\n            </div>\n            <div\n              style=\"float:right;text-align:center;padding-left:30px;border-left:2px solid red;width:50%\"\n            >\n              <unicon\n                name=\"upload\"\n                height=\"50\"\n                width=\"50\"\n                class=\"card-panel-icon\"\n                fill=\"red\"\n              />\n              <br>\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-upload\"\n                @click=\"toggleShow\"\n              >\n                Browse\n              </el-button>\n            </div>\n          </div>\n          <avatar-upload\n            v-model=\"showImageUpload\"\n            field=\"file\"  \n            @crop-success=\"cropSuccess\"\n            @close=\"onClose\"\n            @crop-upload-success=\"onCropUploadSuccess\"\n          />\n        </el-form-item> -->\n\n        <!-- <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Type\"\n          prop=\"redirectionOption\"\n        >\n          <el-select\n            v-model=\"postForm.redirectionOption\"\n            name=\"redirectionOption\"\n            filterable\n            placeholder=\"Select\"\n            @change=\"fetchValues()\"\n          >\n            <el-option\n              v-for=\"item in redirectionOption\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item\n          v-if=\"postForm.redirectionOption == 0\"\n          style=\"margin-bottom: 20px;\"\n          label=\"Category\"\n          prop=\"redirectionValue\"\n          :rules=\"{required: true, message: 'Please input category', trigger: ['blur','change']}\"\n        >\n          <el-select\n            v-model=\"postForm.redirectionValue\"\n            name=\"redirectionValue\"\n            filterable\n            placeholder=\"Select\"\n          >\n            <el-option\n              v-for=\"item in redirectionValue\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item> -->\n        \n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n            @click=\"submitForm\"\n          >\n            {{ $t('global.form.save') }}\n          </el-button>\n          <el-button\n            v-waves\n            type=\"reset\"\n            @click=\"resetForm\"\n          >\n            {{ $t('global.form.reset') }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport { getAdminsRoles } from '@/api/adminsRoles'\nimport { getQuery } from '../../../utils'\nimport {\n  defaultGalleryData,\n  updateGallery,\n  addGallery,\n  getGalleryById\n} from '@/api/gallery/gallerys'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport { uploadFile } from '@/api/common'\nimport { getCategorys } from '@/api/category'\nimport UploadImage from '@/components/UploadImage/index.vue'\nimport { getProducts } from '@/api/product'\n\n@Component({\n  name: 'GalleryDetail',\n  components: {\n    PanThumb,\n    AvatarUpload,\n    UploadImage\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private redirectionValue: any = []\n  private renderKey:any;\n  private redirectionOption: any = [\n    {\n      id: 0,\n      name: 'Category Page'\n    }\n  ];\n\n  private showImageUpload = false;\n  private image =\n    'https://via.placeholder.com/1000x1000';\n\n  private postForm = Object.assign({}, defaultGalleryData);\n  private loading = false;\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res) => {\n          this.postForm.image = res.toString()\n        })\n      })\n  }\n\n  private rules = {\n\n    image: [\n      {\n        message: 'Please enter image',\n        required: true,\n        trigger: 'blur'\n      }\n    ],\n    redirectionType: [\n      {\n        message: 'Please enter type',\n        required: true,\n        trigger: 'blur'\n      }\n    ]\n  };\n\n  private updateImage(res:any){\n    this.postForm.image =res;\n\n  }\n   private removeImage(){\n    this.postForm.image ='';\n    \n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultGalleryData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getGalleryById(id)\n      this.postForm = data\n      this.renderKey++\n      this.image = data.image\n      this.fetchValues()\n      // Just for test\n      const title = 'image'\n      // Set tagsview title\n      this.setTagsViewTitle(title)\n      // Set page title\n      this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private async fetchValues() {\n    this.redirectionValue = await getCategorys(getQuery({\n      enabled: true,\n      isDeleted: false,\n      filter: {\n        enabled: 'eq',\n        isDeleted: 'eq'\n      }\n    }))\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields()\n    this.image = 'https://via.placeholder.com/'\n    this.renderKey--\n    this.postForm.image = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        await updateGallery(this.postForm.id, this.postForm)\n      } else {\n        await addGallery(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Gallery saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/gallery/list')\n    } catch (err) {\n      this.loading = false\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n    border-bottom: 1px solid $textAreaBottom;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n</style>\n"]}]}