{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/testimonial/component/TestimonialDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/testimonial/component/TestimonialDetail.vue","mtime":1668755884584},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsKICBnZXRUZXN0aW1vbmlhbEJ5SWQsCiAgZGVmYXVsdFRlc3RpbW9uaWFsRGF0YSwKICB1cGRhdGVUZXN0aW1vbmlhbCwKICBhZGRUZXN0aW1vbmlhbAp9IGZyb20gJ0AvYXBpL3Rlc3RpbW9uaWFsJwppbXBvcnQgeyBBcHBNb2R1bGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvYXBwJwppbXBvcnQgeyBUYWdzVmlld01vZHVsZSwgSVRhZ1ZpZXcgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvdGFncy12aWV3JwppbXBvcnQgeyBGb3JtIH0gZnJvbSAnZWxlbWVudC11aScKaW1wb3J0IHJvdXRlciBmcm9tICcuLy4uLy4uLy4uL3JvdXRlcicKaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAndnVleC1tb2R1bGUtZGVjb3JhdG9ycycKaW1wb3J0IERyb3B6b25lIGZyb20gJ0AvY29tcG9uZW50cy9Ecm9wem9uZS9pbmRleC52dWUnCmltcG9ydCB7IHVwbG9hZEZpbGUgfSBmcm9tICdAL2FwaS9jb21tb24nCmltcG9ydCBBdmF0YXJVcGxvYWQgZnJvbSAnQC9jb21wb25lbnRzL0F2YXRhclVwbG9hZC9pbmRleC52dWUnCmltcG9ydCBQYW5UaHVtYiBmcm9tICdAL2NvbXBvbmVudHMvUGFuVGh1bWIvaW5kZXgudnVlJwoKQENvbXBvbmVudCh7CiAgbmFtZTogJ1Rlc3RpbW9uaWFsRGV0YWlsJywKICBjb21wb25lbnRzOiB7CiAgICBEcm9wem9uZSwKICAgIEF2YXRhclVwbG9hZCwKICAgIFBhblRodW1iCiAgfQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFZ1ZSB7CiAgQFByb3AoeyBkZWZhdWx0OiBmYWxzZSB9KSBwcml2YXRlIGlzRWRpdCE6IGJvb2xlYW47CiAgcHJpdmF0ZSBkaWFsb2dWaXNpYmlsaXR5OmJvb2xlYW49ZmFsc2UKICAgcHJpdmF0ZSBzaG93SW1hZ2VVcGxvYWQgPSBmYWxzZQogICBwcml2YXRlIHNob3dTa2V0Y2hVcGxvYWQgPSBmYWxzZQogIHByaXZhdGUgc2tldGNoID0gJ2h0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS8zMDAnCiAgcHJpdmF0ZSBpbWFnZSA9ICdodHRwczovL3ZpYS5wbGFjZWhvbGRlci5jb20vMzAwJwogIHByaXZhdGUgcmVzZXRJbWFnZSA9ICdodHRwczovL3ZpYS5wbGFjZWhvbGRlci5jb20vMzAwJwogIHByaXZhdGUgcGFyYW1zID0geyBzb21lX3BhcmFtczogJ3lvdXJfcGFyYW1zX2dvZXNfaGVyZScgfQogIHByaXZhdGUgaGVhZGVycyA9IHsgc21haWw6ICcqX34nIH0KCiAgcHJpdmF0ZSBwb3N0Rm9ybSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRUZXN0aW1vbmlhbERhdGEpOwogIHByaXZhdGUgbG9hZGluZyA9IGZhbHNlOwogIHByaXZhdGUgcnVsZXMgPSB7CiAgICBuYW1lOiBbCiAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgZW50ZXIgdGVzdGltb25pYWwgbmFtZScsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICB7CiAgICAgICAgbWluOiAzLAogICAgICAgIG1heDogMTUwLAogICAgICAgIG1lc3NhZ2U6ICdMZW5ndGggc2hvdWxkIGJlIDMgdG8gMTUwJywKICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgfSwKICAgICAgewogICAgICAgIHBhdHRlcm46ICdeW2EtekEtWjAtOV0nLAogICAgICAgIG1lc3NhZ2U6ICdObyBTcGVjaWFsIENoYXJhY3RlcnMgYWxsb3dlZCcsCiAgICAgICAgdHJpZ2dlcjogWydibHVyJywgJ2NoYW5nZSddCiAgICAgIH0KICAgIF0sCgogICAgaW1hZ2U6IFsKICAgICAgewogICAgICAgIG1lc3NhZ2U6ICdQbGVhc2UgZW50ZXIgaW1hZ2UnLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICB9CiAgICAgIC8vIHsgdmFsaWRhdG9yOiB0aGlzLnZhbGlkYXRlSW1hZ2UsIHRyaWdnZXI6ICdibHVyJyB9CiAgICBdLAogICAgcHJpb3JpdHk6IFsKICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBlbnRlciBwcmlvcml0eScsIHRyaWdnZXI6ICdibHVyJyB9CgogICAgXQoKICB9OwoKICBwcml2YXRlIHRvZ2dsZVNob3coKSB7CiAgICB0aGlzLnNob3dJbWFnZVVwbG9hZCA9ICF0aGlzLnNob3dJbWFnZVVwbG9hZAogIH0KCiAgcHJpdmF0ZSB0b2dnbGVTa2V0Y2goKSB7CiAgICB0aGlzLnNob3dTa2V0Y2hVcGxvYWQgPSAhdGhpcy5zaG93U2tldGNoVXBsb2FkCiAgfQoKICBwcml2YXRlIGNyb3BTdWNjZXNzKGltZ0RhdGFVcmw6IHN0cmluZywgZmllbGQ6IHN0cmluZykgewogICAgdGhpcy5pbWFnZSA9IGltZ0RhdGFVcmwKICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKQogICAgZmV0Y2goaW1nRGF0YVVybCkKICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmJsb2IoKSkKICAgICAgLnRoZW4oKGJsb2IpID0+IHsKICAgICAgICBjb25zdCBmaWxlID0gbmV3IEZpbGUoW2Jsb2JdLCAnaW1nLicgKyBibG9iLnR5cGUuc3BsaXQoJy8nKVsxXSwgewogICAgICAgICAgdHlwZTogJ2ltYWdlL3BuZycKICAgICAgICB9KQogICAgICAgIGRhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSkKICAgICAgICB1cGxvYWRGaWxlKGRhdGEsIChldmVudDogUHJvZ3Jlc3NFdmVudCkgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXZlbnQpCiAgICAgICAgfSkudGhlbigocmVzOiBhbnkpID0+IHsKICAgICAgICAgIHRoaXMucG9zdEZvcm0uaW1hZ2UgPSByZXMKICAgICAgICB9KQogICAgICB9KQogIH0KCiAgcHJpdmF0ZSBjcm9wU2tldGNoU3VjY2VzcyhpbWdEYXRhVXJsOiBzdHJpbmcsIGZpZWxkOiBzdHJpbmcpIHsKICAgIHRoaXMuc2tldGNoID0gaW1nRGF0YVVybAogICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpCiAgICBmZXRjaChpbWdEYXRhVXJsKQogICAgICAudGhlbigocmVzKSA9PiByZXMuYmxvYigpKQogICAgICAudGhlbigoYmxvYikgPT4gewogICAgICAgIGNvbnN0IGZpbGUgPSBuZXcgRmlsZShbYmxvYl0sICdpbWcuJyArIGJsb2IudHlwZS5zcGxpdCgnLycpWzFdLCB7CiAgICAgICAgICB0eXBlOiAnaW1hZ2UvcG5nJwogICAgICAgIH0pCiAgICAgICAgZGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKQogICAgICAgIHVwbG9hZEZpbGUoZGF0YSwgKGV2ZW50OiBQcm9ncmVzc0V2ZW50KSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCkKICAgICAgICB9KS50aGVuKChyZXM6IGFueSkgPT4gewogICAgICAgICAgdGhpcy5wb3N0Rm9ybS5yZXZpZXcgPSByZXMKICAgICAgICB9KQogICAgICB9KQogIH0KCiAgLy8gdmFsaWRhdGVJbWFnZSAocnVsZTphbnksIHZhbHVlOmFueSwgY2FsbGJhY2s6YW55KSB7CiAgLy8gICAKICAvLyAgICAgaWYgKHRoaXMucG9zdEZvcm0uaW1hZ2UubGVuZ3RoPD0wKSB7CiAgLy8gICAgICAgCiAgLy8gICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdJY29uIGlzIHJlcXVpcmVkJykpOwogIC8vICAgICB9IGVsc2UgewogIC8vICAgICAgIGNhbGxiYWNrKCk7CiAgLy8gICAgIH0KICAvLyAgIH07CgogIHByaXZhdGUgb25DbG9zZSgpIHsKICAgIHRoaXMuc2hvd0ltYWdlVXBsb2FkID0gZmFsc2UKICB9CgogIHByaXZhdGUgb25Ta2V0Y2hDbG9zZSgpIHsKICAgIHRoaXMuc2hvd1NrZXRjaFVwbG9hZCA9IGZhbHNlCiAgfQoKICBwcml2YXRlIHRlbXBUYWdWaWV3PzogSVRhZ1ZpZXc7CgogIGdldCBsYW5nKCkgewogICAgcmV0dXJuIEFwcE1vZHVsZS5sYW5ndWFnZQogIH0KCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcyAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgdGhpcy5mZXRjaERhdGEocGFyc2VJbnQoaWQpKQogICAgfSBlbHNlIHsKICAgICAgdGhpcy5wb3N0Rm9ybSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRUZXN0aW1vbmlhbERhdGEpCiAgICB9CiAgICAvLyBXaHkgbmVlZCB0byBtYWtlIGEgY29weSBvZiB0aGlzLiRyb3V0ZSBoZXJlPwogICAgLy8gQmVjYXVzZSBpZiB5b3UgZW50ZXIgdGhpcyBwYWdlIGFuZCBxdWlja2x5IHN3aXRjaCB0YWcsIG1heSBiZSBpbiB0aGUgZXhlY3V0aW9uIG9mIHRoaXMuc2V0VGFnc1ZpZXdUaXRsZSBmdW5jdGlvbiwgdGhpcy4kcm91dGUgaXMgbm8gbG9uZ2VyIHBvaW50aW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9QYW5KaWFDaGVuL3Z1ZS1lbGVtZW50LWFkbWluL2lzc3Vlcy8xMjIxCiAgICB0aGlzLnRlbXBUYWdWaWV3ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUpCiAgfQoKICBwcml2YXRlIGFzeW5jIGZldGNoRGF0YShpZDogbnVtYmVyKSB7CiAgICB0cnkgewogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRUZXN0aW1vbmlhbEJ5SWQoaWQpCiAgICAgIHRoaXMuaW1hZ2UgPSBkYXRhLmltYWdlCiAgICAgIHRoaXMucG9zdEZvcm0gPSBkYXRhCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnIpCiAgICB9CiAgfQoKICBwcml2YXRlIHNldFRhZ3NWaWV3VGl0bGUodGl0bGU6IHN0cmluZykgewogICAgY29uc3QgdGFnVmlldyA9IHRoaXMudGVtcFRhZ1ZpZXcKICAgIGlmICh0YWdWaWV3KSB7CiAgICAgIHRhZ1ZpZXcudGl0bGUgPSBgJHt0aXRsZX0tJHt0aGlzLnBvc3RGb3JtLmlkfWAKICAgICAgVGFnc1ZpZXdNb2R1bGUudXBkYXRlVmlzaXRlZFZpZXcodGFnVmlldykKICAgIH0KICB9CgogIHByaXZhdGUgc2V0UGFnZVRpdGxlKHRpdGxlOiBzdHJpbmcpIHsKICAgIGRvY3VtZW50LnRpdGxlID0gYCR7dGl0bGV9IC0gJHt0aGlzLnBvc3RGb3JtLmlkfWAKICB9CgogIHByaXZhdGUgc3VibWl0Rm9ybSgpIHsKICAgICh0aGlzLiRyZWZzLnBvc3RGb3JtIGFzIEZvcm0pLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgdGhpcy5zYXZlRm9ybSgpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5lcnJvcignU3VibWl0IEVycm9yIScpCiAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0KICAgIH0pCiAgfQoKICBwcml2YXRlIHJlc2V0Rm9ybSgpIHsKICAgIHRoaXMuaW1hZ2UgPSB0aGlzLnJlc2V0SW1hZ2U7CiAgICAodGhpcy4kcmVmcy5wb3N0Rm9ybSBhcyBGb3JtKS5yZXNldEZpZWxkcygpCiAgICB0aGlzLnBvc3RGb3JtLmltYWdlID0gJycKICB9CgogIEBBY3Rpb24KICBwdWJsaWMgYXN5bmMgc2F2ZUZvcm0oKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgIGF3YWl0IHVwZGF0ZVRlc3RpbW9uaWFsKHRoaXMucG9zdEZvcm0uaWQsIHRoaXMucG9zdEZvcm0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXdhaXQgYWRkVGVzdGltb25pYWwodGhpcy5wb3N0Rm9ybSkKICAgICAgfQoKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgIG1lc3NhZ2U6ICdUZXN0aW1vbmlhbCBzYXZlZCBzdWNjZXNzZnVsbHknLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICByb3V0ZXIucHVzaCgnL3Rlc3RpbW9uaWFsL2xpc3QnKQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIHRoaXMuJG1lc3NhZ2UoZXJyLm1lc3NhZ2UpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TestimonialDetail.vue"],"names":[],"mappings":";AAmfile":"TestimonialDetail.vue","sourceRoot":"src/views/testimonial/component","sourcesContent":["<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        status-icon\n        :rules=\"rules\"\n        label-width=\"160px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Enabled\"\n          prop=\"enabled\"\n          required\n        >\n          <el-switch v-model=\"postForm.enabled\" />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Testimonial Name\"\n          prop=\"name\"\n          style=\"margin-bottom: 30px;\"\n        >\n          <el-input\n            v-model=\"postForm.name\"\n            name=\"name\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Testimonial Name\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Review\"\n          prop=\"review\"\n          style=\"margin-bottom: 30px;\"\n          required\n        >\n          <el-input\n            v-model=\"postForm.review\"\n            name=\"review\"\n            style=\"width:50%\"\n            placeholder=\"Review\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 30px\"\n          label=\"Image\"\n          prop=\"image\"\n          required\n        >\n          <pan-thumb :image=\"image\" /><br>\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-upload\"\n            name=\"image\"\n            tyle=\"position: absolute;bottom: 15px;margin-left: 40px;\"\n            @click=\"toggleShow\"\n          >\n            Change Image\n          </el-button>\n          <!-- <span style=\"font-weight:500\"> (Minimum required resolution : 300*300)</span> -->\n          <avatar-upload\n            v-model=\"showImageUpload\"\n            field=\"avatar\"\n            name=\"image\"\n            @crop-success=\"cropSuccess\"\n            @close=\"onClose\"\n            @crop-upload-success=\"onCropUploadSuccess\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Location\"\n          prop=\"location\"\n          style=\"margin-bottom: 30px;\"\n          required\n        >\n          <el-input\n            v-model=\"postForm.location\"\n            name=\"location\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Location\"\n          />\n        </el-form-item>\n\n        <!-- <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Sub Testimonial\"\n          prop=\"isSubTestimonial\"\n        >\n          <el-switch v-model=\"postForm.isSubTestimonial\" />\n        </el-form-item> -->\n\n        <!-- <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Feature\"\n          prop=\"feature\"\n          required\n        >\n          <el-switch v-model=\"postForm.feature\" />\n        </el-form-item> -->\n\n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n            @click=\"submitForm\"\n          >\n            {{ $t('global.form.save') }}\n          </el-button>\n          <el-button\n            v-waves\n            type=\"reset\"\n            @click=\"resetForm\"\n          >\n            {{ $t('global.form.reset') }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport {\n  getTestimonialById,\n  defaultTestimonialData,\n  updateTestimonial,\n  addTestimonial\n} from '@/api/testimonial'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport Dropzone from '@/components/Dropzone/index.vue'\nimport { uploadFile } from '@/api/common'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\n\n@Component({\n  name: 'TestimonialDetail',\n  components: {\n    Dropzone,\n    AvatarUpload,\n    PanThumb\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private dialogVisibility:boolean=false\n   private showImageUpload = false\n   private showSketchUpload = false\n  private sketch = 'https://via.placeholder.com/300'\n  private image = 'https://via.placeholder.com/300'\n  private resetImage = 'https://via.placeholder.com/300'\n  private params = { some_params: 'your_params_goes_here' }\n  private headers = { smail: '*_~' }\n\n  private postForm = Object.assign({}, defaultTestimonialData);\n  private loading = false;\n  private rules = {\n    name: [\n      { required: true, message: 'Please enter testimonial name', trigger: 'blur' },\n      {\n        min: 3,\n        max: 150,\n        message: 'Length should be 3 to 150',\n        trigger: 'blur'\n      },\n      {\n        pattern: '^[a-zA-Z0-9]',\n        message: 'No Special Characters allowed',\n        trigger: ['blur', 'change']\n      }\n    ],\n\n    image: [\n      {\n        message: 'Please enter image',\n        required: true,\n        trigger: 'blur'\n      }\n      // { validator: this.validateImage, trigger: 'blur' }\n    ],\n    priority: [\n      { required: true, message: 'Please enter priority', trigger: 'blur' }\n\n    ]\n\n  };\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private toggleSketch() {\n    this.showSketchUpload = !this.showSketchUpload\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.image = res\n        })\n      })\n  }\n\n  private cropSketchSuccess(imgDataUrl: string, field: string) {\n    this.sketch = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.review = res\n        })\n      })\n  }\n\n  // validateImage (rule:any, value:any, callback:any) {\n  //   \n  //     if (this.postForm.image.length<=0) {\n  //       \n  //       callback(new Error('Icon is required'));\n  //     } else {\n  //       callback();\n  //     }\n  //   };\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private onSketchClose() {\n    this.showSketchUpload = false\n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultTestimonialData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getTestimonialById(id)\n      this.image = data.image\n      this.postForm = data\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        console.error('Submit Error!')\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    this.image = this.resetImage;\n    (this.$refs.postForm as Form).resetFields()\n    this.postForm.image = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        await updateTestimonial(this.postForm.id, this.postForm)\n      } else {\n        await addTestimonial(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Testimonial saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/testimonial/list')\n    } catch (err) {\n      this.loading = false\n      this.$message(err.message)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n    border-bottom: 1px solid #bfcbd9;\n  }\n\n}\n\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n.avatar {\n  width: 400px;\n  height: 200px;\n  border-radius: 50%;\n  position: absolute;\n  transform-origin: 95% 40%;\n}\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n</style>\n"]}]}