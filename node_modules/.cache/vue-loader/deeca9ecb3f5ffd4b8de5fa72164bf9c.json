{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/product/components/ProductDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/product/components/ProductDetail.vue","mtime":1672321398558},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/thread-loader/dist/cjs.js","mtime":1655274288448},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}