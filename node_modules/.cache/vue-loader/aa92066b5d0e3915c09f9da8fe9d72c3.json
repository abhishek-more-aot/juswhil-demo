{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/FileUpload/index.vue?vue&type=style&index=0&id=211f81e0&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/FileUpload/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51cGxvYWQtY29udGFpbmVyIHsKICAuZWwtdXBsb2FkIHsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2FA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/FileUpload","sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-upload\n      ref=\"upload\"\n      class=\"upload-demo\"\n      :accept=\"accept\"\n      action\n      :http-request=\"uploadFile\"\n      :before-remove=\"beforeRemove\"\n      :before-upload=\"beforeFileUpload\"\n      :on-error=\"onFileTransferError\"\n      :on-success=\"onFileTransferSuccess\"\n      :file-list=\"fileList\"\n      :max-size=\"maxSize\"\n      list-type=\"picture\"\n      :multiple=\"multiple\"\n    >\n      <el-button\n        size=\"small\"\n        type=\"primary\"\n      >\n        Click to Upload\n      </el-button>\n    </el-upload>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { uploadFile } from '@/api/common'\n\n@Component({\n  name: 'FileUpload'\n})\nexport default class extends Vue {\n  @Prop({ default: '.jpg, .jpeg, .png' }) private accept!: string;\n  @Prop({ default: false }) private multiple!: boolean;\n  @Prop({ default: 2 }) private maxSize!: number;\n  @Prop({ default: [] }) private fileList!: Array<any>;\n\n  private beforeRemove(file: any, fileList: []) {\n    if (this.multiple) {\n      return true\n    }\n    return fileList.length > 1 // for single file\n  }\n\n  private beforeFileUpload(file: any) {\n    const extenstion = file.name.substr(file.name.lastIndexOf('.'))\n    const acceptable = this.accept.split(',').map(function(accept) {\n      return accept.trim()\n    })\n\n    const isAllowedType = acceptable.indexOf(extenstion) > -1\n    const isLessThanMaxSize = file.size / 1024 / 1024 < this.maxSize\n\n    if (!isAllowedType) {\n      this.$message.error('file type not permitted!')\n    }\n    if (!isLessThanMaxSize) {\n      this.$message.error('Icon size can not exceed 2MB!')\n    }\n    return isAllowedType && isLessThanMaxSize\n  }\n\n  private onFileTransferError(err: any, file: any, fileList: []) {\n    console.log(err) // mubasshir\n  }\n\n  private onFileTransferSuccess(response: any, file: any, fileList: []) {\n    this.fileList.push(file)\n    // if single file then we remove other file\n    if (!this.multiple && this.fileList.length > 1) {\n      this.fileList.shift()\n    }\n    // send change\n    this.$emit('change', file)\n  }\n\n  private uploadFile(file: any) {\n    const data = new FormData()\n    data.append('file', file.file)\n\n    return uploadFile(data, (event: ProgressEvent) => {\n      console.log(event) // mubasshir\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.upload-container {\n  .el-upload {\n    text-align: left;\n  }\n}\n</style>\n"]}]}