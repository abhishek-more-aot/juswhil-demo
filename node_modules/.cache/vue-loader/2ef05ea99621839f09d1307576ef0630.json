{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/SizeSelect/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/SizeSelect/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL2FwcCcKaW1wb3J0IHsgVGFnc1ZpZXdNb2R1bGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvdGFncy12aWV3JwoKQENvbXBvbmVudCh7CiAgbmFtZTogJ1NpemVTZWxlY3QnCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIHNpemVPcHRpb25zID0gWwogICAgeyBsYWJlbDogJ0RlZmF1bHQnLCB2YWx1ZTogJ2RlZmF1bHQnIH0sCiAgICB7IGxhYmVsOiAnTWVkaXVtJywgdmFsdWU6ICdtZWRpdW0nIH0sCiAgICB7IGxhYmVsOiAnU21hbGwnLCB2YWx1ZTogJ3NtYWxsJyB9LAogICAgeyBsYWJlbDogJ01pbmknLCB2YWx1ZTogJ21pbmknIH0KICBdCgogIGdldCBzaXplKCkgewogICAgcmV0dXJuIEFwcE1vZHVsZS5zaXplCiAgfQoKICBwcml2YXRlIGhhbmRsZVNldFNpemUoc2l6ZTogc3RyaW5nKSB7CiAgICAodGhpcyBhcyBhbnkpLiRFTEVNRU5ULnNpemUgPSBzaXplCiAgICBBcHBNb2R1bGUuU2V0U2l6ZShzaXplKQogICAgdGhpcy5yZWZyZXNoVmlldygpCiAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgbWVzc2FnZTogJ1N3aXRjaCBTaXplIFN1Y2Nlc3MnLAogICAgICB0eXBlOiAnc3VjY2VzcycKICAgIH0pCiAgfQoKICBwcml2YXRlIHJlZnJlc2hWaWV3KCkgewogICAgLy8gSW4gb3JkZXIgdG8gbWFrZSB0aGUgY2FjaGVkIHBhZ2UgcmUtcmVuZGVyZWQKICAgIFRhZ3NWaWV3TW9kdWxlLmRlbEFsbENhY2hlZFZpZXdzKCkKICAgIGNvbnN0IHsgZnVsbFBhdGggfSA9IHRoaXMuJHJvdXRlCiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsKICAgICAgICBwYXRoOiAnL3JlZGlyZWN0JyArIGZ1bGxQYXRoCiAgICAgIH0pCiAgICB9KQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/SizeSelect","sourcesContent":["<template>\n  <el-dropdown\n    id=\"size-select\"\n    trigger=\"click\"\n    @command=\"handleSetSize\"\n  >\n    <div>\n      <svg-icon\n        class=\"size-icon\"\n        name=\"size\"\n      />\n    </div>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item\n        v-for=\"item of sizeOptions\"\n        :key=\"item.value\"\n        :disabled=\"size===item.value\"\n        :command=\"item.value\"\n      >\n        {{\n          item.label }}\n      </el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule } from '@/store/modules/tags-view'\n\n@Component({\n  name: 'SizeSelect'\n})\nexport default class extends Vue {\n  private sizeOptions = [\n    { label: 'Default', value: 'default' },\n    { label: 'Medium', value: 'medium' },\n    { label: 'Small', value: 'small' },\n    { label: 'Mini', value: 'mini' }\n  ]\n\n  get size() {\n    return AppModule.size\n  }\n\n  private handleSetSize(size: string) {\n    (this as any).$ELEMENT.size = size\n    AppModule.SetSize(size)\n    this.refreshView()\n    this.$message({\n      message: 'Switch Size Success',\n      type: 'success'\n    })\n  }\n\n  private refreshView() {\n    // In order to make the cached page re-rendered\n    TagsViewModule.delAllCachedViews()\n    const { fullPath } = this.$route\n    this.$nextTick(() => {\n      this.$router.replace({\n        path: '/redirect' + fullPath\n      })\n    })\n  }\n}\n</script>\n"]}]}