{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/news/components/NewsDetail.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/news/components/NewsDetail.vue","mtime":1673848462428},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NewsDetail.vue"],"names":[],"mappings":";AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NewsDetail.vue","sourceRoot":"src/views/news/components","sourcesContent":["<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"formData\"\n        :model=\"formData\"\n        :rules=\"rules\"\n        label-width=\"160px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Enabled\"\n          prop=\"enabled\"\n          required\n        >\n          <el-switch v-model=\"formData.enabled\" />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Description\"\n          prop=\"description\"\n          required\n        >\n          <el-input\n            v-model=\"formData.description\"\n            name=\"description\"\n            required\n            placeholder=\"Description\"\n            show-word-limit\n          />\n        </el-form-item>\n        <el-form-item\n          label=\"Link\"\n          prop=\"link\"\n          required\n        >\n          <el-input\n            v-model=\"formData.link\"\n            type=\"textarea\"\n            :rows=\"2\"\n            :autosize=\"{minRows: 2, maxRows: 4}\"\n            name=\"link\"\n            placeholder=\"Link\"\n            show-word-limit\n          />\n        </el-form-item>\n\n          <el-form-item\n          label=\"Source\"\n          prop=\"source\"\n          required\n        >\n          <el-input\n            v-model=\"formData.source\"\n            name=\"source\"\n            placeholder=\"Source\"\n            show-word-limit\n          />\n        </el-form-item>\n\n        <!-- <el-form-item\n          style=\"margin-bottom: 20px\"\n          label=\"Image\"\n          prop=\"image\"\n          required\n        >\n          <pan-thumb :image=\"image\" /><br>\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-upload\"\n            tyle=\"position: absolute;bottom: 15px;margin-left: 40px;\"\n            @click=\"toggleShow\"\n          >\n            Upload Image\n          </el-button>\n          <avatar-upload\n            v-model=\"showImageUpload\"\n            field=\"avatar\"\n            @crop-success=\"cropSuccess\"\n            @close=\"onClose\"\n            @crop-upload-success=\"onCropUploadSuccess\"\n          />\n        </el-form-item> -->\n\n        <el-form-item style=\"margin-bottom: 30px\" label=\"Image\" prop=\"image\">\n          <upload-image\n            :key=\"renderKey\"\n            :form-field=\"formData.image\"\n            @handle-upload=\"updateImage\"\n            @handle-remove=\"removeImage\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n             style=\"background:#59b6e3;border:1px solid #59b6e3\"\n            @click=\"submitForm\"\n          >\n            {{ $t(\"global.form.save\") }}\n          </el-button>\n          <el-button\n            v-waves\n            type=\"reset\"\n            @click=\"resetForm\"\n          >\n            {{ $t(\"global.form.reset\") }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport {\n  getNewsById,\n  updateNews,\n  createNews\n} from '@/api/news'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from '@/router'\nimport { Action } from 'vuex-module-decorators'\nimport { getQuery } from '@/utils'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport FileUpload from '@/components/FileUpload/index.vue'\nimport { getAppVersions, uploadFile } from '@/api/common'\nimport { defaultNewsData } from '@/api/news'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\n// import { getUsers } from '@/api/users'\nimport UploadImage from \"@/components/UploadImage/index.vue\";\n\n\n@Component({\n  name: 'NewsDetail',\n  components: {\n    FileUpload,\n    PanThumb,\n    AvatarUpload,\n    UploadImage,\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private platformList: any = ['android', 'ios'];\n  private pageList: any = ['Home'];\n  private limitnum = 1;\n  private fileList: any = [];\n  private appVersionList: any = [];\n  private image = '';\n  private showImageUpload = false;\n  private formData = Object.assign({}, defaultNewsData);\n  private loading = false;\n  private renderKey: any;\n\n  private rules = {\n    title: [\n      {\n        required: true,\n        trigger: 'blur',\n        message: 'Title is required'\n      },\n      {\n        min: 3,\n        max: 50,\n        message: 'Length should be 3 to 50',\n        trigger: 'blur'\n      }\n    ],\n    message: [\n      {\n        required: true,\n        trigger: 'blur',\n        message: 'Message is required'\n      },\n      {\n        min: 3,\n        message: 'Length should be greater than 3',\n        trigger: 'blur'\n      }\n    ],\n    source:[\n       {\n        required: true,\n        trigger: 'blur',\n        message: 'Source is required'\n      },\n    ],\n    page: [\n      {\n        required: true,\n        trigger: 'blur'\n      }\n    ],\n    link: [\n      {\n        trigger: 'blur'\n      },\n      {\n        pattern: /[-a-zA-Z0-9@%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n        message: 'Invalid URL format',\n        trigger: ['blur', 'change']\n      }\n    ],\n    image: [\n      {\n        required: true,\n        trigger: 'blur',\n        message: 'Image is required'\n      },\n    ]\n  };\n\n  private updateImage(res: any) {\n    this.formData.image = res;\n  }\n  private removeImage() {\n    this.formData.image = \"\";\n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    this.getAppVersionList()\n\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.formData = Object.assign({}, defaultNewsData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getNewsById(id)\n      this.renderKey++;\n      this.formData = data\n      this.image = data.image\n      if (data.stateId) {\n        // this.getCityList(data.stateId)\n      }\n      // if (data.cityId) {\n      //   this.getPincodeList(data.cityId)\n      // }\n      // Just for test\n      const title = this.formData.description ? this.formData.description : ''\n      // Set tagsview title\n      this.setTagsViewTitle(title)\n      // Set page title\n      this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private async uploadSectionFile(param: any) {\n    \n    var fileObj = param.file\n    var form = new FormData()\n    \n    form.append('file', fileObj)\n    await uploadFile(form, (event: ProgressEvent) => {\n      console.log(event)\n    }).then((res) => {\n      \n      this.formData.image = res.toString()\n    })\n    \n  }\n\n  private uploadFileError(err: any, file: any, fileList: any) {\n    this.$message.error('upload failed!')\n  }\n\n  private exceedFile(files: any, fileList: any) {\n    this.$message.error('Only upload' + this.limitnum + 'Files')\n  }\n\n  private handleRemove(file: any) {\n    \n    this.formData.image = ''\n    const temp: any = this.$refs.upload\n    temp.clearFiles()\n    \n  }\n\n  private uploadFileSuccess(response: any, file: any, fileList: any) {\n    if (response.data.error == 0) {\n      file.response = response.data.data\n      this.fileList.push(file)\n    } else {\n      this.$message.error(response.data.message) // File upload error prompt\n    }\n  }\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          \n          this.formData.image = res\n          \n        })\n      })\n    \n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.formData.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.formData.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.formData as Form).validate((valid) => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    this.formData.image = '';\n    (this.$refs.formData as Form).resetFields()\n    this.renderKey++;\n    this.fileList = []\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        // this.formData.country = { id: this.formData.countryId }\n        // this.formData.state = { id: this.formData.stateId }\n        // this.formData.city = { id: this.formData.cityId }\n        await updateNews(this.formData.id, this.formData)\n      } else {\n        await createNews(this.formData)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'News saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/news/list')\n    } catch (err) {\n      this.loading = false\n    }\n  }\n\n  private async getAppVersionList() {\n    try {\n      this.appVersionList = await getAppVersions()\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private imageUpload(file: any) {\n    this.formData.image = file.response\n  }\n\n  // private sendToAllToggled() {\n  //   if (this.formData.sendToAll) {\n  //     this.$confirm(\n  //       'Are you sure want to send notification to All users?',\n  //       'Attention!',\n  //       {\n  //         confirmButtonText: \"Yes, I know what I'm doing\",\n  //         confirmButtonClass: 'el-button--success',\n  //         cancelButtonText: this.$tc('table.cancel'),\n  //         cancelButtonClass: 'el-button--danger',\n  //         type: 'error'\n  //       }\n  //     )\n  //       .then((confirm) => {\n  //         // let it confirm\n  //         // clear other dropdowns\n  //         this.formData.countryId = null\n  //         this.formData.stateId = null\n  //         this.formData.cityId = null\n\n  //         // delete this.formData.country\n  //         // delete this.formData.state\n  //         // delete this.formData.city\n  //       })\n  //       .catch((_) => {\n  //         this.formData.sendToAll = false\n  //       })\n  //   }\n  // }\n}\n</script>\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n</style>\n"]}]}