{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/gallerys/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/gallerys/list.vue","mtime":1668754947374},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsgSUdhbGxlcnlEYXRhIH0gZnJvbSAnQC9hcGkvdHlwZXMnCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uL2luZGV4LnZ1ZScKaW1wb3J0IHsgZXhwb3J0SnNvbjJFeGNlbCB9IGZyb20gJ0AvdXRpbHMvZXhjZWwnCmltcG9ydCB7IGZvcm1hdEpzb24sIGdldFF1ZXJ5IH0gZnJvbSAnQC91dGlscycKaW1wb3J0IEVuYWJsZWQgZnJvbSAnQC9jb21wb25lbnRzL0VuYWJsZWQvaW5kZXgudnVlJwppbXBvcnQgeyBkZWxldGVHYWxsZXJ5cywgZ2V0R2FsbGVyeXMsIHVwZGF0ZU9yZGVyIH0gZnJvbSAnQC9hcGkvZ2FsbGVyeS9nYWxsZXJ5cycKaW1wb3J0IHsgQWRtaW5Nb2R1bGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvYWRtaW4nCmltcG9ydCBTb3J0YWJsZSBmcm9tICdzb3J0YWJsZWpzJwoKQENvbXBvbmVudCh7CiAgbmFtZTogJ0dhbGxlcnlMaXN0JywKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uLAogICAgRW5hYmxlZAogIH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBWdWUgewogIHByaXZhdGUgdGFibGVLZXkgPSAwOwogIHByaXZhdGUgdG90YWwgPSAwOwogIHByaXZhdGUgbGlzdDogSUdhbGxlcnlEYXRhW10gPSBbXTsKICBwcml2YXRlIG1hbGxzTGlzdDphbnkgPSBbXTsKICBwcml2YXRlIGxpc3RMb2FkaW5nID0gdHJ1ZTsKICBwcml2YXRlIGRvd25sb2FkTG9hZGluZyA9IGZhbHNlOwogIHByaXZhdGUgbXlSb2xlID0gQWRtaW5Nb2R1bGUucm9sZXM7CiAgcHJpdmF0ZSBzaG93U29ydGluZ09wdGlvbjogYm9vbGVhbiA9IGZhbHNlOwogIHByaXZhdGUgcmVuZGVyQ29tcG9uZW50OiBib29sZWFuID0gdHJ1ZTsKICBuZXdMaXN0OiBhbnkgPSBbXTsKICBvbGRMaXN0OiBhbnkgPSBbXTsKICBwcml2YXRlIGxpc3RRdWVyeSA9IHsKICAgIHBhZ2U6IDEsCiAgICBsaW1pdDogMTAsCiAgICBzb3J0OiAnb3JkZXIsQVNDJywKICAgIGZpbHRlcjogewogICAgICBlbmFibGVkOiAnZXEnCiAgICB9CiAgfTsKCiAgcHJpdmF0ZSBzaG93Q3JlYXRlZERhdGU6IGJvb2xlYW4gPSBmYWxzZTsKICBwcml2YXRlIHNvcnRPcHRpb25zID0gWwogICAgeyBsYWJlbDogJ0FzY2VuZGluZycsIGtleTogJ29yZGVyLEFTQycgfSwKICAgIHsgbGFiZWw6ICdEZXNjZW5kaW5nJywga2V5OiAnb3JkZXIsREVTQycgfQogIF07CgogIHByaXZhdGUgZW5hYmxlVHlwZU9wdGlvbnMgPSBbCiAgICB7IGtleTogdHJ1ZSwgdmFsdWU6ICdFbmFibGUnIH0sCiAgICB7IGtleTogZmFsc2UsIHZhbHVlOiAnRGlzYWJsZWQnIH0KICBdOwoKICBzb3J0YWJsZTogYW55OwoKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCkKICB9CgogIGFzeW5jIG9uUHJpb3J0eUNoYW5nZSgpIHsKICAgIGlmICh0aGlzLnNob3dTb3J0aW5nT3B0aW9uKSB7CiAgICAgIHRoaXMuZmV0Y2hBbGxSZWNvcmVkKHRydWUpCiAgICB9IGVsc2UgewogICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCA9IGZhbHNlCiAgICAgIHRoaXMuc29ydGFibGUub3B0aW9ucy5kaXNhYmxlZCA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCA9IHRydWUKICAgICAgfSkKICAgIH0KICB9CgogICAgYXN5bmMgZmV0Y2hBbGxSZWNvcmVkKGNoZWNrRm9yRmlyc3RUaW1lOiBib29sZWFuKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRHYWxsZXJ5cygKICAgICAgICBnZXRRdWVyeSh7CiAgICAgICAgICBwYWdlOiAxLAogICAgICAgICAgbGltaXQ6IDEwMDAwMCwKICAgICAgICAgIHNvcnQ6ICdvcmRlcixBU0MnLAogICAgICAgICAgZmlsdGVyOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6ICdlcScsCiAgICAgICAgICAgIGlzRGVsZXRlZDogJ2VxJwogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgCiAgICAgICkKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhCiAgICAgIHRoaXMudG90YWwgPSBkYXRhLnRvdGFsCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICBpZiAoY2hlY2tGb3JGaXJzdFRpbWUpIHsKICAgICAgICB0aGlzLm9sZExpc3QgPSB0aGlzLmxpc3QubWFwKCh2KSA9PiB2LmlkKQogICAgICAgIHRoaXMubmV3TGlzdCA9IHRoaXMub2xkTGlzdC5zbGljZSgpCiAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5zZXRTb3J0KQogICAgICB9CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgIH0KICB9CgogICAgc2V0U29ydCgpIHsKICAgIGNvbnN0IHRlbXA6IGFueSA9IHRoaXMuJHJlZnMuZHJhZ1RhYmxlCiAgICBjb25zdCBlbCA9IHRlbXAuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoCiAgICAgICcuZWwtdGFibGVfX2JvZHktd3JhcHBlciA+IHRhYmxlID4gdGJvZHknCiAgICApWzBdCiAgICB0aGlzLnNvcnRhYmxlID0gU29ydGFibGUuY3JlYXRlKGVsLCB7CiAgICAgIGdob3N0Q2xhc3M6ICdzb3J0YWJsZS1naG9zdCcsCiAgICAgIHNldERhdGE6IGZ1bmN0aW9uKGRhdGFUcmFuc2ZlcikgewogICAgICAgIGRhdGFUcmFuc2Zlci5zZXREYXRhKCdUZXh0JywgJycpCiAgICAgIH0sCiAgICAgIG9uRW5kOiAoZXZ0KSA9PiB7CiAgICAgICAgY29uc3QgdGFyZ2V0Um93ID0gdGhpcy5saXN0LnNwbGljZShOdW1iZXIoZXZ0Lm9sZEluZGV4KSwgMSlbMF0KICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKE51bWJlcihldnQubmV3SW5kZXgpLCAwLCB0YXJnZXRSb3cpCiAgICAgICAgY29uc3QgdGVtcEluZGV4ID0gdGhpcy5uZXdMaXN0LnNwbGljZShldnQub2xkSW5kZXgsIDEpWzBdCiAgICAgICAgdGhpcy5uZXdMaXN0LnNwbGljZShldnQubmV3SW5kZXgsIDAsIHRlbXBJbmRleCkKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5ld0xpc3QpCiAgICAgICAgdGhpcy51cGRhdGVPcmRlcigpCiAgICAgIH0KICAgIH0pCiAgfQoKICBwcml2YXRlIGFzeW5jIHVwZGF0ZU9yZGVyKCkgewogICAgdHJ5IHsKICAgICAgY29uc3QgdXBkYXRlQ2hlY2sgPSBhd2FpdCB1cGRhdGVPcmRlcih0aGlzLm5ld0xpc3QpCiAgICAgIHRoaXMuZmV0Y2hBbGxSZWNvcmVkKGZhbHNlKQogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHkKICAgIH0gY2F0Y2ggKGVycm9yKSB7fQogIH0KCiAgcHJpdmF0ZSBoYW5kbGVEZWxldGUoZGF0YTogYW55KSB7CiAgICBpZiAoZGF0YSkgewogICAgICB0aGlzLiRjb25maXJtKAogICAgICAgICdEbyB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBJbWFnZT8nLAogICAgICAgIHRoaXMuJHRjKCd0YWJsZS5kZWxldGUnKSwKICAgICAgICB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy4kdGMoJ3RhYmxlLmRlbGV0ZScpLAogICAgICAgICAgY29uZmlybUJ1dHRvbkNsYXNzOiAnZWwtYnV0dG9uLS1kYW5nZXInLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbCcsCiAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgfQogICAgICApCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgZGVsZXRlR2FsbGVyeXMoZGF0YS5pZCkudGhlbihkZWxldGVkID0+IHsKICAgICAgICAgICAgdGhpcy5nZXRMaXN0KCkKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdGMoJ3RhYmxlLmRlbGV0ZUNhbmNlbGVkJykKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH0KICB9CgogIHByaXZhdGUgYXN5bmMgZ2V0TGlzdCgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgIGNvbnN0IGRhdGE6IGFueSA9IGF3YWl0IGdldEdhbGxlcnlzKGdldFF1ZXJ5KHRoaXMubGlzdFF1ZXJ5KSkKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhCgogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbAogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgfQogIH0KCiAgcHJpdmF0ZSBoYW5kbGVGaWx0ZXIoKSB7CiAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMQogICAgdGhpcy5nZXRMaXN0KCkKICB9CgogIHByaXZhdGUgc29ydENoYW5nZShkYXRhOiBhbnkpIHsKICAgIGNvbnN0IHsgcHJvcCwgb3JkZXIgfSA9IGRhdGEKICAgIGlmIChwcm9wKSB7CiAgICAgIHRoaXMubGlzdFF1ZXJ5LnNvcnQgPQogICAgICAgIGAke3Byb3B9LGAgKyAob3JkZXIgPT09ICdhc2NlbmRpbmcnID8gJ0FTQycgOiAnREVTQycpCiAgICAgIHRoaXMuaGFuZGxlRmlsdGVyKCkKICAgIH0KICB9CgogIHByaXZhdGUgZ2V0U29ydENsYXNzKGtleTogc3RyaW5nKSB7CiAgICBjb25zdCBzb3J0ID0gdGhpcy5saXN0UXVlcnkuc29ydAogICAgcmV0dXJuIHNvcnQgPT09IGAke2tleX0sQVNDYAogICAgICA/ICdhc2NlbmRpbmcnCiAgICAgIDogc29ydCA9PT0gYCR7a2V5fSxERVNDYAogICAgICAgID8gJ2Rlc2NlbmRpbmcnCiAgICAgICAgOiAnJwogIH0KCiAgcHJpdmF0ZSBoYW5kbGVEb3dubG9hZCgpIHsKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZQogICAgY29uc3QgdEhlYWRlciA9IFsKICAgICAgJ0lEJywKICAgICAgJ0Z1bGwgTmFtZScsCiAgICAgICdFbWFpbCcsCiAgICAgICdDb250YWN0IE51bWJlcicsCiAgICAgICdTdGF0dXMnLAogICAgICAndGltZXN0YW1wJwogICAgXQogICAgY29uc3QgZmlsdGVyVmFsID0gWwogICAgICAnaWQnLAogICAgICAnZnVsbE5hbWUnLAogICAgICAnZW1haWwnLAogICAgICAnY29udGFjdE51bWJlcicsCiAgICAgICdlbmFibGVkJywKICAgICAgJ2NyZWF0ZWRUaW1lc3RhbXAnCiAgICBdCiAgICBjb25zdCBkYXRhID0gZm9ybWF0SnNvbihmaWx0ZXJWYWwsIHRoaXMubGlzdCkKICAgIGV4cG9ydEpzb24yRXhjZWwoCiAgICAgIHRIZWFkZXIsCiAgICAgIGRhdGEsCiAgICAgIHRoaXMuJHRjKCdyb3V0ZS5HYWxsZXJ5TWFuYWdlbWVudC5HYWxsZXJ5LnRpdGxlJykKICAgICkKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gZmFsc2UKICB9Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAqfile":"list.vue","sourceRoot":"src/views/gallerys","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-select\n        v-model=\"listQuery.enabled\"\n        :placeholder=\"$t('admin.enabled')\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 130px\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in enableTypeOptions\"\n          :key=\"item.key\"\n          :label=\"item.value\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <el-select\n        v-model=\"listQuery.sort\"\n        style=\"width: 140px\"\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in sortOptions\"\n          :key=\"item.key\"\n          :label=\"item.label\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <!-- <el-button\n        v-waves\n        class=\"filter-item\"\n        type=\"primary\"\n        icon=\"el-icon-search\"\n        @click=\"handleFilter\"\n      >{{ $t('table.search') }}</el-button> -->\n      <router-link\n        :to=\"'/gallery/add'\"\n        class=\"margin-horizontal\"\n      >\n        <el-button\n          v-waves\n          class=\"filter-item\"\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n        >\n          {{ $t('global.form.add') }}\n        </el-button>\n      </router-link>\n      <el-checkbox\n        v-model=\"showCreatedDate\"\n        class=\"filter-item\"\n        style=\"margin-left:15px;\"\n        @change=\"tableKey=tableKey+1\"\n      >\n        {{ $t('table.createdDate') }}\n      </el-checkbox>\n\n      <el-checkbox\n        v-model=\"showSortingOption\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"onPriortyChange()\"\n      >\n        Change Order\n      </el-checkbox>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      row-key=\"id\"\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        sortable=\"custom\"\n        width=\"80\"\n        align=\"center\"\n        :label=\"$t('table.id')\"\n        prop=\"id\"\n        :class-name=\"getSortClass('id')\"\n      />\n      <el-table-column\n        width=\"80\"\n        align=\"center\"\n        label=\"Status\"\n      >\n        <template slot-scope=\"scope\">\n          <enabled\n            :key=\"scope.row.id\"\n            v-model=\"scope.row.enabled\"\n            :url=\"'/gallerys/' + scope.row.id\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column\n        width=\"400px\"\n        align=\"center\"\n        prop=\"image\"\n        label=\"Image\"\n      >\n        <template slot-scope=\"scope\">\n          <img\n            :src=\"scope.row.image\"\n            :width=\"360\"\n            :height=\"150\"\n          >\n        </template>\n      </el-table-column>\n      <!-- <el-table-column width=\"180px\" align=\"center\" label=\"order\" prop=\"order\" /> -->\n      <el-table-column\n        v-if=\"showCreatedDate\"\n        :label=\"$t('table.createdDate')\"\n        width=\"110px\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <span style=\"color:red;\">{{ scope.row.createdTimestamp | moment(\"from\") }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n       \n        align=\"center\"\n        :label=\"$t('table.actions')\"\n        width=\"180\"\n      >\n        <template slot-scope=\"scope\">\n          <router-link :to=\"'/gallery/edit/'+scope.row.id\">\n            <el-button\n              v-waves\n              type=\"warning\"\n              size=\"small\"\n              icon=\"el-icon-edit\"\n            />\n          </router-link>\n          <el-button\n          v-if=\"myRole == 'superadmin'\"\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            style=\"margin-left:10px\"\n            @click=\"handleDelete(scope.row)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0 && !this.showSortingOption\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport { IGalleryData } from '@/api/types'\nimport Pagination from '@/components/Pagination/index.vue'\nimport { exportJson2Excel } from '@/utils/excel'\nimport { formatJson, getQuery } from '@/utils'\nimport Enabled from '@/components/Enabled/index.vue'\nimport { deleteGallerys, getGallerys, updateOrder } from '@/api/gallery/gallerys'\nimport { AdminModule } from '@/store/modules/admin'\nimport Sortable from 'sortablejs'\n\n@Component({\n  name: 'GalleryList',\n  components: {\n    Pagination,\n    Enabled\n  }\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IGalleryData[] = [];\n  private mallsList:any = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  private myRole = AdminModule.roles;\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  newList: any = [];\n  oldList: any = [];\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: 'order,ASC',\n    filter: {\n      enabled: 'eq'\n    }\n  };\n\n  private showCreatedDate: boolean = false;\n  private sortOptions = [\n    { label: 'Ascending', key: 'order,ASC' },\n    { label: 'Descending', key: 'order,DESC' }\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: 'Enable' },\n    { key: false, value: 'Disabled' }\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList()\n  }\n\n  async onPriortyChange() {\n    if (this.showSortingOption) {\n      this.fetchAllRecored(true)\n    } else {\n      this.renderComponent = false\n      this.sortable.options.disabled = true\n      this.$nextTick().then(() => {\n        this.renderComponent = true\n      })\n    }\n  }\n\n    async fetchAllRecored(checkForFirstTime: boolean) {\n    try {\n      this.listLoading = true\n      const data: any = await getGallerys(\n        getQuery({\n          page: 1,\n          limit: 100000,\n          sort: 'order,ASC',\n          filter: {\n            enabled: 'eq',\n            isDeleted: 'eq'\n          }\n        })\n        \n      )\n      this.list = data.data\n      this.total = data.total\n      this.listLoading = false\n      if (checkForFirstTime) {\n        this.oldList = this.list.map((v) => v.id)\n        this.newList = this.oldList.slice()\n        this.$nextTick(this.setSort)\n      }\n    } catch (error) {\n      this.listLoading = false\n    }\n  }\n\n    setSort() {\n    const temp: any = this.$refs.dragTable\n    const el = temp.$el.querySelectorAll(\n      '.el-table__body-wrapper > table > tbody'\n    )[0]\n    this.sortable = Sortable.create(el, {\n      ghostClass: 'sortable-ghost',\n      setData: function(dataTransfer) {\n        dataTransfer.setData('Text', '')\n      },\n      onEnd: (evt) => {\n        const targetRow = this.list.splice(Number(evt.oldIndex), 1)[0]\n        this.list.splice(Number(evt.newIndex), 0, targetRow)\n        const tempIndex = this.newList.splice(evt.oldIndex, 1)[0]\n        this.newList.splice(evt.newIndex, 0, tempIndex)\n        console.log(this.newList)\n        this.updateOrder()\n      }\n    })\n  }\n\n  private async updateOrder() {\n    try {\n      const updateCheck = await updateOrder(this.newList)\n      this.fetchAllRecored(false)\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        'Do you want to delete this Image?',\n        this.$tc('table.delete'),\n        {\n          confirmButtonText: this.$tc('table.delete'),\n          confirmButtonClass: 'el-button--danger',\n          cancelButtonText: 'Cancel',\n          type: 'error'\n        }\n      )\n        .then(() => {\n          deleteGallerys(data.id).then(deleted => {\n            this.getList()\n          })\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: this.$tc('table.deleteCanceled')\n          })\n        })\n    }\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true\n      const data: any = await getGallerys(getQuery(this.listQuery))\n      this.list = data.data\n\n      this.total = data.total\n      this.listLoading = false\n    } catch (error) {\n      this.listLoading = false\n    }\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1\n    this.getList()\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === 'ascending' ? 'ASC' : 'DESC')\n      this.handleFilter()\n    }\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort\n    return sort === `${key},ASC`\n      ? 'ascending'\n      : sort === `${key},DESC`\n        ? 'descending'\n        : ''\n  }\n\n  private handleDownload() {\n    this.downloadLoading = true\n    const tHeader = [\n      'ID',\n      'Full Name',\n      'Email',\n      'Contact Number',\n      'Status',\n      'timestamp'\n    ]\n    const filterVal = [\n      'id',\n      'fullName',\n      'email',\n      'contactNumber',\n      'enabled',\n      'createdTimestamp'\n    ]\n    const data = formatJson(filterVal, this.list)\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc('route.GalleryManagement.Gallery.title')\n    )\n    this.downloadLoading = false\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-input {\n  padding-right: 100px;\n}\n\n.cancel-btn {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n</style>\n"]}]}