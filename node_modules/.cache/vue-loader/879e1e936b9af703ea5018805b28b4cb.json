{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/career/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/career/list.vue","mtime":1672150324642},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCB7IGdldENhcmVlciwgZ2V0RmlsdGVycywgdXBkYXRlT3JkZXIgfSBmcm9tICJAL2FwaS9jYXJlZXIiOwppbXBvcnQgeyBJQ2FyZWVyRGF0YSB9IGZyb20gIkAvYXBpL3R5cGVzIjsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAiQC9jb21wb25lbnRzL1BhZ2luYXRpb24vaW5kZXgudnVlIjsKaW1wb3J0IHsgZ2V0UXVlcnksIGZvcm1hdEpzb24gfSBmcm9tICJAL3V0aWxzL2luZGV4IjsKaW1wb3J0IHsgZXhwb3J0SnNvbjJFeGNlbCB9IGZyb20gIkAvdXRpbHMvZXhjZWwiOwppbXBvcnQgU29ydGFibGUgZnJvbSAic29ydGFibGVqcyI7CmltcG9ydCBFbmFibGVkIGZyb20gIkAvY29tcG9uZW50cy9FbmFibGVkL2luZGV4LnZ1ZSI7CgpAQ29tcG9uZW50KHsKICBuYW1lOiAiQ2FyZWVyTGlzdCIsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbiwKICAgIEVuYWJsZWQsCiAgfSwKfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBWdWUgewogIHByaXZhdGUgdGFibGVLZXkgPSAwOwogIHByaXZhdGUgdG90YWwgPSAwOwogIHByaXZhdGUgbGlzdDogSUNhcmVlckRhdGFbXSA9IFtdOwogIHByaXZhdGUgbGlzdExvYWRpbmcgPSB0cnVlOwogIG5ld0xpc3Q6IGFueSA9IFtdOwogIG9sZExpc3Q6IGFueSA9IFtdOwogIHByaXZhdGUgc2hvd1NvcnRpbmdPcHRpb246IGJvb2xlYW4gPSBmYWxzZTsKICBwcml2YXRlIHJlbmRlckNvbXBvbmVudDogYm9vbGVhbiA9IHRydWU7CiAgcHJpdmF0ZSBkb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICBzb3J0YWJsZTogYW55OwogIHByaXZhdGUgbGlzdFF1ZXJ5ID0gewogICAgcGFnZTogMSwKICAgIGxpbWl0OiAyMCwKICAgIHNvcnQ6ICJpZCxERVNDIiwKICAgIGZpbHRlcjogewogICAgICBlbmFibGVkOiAiZXEiLAogICAgICBuYW1lOiAiJGNvbnRMIiwKICAgIH0sCiAgfTsKCiAgcHJpdmF0ZSBzaG93Q3JlYXRlZERhdGU6IGJvb2xlYW4gPSBmYWxzZTsKICBwcml2YXRlIHNvcnRPcHRpb25zID0gWwogICAgeyBsYWJlbDogIkFzY2VuZGluZyIsIGtleTogImlkLEFTQyIgfSwKICAgIHsgbGFiZWw6ICJEZXNjZW5kaW5nIiwga2V5OiAiaWQsREVTQyIgfSwKICBdOwoKICBwcml2YXRlIGVuYWJsZVR5cGVPcHRpb25zID0gWwogICAgeyBrZXk6IHRydWUsIHZhbHVlOiAiRW5hYmxlIiB9LAogICAgeyBrZXk6IGZhbHNlLCB2YWx1ZTogIkRpc2FibGVkIiB9LAogIF07CgogIHByaXZhdGUgZmlsdGVyczogYW55ID0gW107CgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9CiAgcHJpdmF0ZSBzb3VyY2U6IGFueTsKICBwcml2YXRlIGFzeW5jIGdldExpc3QoKSB7CiAgICB0cnkgewogICAgICBkZWJ1Z2dlcjsKCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRDYXJlZXIoZ2V0UXVlcnkodGhpcy5saXN0UXVlcnkpKTsKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhOwoKICAgICAgdGhpcy50b3RhbCA9IGRhdGEudG90YWw7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0KICB9CgogIHByaXZhdGUgYXN5bmMgZ2V0RmlsdGVycygpIHsKICAgIHRoaXMuZmlsdGVycyA9IGF3YWl0IGdldEZpbHRlcnMoCiAgICAgIGdldFF1ZXJ5KHsKICAgICAgICBzb3J0OiAibmFtZSxBU0MiLAogICAgICB9KQogICAgKTsKICB9CgogIHByaXZhdGUgaGFuZGxlRmlsdGVyKCkgewogICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDE7CiAgICB0aGlzLmdldExpc3QoKTsKICB9CgogIGFzeW5jIG9uUHJpb3J0eUNoYW5nZSgpIHsKICAgIGlmICh0aGlzLnNob3dTb3J0aW5nT3B0aW9uKSB7CiAgICAgIHRoaXMuZmV0Y2hBbGxSZWNvcmVkKHRydWUpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5yZW5kZXJDb21wb25lbnQgPSBmYWxzZTsKICAgICAgdGhpcy5zb3J0YWJsZS5vcHRpb25zLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgdGhpcy4kbmV4dFRpY2soKS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCA9IHRydWU7CiAgICAgIH0pOwogICAgfQogIH0KCiAgYXN5bmMgZmV0Y2hBbGxSZWNvcmVkKGNoZWNrRm9yRmlyc3RUaW1lOiBib29sZWFuKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgY29uc3QgZGF0YTogYW55ID0gYXdhaXQgZ2V0Q2FyZWVyKAogICAgICAgIGdldFF1ZXJ5KHsKICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgICBsaW1pdDogMTAwMDAwLAogICAgICAgICAgc29ydDogInByaW9yaXR5LEFTQyIsCiAgICAgICAgICBmaWx0ZXI6IHsKICAgICAgICAgICAgZW5hYmxlZDogImVxIiwKICAgICAgICAgICAgaXNEZWxldGVkOiAiZXEiLAogICAgICAgICAgfSwKICAgICAgICB9KQogICAgICApOwogICAgICB0aGlzLmxpc3QgPSBkYXRhLmRhdGE7CiAgICAgIHRoaXMudG90YWwgPSBkYXRhLnRvdGFsOwogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIGlmIChjaGVja0ZvckZpcnN0VGltZSkgewogICAgICAgIHRoaXMub2xkTGlzdCA9IHRoaXMubGlzdC5tYXAoKHYpID0+IHYuaWQpOwogICAgICAgIHRoaXMubmV3TGlzdCA9IHRoaXMub2xkTGlzdC5zbGljZSgpOwogICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2V0U29ydCk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0KICB9CgogIHNldFNvcnQoKSB7CiAgICBjb25zdCB0ZW1wOiBhbnkgPSB0aGlzLiRyZWZzLmRyYWdUYWJsZTsKICAgIGNvbnN0IGVsID0gdGVtcC4kZWwucXVlcnlTZWxlY3RvckFsbCgKICAgICAgIi5lbC10YWJsZV9fYm9keS13cmFwcGVyID4gdGFibGUgPiB0Ym9keSIKICAgIClbMF07CiAgICB0aGlzLnNvcnRhYmxlID0gU29ydGFibGUuY3JlYXRlKGVsLCB7CiAgICAgIGdob3N0Q2xhc3M6ICJzb3J0YWJsZS1naG9zdCIsCiAgICAgIHNldERhdGE6IGZ1bmN0aW9uIChkYXRhVHJhbnNmZXIpIHsKICAgICAgICBkYXRhVHJhbnNmZXIuc2V0RGF0YSgiVGV4dCIsICIiKTsKICAgICAgfSwKICAgICAgb25FbmQ6IChldnQpID0+IHsKICAgICAgICBjb25zdCB0YXJnZXRSb3cgPSB0aGlzLmxpc3Quc3BsaWNlKE51bWJlcihldnQub2xkSW5kZXgpLCAxKVswXTsKICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKE51bWJlcihldnQubmV3SW5kZXgpLCAwLCB0YXJnZXRSb3cpOwogICAgICAgIGNvbnN0IHRlbXBJbmRleCA9IHRoaXMubmV3TGlzdC5zcGxpY2UoZXZ0Lm9sZEluZGV4LCAxKVswXTsKICAgICAgICB0aGlzLm5ld0xpc3Quc3BsaWNlKGV2dC5uZXdJbmRleCwgMCwgdGVtcEluZGV4KTsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5ld0xpc3QpOwogICAgICAgIHRoaXMudXBkYXRlT3JkZXIoKTsKICAgICAgfSwKICAgIH0pOwogIH0KCiAgcHJpdmF0ZSBhc3luYyB1cGRhdGVPcmRlcigpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHVwZGF0ZUNoZWNrID0gYXdhaXQgdXBkYXRlT3JkZXIodGhpcy5uZXdMaXN0KTsKICAgICAgdGhpcy5mZXRjaEFsbFJlY29yZWQoZmFsc2UpOwogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHkKICAgIH0gY2F0Y2ggKGVycm9yKSB7fQogIH0KCiAgcHJpdmF0ZSBzb3J0Q2hhbmdlKGRhdGE6IGFueSkgewogICAgY29uc3QgeyBwcm9wLCBvcmRlciB9ID0gZGF0YTsKICAgIGlmIChwcm9wKSB7CiAgICAgIHRoaXMubGlzdFF1ZXJ5LnNvcnQgPQogICAgICAgIGAke3Byb3B9LGAgKyAob3JkZXIgPT09ICJhc2NlbmRpbmciID8gIkFTQyIgOiAiREVTQyIpOwogICAgICB0aGlzLmhhbmRsZUZpbHRlcigpOwogICAgfQogIH0KCiAgcHJpdmF0ZSBnZXRTb3J0Q2xhc3Moa2V5OiBzdHJpbmcpIHsKICAgIGNvbnN0IHNvcnQgPSB0aGlzLmxpc3RRdWVyeS5zb3J0OwogICAgcmV0dXJuIHNvcnQgPT09IGAke2tleX0sQVNDYAogICAgICA/ICJhc2NlbmRpbmciCiAgICAgIDogc29ydCA9PT0gYCR7a2V5fSxERVNDYAogICAgICA/ICJkZXNjZW5kaW5nIgogICAgICA6ICIiOwogIH0KCiAgcHJpdmF0ZSBoYW5kbGVEb3dubG9hZCgpIHsKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZTsKICAgIGNvbnN0IHRIZWFkZXIgPSBbCiAgICAgICJJRCIsCiAgICAgICJGdWxsIE5hbWUiLAogICAgICAiRW1haWwiLAogICAgICAiQ29udGFjdCBOdW1iZXIiLAogICAgICAiU3RhdHVzIiwKICAgICAgInRpbWVzdGFtcCIsCiAgICBdOwogICAgY29uc3QgZmlsdGVyVmFsID0gWwogICAgICAiaWQiLAogICAgICAiZnVsbE5hbWUiLAogICAgICAiZW1haWwiLAogICAgICAiY29udGFjdE51bWJlciIsCiAgICAgICJlbmFibGVkIiwKICAgICAgImNyZWF0ZWRUaW1lc3RhbXAiLAogICAgXTsKICAgIGNvbnN0IGRhdGEgPSBmb3JtYXRKc29uKGZpbHRlclZhbCwgdGhpcy5saXN0KTsKICAgIGV4cG9ydEpzb24yRXhjZWwodEhlYWRlciwgZGF0YSwgdGhpcy4kdGMoInJvdXRlLkNhcmVlci5kZXNjcmlwdGlvbiIpKTsKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgfQp9Cg=="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAqfile":"list.vue","sourceRoot":"src/views/career","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.name\"\n        placeholder=\"name\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 160px\"\n        @input=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.contactNumber\"\n        placeholder=\"Contact Number\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 160px\"\n        @input=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.designation\"\n        placeholder=\"Designation\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 160px\"\n        @input=\"handleFilter\"\n      />\n\n      <el-select\n        v-model=\"listQuery.sort\"\n        style=\"width: 140px\"\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in sortOptions\"\n          :key=\"item.key\"\n          :label=\"item.label\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <el-button\n        v-waves\n        class=\"filter-item\"\n        type=\"primary\"\n        style=\"background: #59b6e3; border: 1px solid #59b6e3\"\n        icon=\"el-icon-search\"\n        @click=\"handleFilter\"\n      >\n        {{ $t(\"table.search\") }}\n      </el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      row-key=\"id\"\n      highlight-current-row\n      style=\"width: 100%\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        sortable=\"custom\"\n        width=\"80\"\n        align=\"center\"\n        :label=\"$t('table.id')\"\n        prop=\"id\"\n        :class-name=\"getSortClass('id')\"\n      />\n\n      <el-table-column\n        width=\"130\"\n        align=\"center\"\n        label=\"Enable/Disable\"\n        prop=\"\"\n      >\n        <template slot-scope=\"scope\">\n          <enabled\n            :key=\"scope.row.id\"\n            v-model=\"scope.row.enabled\"\n            :url=\"'/career-page/' + scope.row.id\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Candidate Details\" width=\"400px\">\n        <template slot-scope=\"scope\">\n          <el-row  gutter=\"20\">\n              <el-col :span=\"10\">Name</el-col>\n              <el-col :span=\"14\"> {{ scope.row.name }}</el-col>\n          </el-row>\n          <el-row  gutter=\"20\">\n              <el-col :span=\"10\">Contact Number</el-col>\n              <el-col :span=\"14\"> {{ scope.row.contactNumber }}</el-col>\n          </el-row>\n          <el-row  gutter=\"20\">\n              <el-col :span=\"10\">Designation</el-col>\n              <el-col :span=\"14\"> {{ scope.row.designation }}</el-col>\n          </el-row>\n          <el-row  gutter=\"20\">\n              <el-col :span=\"10\">Email</el-col>\n              <el-col :span=\"14\"> {{ scope.row.email }}</el-col>\n          </el-row>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"Description\" width=\"400px\">\n        <template slot-scope=\"scope\">\n          {{scope.row.desc}}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Resume\" width=\"200px\">\n        <template slot-scope=\"scope\">\n          <a :href=\"scope.row.uploadResume\" target=\"_blank\" style=\"color: blue\">\n            <el-tag>\n              <span style=\"color: blue\">\n                {{\n                  scope.row.uploadResume.slice(\n                    scope.row.uploadResume.length - 16,\n                    scope.row.uploadResume.length\n                  )\n                }}\n              </span>\n            </el-tag>\n          </a>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        v-if=\"showCreatedDate\"\n        :label=\"$t('table.createdDate')\"\n        width=\"110px\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            :content=\"\n              scope.row.createdTimestamp | moment('MMMM Do YYYY, hh:mm a')\n            \"\n            placement=\"top\"\n          >\n            <span style=\"color: red\">{{\n              scope.row.createdTimestamp | moment(\"from\")\n            }}</span>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0 && !this.showSortingOption\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { getCareer, getFilters, updateOrder } from \"@/api/career\";\nimport { ICareerData } from \"@/api/types\";\nimport Pagination from \"@/components/Pagination/index.vue\";\nimport { getQuery, formatJson } from \"@/utils/index\";\nimport { exportJson2Excel } from \"@/utils/excel\";\nimport Sortable from \"sortablejs\";\nimport Enabled from \"@/components/Enabled/index.vue\";\n\n@Component({\n  name: \"CareerList\",\n  components: {\n    Pagination,\n    Enabled,\n  },\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: ICareerData[] = [];\n  private listLoading = true;\n  newList: any = [];\n  oldList: any = [];\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  private downloadLoading = false;\n  sortable: any;\n  private listQuery = {\n    page: 1,\n    limit: 20,\n    sort: \"id,DESC\",\n    filter: {\n      enabled: \"eq\",\n      name: \"$contL\",\n    },\n  };\n\n  private showCreatedDate: boolean = false;\n  private sortOptions = [\n    { label: \"Ascending\", key: \"id,ASC\" },\n    { label: \"Descending\", key: \"id,DESC\" },\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: \"Enable\" },\n    { key: false, value: \"Disabled\" },\n  ];\n\n  private filters: any = [];\n\n  created() {\n    this.getList();\n  }\n  private source: any;\n  private async getList() {\n    try {\n      debugger;\n\n      this.listLoading = true;\n      const data: any = await getCareer(getQuery(this.listQuery));\n      this.list = data.data;\n\n      this.total = data.total;\n      this.listLoading = false;\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  private async getFilters() {\n    this.filters = await getFilters(\n      getQuery({\n        sort: \"name,ASC\",\n      })\n    );\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1;\n    this.getList();\n  }\n\n  async onPriortyChange() {\n    if (this.showSortingOption) {\n      this.fetchAllRecored(true);\n    } else {\n      this.renderComponent = false;\n      this.sortable.options.disabled = true;\n      this.$nextTick().then(() => {\n        this.renderComponent = true;\n      });\n    }\n  }\n\n  async fetchAllRecored(checkForFirstTime: boolean) {\n    try {\n      this.listLoading = true;\n      const data: any = await getCareer(\n        getQuery({\n          page: 1,\n          limit: 100000,\n          sort: \"priority,ASC\",\n          filter: {\n            enabled: \"eq\",\n            isDeleted: \"eq\",\n          },\n        })\n      );\n      this.list = data.data;\n      this.total = data.total;\n      this.listLoading = false;\n      if (checkForFirstTime) {\n        this.oldList = this.list.map((v) => v.id);\n        this.newList = this.oldList.slice();\n        this.$nextTick(this.setSort);\n      }\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  setSort() {\n    const temp: any = this.$refs.dragTable;\n    const el = temp.$el.querySelectorAll(\n      \".el-table__body-wrapper > table > tbody\"\n    )[0];\n    this.sortable = Sortable.create(el, {\n      ghostClass: \"sortable-ghost\",\n      setData: function (dataTransfer) {\n        dataTransfer.setData(\"Text\", \"\");\n      },\n      onEnd: (evt) => {\n        const targetRow = this.list.splice(Number(evt.oldIndex), 1)[0];\n        this.list.splice(Number(evt.newIndex), 0, targetRow);\n        const tempIndex = this.newList.splice(evt.oldIndex, 1)[0];\n        this.newList.splice(evt.newIndex, 0, tempIndex);\n        console.log(this.newList);\n        this.updateOrder();\n      },\n    });\n  }\n\n  private async updateOrder() {\n    try {\n      const updateCheck = await updateOrder(this.newList);\n      this.fetchAllRecored(false);\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data;\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === \"ascending\" ? \"ASC\" : \"DESC\");\n      this.handleFilter();\n    }\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort;\n    return sort === `${key},ASC`\n      ? \"ascending\"\n      : sort === `${key},DESC`\n      ? \"descending\"\n      : \"\";\n  }\n\n  private handleDownload() {\n    this.downloadLoading = true;\n    const tHeader = [\n      \"ID\",\n      \"Full Name\",\n      \"Email\",\n      \"Contact Number\",\n      \"Status\",\n      \"timestamp\",\n    ];\n    const filterVal = [\n      \"id\",\n      \"fullName\",\n      \"email\",\n      \"contactNumber\",\n      \"enabled\",\n      \"createdTimestamp\",\n    ];\n    const data = formatJson(filterVal, this.list);\n    exportJson2Excel(tHeader, data, this.$tc(\"route.Career.description\"));\n    this.downloadLoading = false;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-input {\n  padding-right: 100px;\n}\n\n.cancel-btn {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n</style>\n"]}]}