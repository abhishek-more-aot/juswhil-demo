{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/setting/components/SettingDetail.vue?vue&type=style&index=1&id=90114a3e&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/setting/components/SettingDetail.vue","mtime":1668754947378},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jcmVhdGVQb3N0LWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAuY3JlYXRlUG9zdC1tYWluLWNvbnRhaW5lciB7CiAgICBwYWRkaW5nOiA0MHB4IDQ1cHggMjBweCA1MHB4OwoKICAgIC5wb3N0SW5mby1jb250YWluZXIgewogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIEBpbmNsdWRlIGNsZWFyZml4OwogICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwoKICAgICAgLnBvc3RJbmZvLWNvbnRhaW5lci1pdGVtIHsKICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgfQogICAgfQogIH0KLmF2YXRhciB7CiAgd2lkdGg6IDQwMHB4OwogIGhlaWdodDogMjAwcHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0cmFuc2Zvcm0tb3JpZ2luOiA5NSUgNDAlOwp9CgogIC53b3JkLWNvdW50ZXIgewogICAgd2lkdGg6IDQwcHg7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMTBweDsKICAgIHRvcDogMHB4OwogIH0KfQoK"},{"version":3,"sources":["SettingDetail.vue"],"names":[],"mappings":";AAsdA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingDetail.vue","sourceRoot":"src/views/setting/components","sourcesContent":["/* eslint-disable no-sparse-arrays */\n<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        status-icon\n        :rules=\"rules\"\n        label-width=\"180px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          label=\"Version\"\n          prop=\"version\"\n          style=\"margin-bottom: 20px;width:100%\"\n        >\n          <el-input\n            v-model=\"postForm.version\"\n            name=\"version\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Version\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"App name\"\n          prop=\"appName\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.appName\"\n            name=\"appName\"\n            style=\"width:50%\"\n            required\n            placeholder=\"App name\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Share app message\"\n          prop=\"shareAppMessage\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.shareAppMessage\"\n            name=\"shareAppMessage\"\n            required\n            type=\"textarea\"\n            :rows=\"3\"\n            style=\"width:50%\"\n            placeholder=\"Share app message\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Contact number\"\n          prop=\"contactNumber\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.contactNumber\"\n            name=\"contactNumber\"\n            style=\"width:50%\"\n            :min=\"1\"\n            required\n            placeholder=\"Contact number\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Whatsapp number\"\n          prop=\"whatappNumber\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.whatappNumber\"\n            name=\"whatsappNumber\"\n            style=\"width:50%\"\n            :min=\"1\"\n            required\n            placeholder=\"Whatsapp number\"\n          />\n        </el-form-item>\n        <el-form-item\n          label=\"ios version\"\n          prop=\"iosVersion\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.iosVersion\"\n            name=\"iosVersion\"\n            style=\"width:50%\"\n            placeholder=\"ios version\"\n          />\n        </el-form-item>\n        <el-form-item\n          label=\"Playstore link\"\n          prop=\"playstoreLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.playstoreLink\"\n            name=\"playstoreLink\"\n            style=\"width:50%\"\n            placeholder=\"Playstore link\"\n          />\n        </el-form-item>\n        <el-form-item\n          label=\"Appstore link\"\n          prop=\"appstoreLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.appstoreLink\"\n            name=\"appstoreLink\"\n            required\n            style=\"width:50%\"\n            placeholder=\"Appstore link\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Aboutus link\"\n          prop=\"aboutUsLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.aboutUsLink\"\n            name=\"aboutUsLink\"\n            required\n            style=\"width:50%\"\n            placeholder=\"Aboutus link\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Contactus link\"\n          prop=\"contactUsLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.contactUsLink\"\n            name=\"contactUsLink\"\n            required\n            style=\"width:50%\"\n            placeholder=\"Contactus link\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Terms and conditions link\"\n          prop=\"termsAndConditionsLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.termsAndConditionsLink\"\n            name=\"termsAndConditionsLink\"\n            placeholder=\"Terms and conditions link\"\n            required\n            style=\"width:50%\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          label=\"Privacy policy link\"\n          prop=\"privacyPolicyLink\"\n          style=\"margin-bottom: 20px;\"\n        >\n          <el-input\n            v-model=\"postForm.privacyPolicyLink\"\n            name=\"privacyPolicyLink\"\n            required\n            placeholder=\"Privacy policy link\"\n            style=\"width:50%\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n            @click=\"submitForm\"\n          >\n            {{ $t('global.form.save') }}\n          </el-button>\n          <!-- <el-button\n            v-waves\n            type=\"reset\"\n            @click=\"resetForm\"\n          >\n            {{ $t('global.form.reset') }}\n          </el-button> -->\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { isValidURL } from '@/utils/validate'\nimport {\n  getSettingById,\n  defaultSettingData,\n  updateSetting,\n  addSetting\n} from '@/api/setting'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport { getQuery } from '../../../utils'\nimport { getCompanies } from '@/api/master/companies'\nimport Dropzone from '@/components/Dropzone/index.vue'\nimport { uploadFile } from '@/api/common'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport VueSimpleRangeSlider from 'vue-simple-range-slider'\nimport 'vue-simple-range-slider/dist/vueSimpleRangeSlider.css'\n\n@Component({\n  name: 'SettingDetail',\n  components: {\n    Dropzone,\n    AvatarUpload,\n    PanThumb,\n    VueSimpleRangeSlider\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private roleList: any = [];\n  private planList: any = [];\n  private typeList: any = [\n    'Agent',\n    'Development Officer',\n    'SBA',\n    'CLIA',\n    'Other'\n  ];\n\n   private showImageUpload = false\n  private image = 'https://wpimg.wallstcn.com/577965b9-bb9e-4e02-9f0c-095b41417191'\n  private params = { some_params: 'your_params_goes_here' }\n  private headers = { smail: '*_~' }\n\n  private countryList: any = [];\n  private stateList: any = [];\n  private cityList: any = [];\n  private planName='';\n\n  private validateRequire = (rule: any, value: string, callback: Function) => {\n    if (value === '') {\n      if (rule.field === 'imageURL') {\n        this.$message({\n          message: 'Upload cover image is required',\n          type: 'error'\n        })\n      } else {\n        this.$message({\n          message: rule.field + ' is required',\n          type: 'error'\n        })\n      }\n      callback(new Error(rule.field + ' is required'))\n    } else {\n      callback()\n    }\n  };\n\n  private postForm = Object.assign({}, defaultSettingData);\n  private loading = false;\n  private rules = {\n    version: [\n      { required: true, message: 'Version is required', trigger: 'blur' }\n    ],\n    iosVersion: [\n      { required: true, message: 'ios Version is required', trigger: 'blur' }\n    ],\n    appName: [\n      { required: true, message: 'App name is Required', trigger: 'blur' }\n\n    ],\n    whatappNumber: [\n      { required: true, message: 'Whatsapp Number is Required', trigger: 'blur' }\n\n    ],\n    playstoreLink: [\n      { required: true, message: 'Playstore link is Required', trigger: 'blur' }\n    ],\n    appstoreLink: [\n      { required: true, message: 'Appstore Link is Required', trigger: 'blur' }\n\n    ],\n    aboutUsLink: [\n      { required: true, message: 'About us Link is Required', trigger: 'blur' }\n\n    ],\n    contactUsLink: [\n      { required: true, message: 'Contact us Link is Required', trigger: 'blur' }\n\n    ],\n    termsAndConditionsLink: [\n      { required: true, message: 'Terms and conditions link is Required', trigger: 'blur' }\n\n    ],\n    privacyPolicyLink: [\n      { required: true, message: 'privacy policy link is required', trigger: 'blur' }\n\n    ],\n    shareAppMessage: [\n      { required: true, message: 'Shareapp messageis required', trigger: 'blur' }\n\n    ],\n    contactNumber: [\n      { required: true, message: 'Max video length is required', trigger: 'blur' },\n      {\n        trigger: ['blur', 'change'],\n        pattern: '[123456789][0-9]*$',\n        message: 'Mobile number should contain number only'\n      },\n      {\n        max: 10,\n        min: 10,\n        message: 'Length should be of 10 Digits',\n        trigger: ['blur', 'change']\n      }\n\n    ]\n\n  };\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  // get filteredStates() {\n  //   return this.stateList\n  //     .filter\n  //     // (p: any) => p.countryId === this.postForm.countryId\n  //     ()\n  // }\n\n  // get filteredCities() {\n  //   return this.cityList\n  //     .filter\n  //     // (p: any) =>\n  //     // p.countryId === this.postForm.countryId &&\n  //     // p.stateId === this.postForm.stateId\n  //     ()\n  // }\n\n  created() {\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt('1'))\n    } else {\n      this.postForm = Object.assign({}, defaultSettingData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getSettingById(id)\n      this.postForm = data\n      // Just for test\n      //  const title = this.postForm.email\n      // Set tagsview title\n      //  this.setTagsViewTitle(title)\n      // Set page title\n      //  this.setPageTitle(title)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        console.error('Submit Error!')\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields()\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        await updateSetting(this.postForm.id, this.postForm)\n      } else {\n        await addSetting(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Setting saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/dashboard')\n    } catch (err) {\n      this.loading = false\n      console.error(err)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n    border-bottom: 1px solid #bfcbd9;\n  }\n\n}\n.secs{\n margin:10px;\n}\n\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n.avatar {\n  width: 400px;\n  height: 200px;\n  border-radius: 50%;\n  position: absolute;\n  transform-origin: 95% 40%;\n}\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n\n</style>\n"]}]}