{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/state/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/state/list.vue","mtime":1668755873177},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCB7CiAgYWRkc3RhdGUsCiAgZGVsZXRlc3RhdGUsCiAgZ2V0c3RhdGUsCiAgZ2V0c3RhdGVCeUlkLAogIGdldHN0YXRlQ291bnQsCiAgdXBkYXRlc3RhdGUsCn0gZnJvbSAiQC9hcGkvc3RhdGUiOwppbXBvcnQgeyBnZXRBZG1pbkJ5SWQgfSBmcm9tICJAL2FwaS9hZG1pbnMiOwppbXBvcnQgeyBJU3RhdGVEYXRhIH0gZnJvbSAiQC9hcGkvdHlwZXMiOwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICJAL2NvbXBvbmVudHMvUGFnaW5hdGlvbi9pbmRleC52dWUiOwppbXBvcnQgeyBnZXRRdWVyeSwgZm9ybWF0SnNvbiB9IGZyb20gIkAvdXRpbHMvaW5kZXgiOwppbXBvcnQgeyBleHBvcnRKc29uMkV4Y2VsIH0gZnJvbSAiQC91dGlscy9leGNlbCI7CmltcG9ydCBTb3J0YWJsZSBmcm9tICJzb3J0YWJsZWpzIjsKaW1wb3J0IEVuYWJsZWQgZnJvbSAiQC9jb21wb25lbnRzL0VuYWJsZWQvaW5kZXgudnVlIjsKCkBDb21wb25lbnQoewogIG5hbWU6ICJzdGF0ZUxpc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb24sCiAgICBFbmFibGVkLAogIH0sCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIHRhYmxlS2V5ID0gMDsKICBwcml2YXRlIHRvdGFsID0gMDsKICBwcml2YXRlIGxpc3Q6IElTdGF0ZURhdGFbXSA9IFtdOwogIHByaXZhdGUgbGlzdExvYWRpbmcgPSB0cnVlOwogIHByaXZhdGUgZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgbmV3TGlzdDogYW55ID0gW107CiAgb2xkTGlzdDogYW55ID0gW107CiAgcHJpdmF0ZSBzaG93U29ydGluZ09wdGlvbjogYm9vbGVhbiA9IGZhbHNlOwogIHByaXZhdGUgcmVuZGVyQ29tcG9uZW50OiBib29sZWFuID0gdHJ1ZTsKICBwcml2YXRlIHNob3dDcmVhdGVkRGF0ZSA9IGZhbHNlOwoKICBwcml2YXRlIGxpc3RRdWVyeSA9IHsKICAgIHBhZ2U6IDEsCiAgICBsaW1pdDogMTAsCiAgICBzb3J0OiAiaWQsREVTQyIsCiAgICBlbmFibGVkOnRydWUsCiAgICBmaWx0ZXI6IHsKICAgICAgbmFtZTogIiRjb250TCIsCiAgICAgIGVuYWJsZWQ6ICJlcSIsCiAgICB9LAogIH07CgogIHByaXZhdGUgc29ydE9wdGlvbnMgPSBbCiAgICB7IGxhYmVsOiAiQXNjZW5kaW5nIiwga2V5OiAiaWQsQVNDIiB9LAogICAgeyBsYWJlbDogIkRlc2NlbmRpbmciLCBrZXk6ICJpZCxERVNDIiB9LAogIF07CgogIC8vIHByaXZhdGUgdmlzaWJpbGl0eU9wdGlvbnMgPSBbCiAgLy8gICB7IGtleTogdHJ1ZSwgdmFsdWU6ICdPbicgfSwKICAvLyAgIHsga2V5OiBmYWxzZSwgdmFsdWU6ICdPZmYnIH0KICAvLyBdOwoKICBwcml2YXRlIGVuYWJsZVR5cGVPcHRpb25zID0gWwogICAgeyBrZXk6IHRydWUsIHZhbHVlOiAiRW5hYmxlIiB9LAogICAgeyBrZXk6IGZhbHNlLCB2YWx1ZTogIkRpc2FibGVkIiB9LAogIF07CgogIHNvcnRhYmxlOiBhbnk7CgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9CgogIHByaXZhdGUgYXN5bmMgZ2V0TGlzdCgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRzdGF0ZShnZXRRdWVyeSh0aGlzLmxpc3RRdWVyeSkpOwogICAgICB0aGlzLmxpc3QgPSBkYXRhLmRhdGE7CiAgICAgIAogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsKICAgICAgCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0KICB9CgogIHByaXZhdGUgZ2V0U29ydENsYXNzKGtleTogc3RyaW5nKSB7CiAgICBjb25zdCBzb3J0ID0gdGhpcy5saXN0UXVlcnkuc29ydDsKICAgIHJldHVybiBzb3J0ID09PSBgJHtrZXl9LEFTQ2AKICAgICAgPyAiYXNjZW5kaW5nIgogICAgICA6IHNvcnQgPT09IGAke2tleX0sREVTQ2AKICAgICAgPyAiZGVzY2VuZGluZyIKICAgICAgOiAiIjsKICB9CgogIHByaXZhdGUgc29ydENoYW5nZShkYXRhOiBhbnkpIHsKICAgIGNvbnN0IHsgcHJvcCwgb3JkZXIgfSA9IGRhdGE7CiAgICBpZiAocHJvcCkgewogICAgICB0aGlzLmxpc3RRdWVyeS5zb3J0ID0KICAgICAgICBgJHtwcm9wfSxgICsgKG9yZGVyID09PSAiYXNjZW5kaW5nIiA/ICJBU0MiIDogIkRFU0MiKTsKICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKTsKICAgIH0KICB9CgogIHByaXZhdGUgYXN5bmMgdmlzaWJpbHR5VXBkYXRlKGlkOiBudW1iZXIsIHZpc2liaWxpdHk6IGFueSkgewogICAgY29uc3QgZGF0YTogYW55ID0gYXdhaXQgZ2V0c3RhdGVCeUlkKGlkKTsKICAgIGRhdGEudmlzaWJpbGl0eSA9IHZpc2liaWxpdHk7CiAgICB1cGRhdGVzdGF0ZShpZCwgZGF0YSk7CiAgfQoKICBwcml2YXRlIGhhbmRsZUZpbHRlcigpIHsKICAgIHRoaXMubGlzdFF1ZXJ5LnBhZ2UgPSAxOwogICAgdGhpcy5nZXRMaXN0KCk7CiAgfQoKICBwcml2YXRlIGhhbmRsZURlbGV0ZShkYXRhOiBhbnkpIHsKICAgIGlmIChkYXRhKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oCiAgICAgICAgdGhpcy4kdGMoInRhYmxlLmRlbGV0ZUNvbmZpcm1hdGlvbiIsIHVuZGVmaW5lZCwgeyBuYW1lOiBkYXRhLm5hbWUgfSksCiAgICAgICAgdGhpcy4kdGMoInRhYmxlLmRlbGV0ZSIpLAogICAgICAgIHsKICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLiR0YygidGFibGUuZGVsZXRlIiksCiAgICAgICAgICBjb25maXJtQnV0dG9uQ2xhc3M6ICJlbC1idXR0b24tLWRhbmdlciIsCiAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAiQ2FuY2VsIiwKICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgfQogICAgICApCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgZGVsZXRlc3RhdGUoZGF0YS5pZCkudGhlbigoZGVsZXRlZCkgPT4gewogICAgICAgICAgICB0aGlzLmdldExpc3QoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKCgpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuJHRjKCJ0YWJsZS5kZWxldGVDYW5jZWxlZCIpLAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9CiAgfQoKICBwcml2YXRlIGFzeW5jIGdldEFsbExpc3QoKSB7CiAgICB0cnkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgY29uc3QgZGF0YTogYW55ID0gYXdhaXQgZ2V0c3RhdGUoZ2V0UXVlcnkodGhpcy5saXN0UXVlcnkpKTsKICAgICAgdGhpcy5saXN0ID0gZGF0YS5kYXRhOwogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfQogIH0KCiAgYXN5bmMgb25QcmlvcnR5Q2hhbmdlKCkgewogICAgaWYgKHRoaXMuc2hvd1NvcnRpbmdPcHRpb24pIHsKICAgICAgdGhpcy5mZXRjaEFsbFJlY29yZWQodHJ1ZSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnJlbmRlckNvbXBvbmVudCA9IGZhbHNlOwogICAgICB0aGlzLnNvcnRhYmxlLm9wdGlvbnMuZGlzYWJsZWQgPSB0cnVlOwogICAgICB0aGlzLiRuZXh0VGljaygpLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMucmVuZGVyQ29tcG9uZW50ID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9CiAgfQoKICBhc3luYyBmZXRjaEFsbFJlY29yZWQoY2hlY2tGb3JGaXJzdFRpbWU6IGJvb2xlYW4pIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRzdGF0ZSgKICAgICAgICBnZXRRdWVyeSh7CiAgICAgICAgICBwYWdlOiAxLAogICAgICAgICAgbGltaXQ6IDEwMDAwMCwKICAgICAgICAgIHNvcnQ6ICJwcmlvcml0eSxBU0MiLAogICAgICAgICAgZmlsdGVyOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6ICJlcSIsCiAgICAgICAgICB9LAogICAgICAgIH0pCiAgICAgICk7CiAgICAgIHRoaXMubGlzdCA9IGRhdGEuZGF0YTsKICAgICAgdGhpcy50b3RhbCA9IGRhdGEudG90YWw7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgaWYgKGNoZWNrRm9yRmlyc3RUaW1lKSB7CiAgICAgICAgdGhpcy5vbGRMaXN0ID0gdGhpcy5saXN0Lm1hcCgodikgPT4gdi5pZCk7CiAgICAgICAgdGhpcy5uZXdMaXN0ID0gdGhpcy5vbGRMaXN0LnNsaWNlKCk7CiAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5zZXRTb3J0KTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgfQogIH0KCiAgc2V0U29ydCgpIHsKICAgIGNvbnN0IHRlbXA6IGFueSA9IHRoaXMuJHJlZnMuZHJhZ1RhYmxlOwogICAgY29uc3QgZWwgPSB0ZW1wLiRlbC5xdWVyeVNlbGVjdG9yQWxsKAogICAgICAiLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIgPiB0YWJsZSA+IHRib2R5IgogICAgKVswXTsKICAgIHRoaXMuc29ydGFibGUgPSBTb3J0YWJsZS5jcmVhdGUoZWwsIHsKICAgICAgZ2hvc3RDbGFzczogInNvcnRhYmxlLWdob3N0IiwKICAgICAgc2V0RGF0YTogZnVuY3Rpb24gKGRhdGFUcmFuc2ZlcikgewogICAgICAgIGRhdGFUcmFuc2Zlci5zZXREYXRhKCJUZXh0IiwgIiIpOwogICAgICB9LAogICAgICBvbkVuZDogKGV2dCkgPT4gewogICAgICAgIGNvbnN0IHRhcmdldFJvdyA9IHRoaXMubGlzdC5zcGxpY2UoTnVtYmVyKGV2dC5vbGRJbmRleCksIDEpWzBdOwogICAgICAgIHRoaXMubGlzdC5zcGxpY2UoTnVtYmVyKGV2dC5uZXdJbmRleCksIDAsIHRhcmdldFJvdyk7CiAgICAgICAgY29uc3QgdGVtcEluZGV4ID0gdGhpcy5uZXdMaXN0LnNwbGljZShldnQub2xkSW5kZXgsIDEpWzBdOwogICAgICAgIHRoaXMubmV3TGlzdC5zcGxpY2UoZXZ0Lm5ld0luZGV4LCAwLCB0ZW1wSW5kZXgpOwogICAgICB9LAogICAgfSk7CiAgfQoKICBwcml2YXRlIGFzeW5jIGhhbmRsZURvd25sb2FkKHBhaWQ6IGJvb2xlYW4pIHsKICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZTsKICAgIGNvbnN0IGZsaXRlckRhdGE6IGFueSA9IFtdOwogICAgY29uc3QgcGFnZSA9IHRoaXMubGlzdFF1ZXJ5LnBhZ2U7CiAgICBjb25zdCBsaW1pdCA9IHRoaXMubGlzdFF1ZXJ5LmxpbWl0OwogICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDE7CiAgICB0aGlzLmxpc3RRdWVyeS5saW1pdCA9IDEwMDAwMDsKCiAgICBjb25zdCBkYXRhQWxsOiBhbnkgPSBhd2FpdCBnZXRzdGF0ZShnZXRRdWVyeSh0aGlzLmxpc3RRdWVyeSkpOwogICAgY29uc3QgbGlzdEFsbDogSVN0YXRlRGF0YVtdID0gZGF0YUFsbC5kYXRhOwoKICAgIHRoaXMubGlzdFF1ZXJ5LnBhZ2UgPSBwYWdlOwogICAgdGhpcy5saXN0UXVlcnkubGltaXQgPSBsaW1pdDsKICAgIGNvbnN0IHRIZWFkZXIgPSBbCiAgICAgICJpZCIsCiAgICAgICJmdWxsTmFtZSIsCiAgICAgICJlbWFpbCIsCiAgICAgICJjb250YWN0TnVtYmVyIiwKICAgICAgInR5cGUiLAogICAgICAiaXNNb250aGx5TmV3c2xldHRlciIsCiAgICAgICJwbGFuRXhpcGlyeURhdGUiLAogICAgXTsKICAgIGNvbnN0IGZpbHRlclZhbCA9IFsKICAgICAgImlkIiwKICAgICAgImZ1bGxOYW1lIiwKICAgICAgImVtYWlsIiwKICAgICAgImNvbnRhY3ROdW1iZXIiLAogICAgICAidHlwZSIsCiAgICAgICJpc01vbnRobHlOZXdzbGV0dGVyIiwKICAgICAgInBsYW5FeGlwaXJ5RGF0ZSIsCiAgICBdOwogICAgY29uc3QgZGF0YSA9IGZvcm1hdEpzb24oZmlsdGVyVmFsLCBmbGl0ZXJEYXRhKTsKICAgIGV4cG9ydEpzb24yRXhjZWwoCiAgICAgIHRIZWFkZXIsCiAgICAgIGRhdGEsCiAgICAgIHRoaXMuJHRjKCJyb3V0ZS51c2VyTWFuYWdlbWVudC56aXBjb2RlLnRpdGxlIikKICAgICk7CiAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IGZhbHNlOwogIH0KfQo="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AA+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/state","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.name\"\n        placeholder=\"State Name\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @input=\"handleFilter\"\n      />\n      <el-select\n        v-model=\"listQuery.sort\"\n        style=\"width: 140px\"\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in sortOptions\"\n          :key=\"item.key\"\n          :label=\"item.label\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <el-select\n        v-model=\"listQuery.enabled\"\n        :placeholder=\"$t('admin.enabled')\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 130px\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in enableTypeOptions\"\n          :key=\"item.key\"\n          :label=\"item.value\"\n          :value=\"item.key\"\n        />\n      </el-select>\n\n      <el-button\n        v-waves\n        class=\"filter-item\"\n        type=\"primary\"\n        icon=\"el-icon-search\"\n        @click=\"handleFilter\"\n      >\n        {{ $t(\"table.search\") }}\n      </el-button>\n\n      <router-link :to=\"'/state/add'\" class=\"margin-horizontal\">\n        <el-button\n          v-waves\n          class=\"filter-item\"\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n        >\n          {{ $t(\"global.form.add\") }}\n        </el-button>\n      </router-link>\n      <!-- <el-checkbox\n        v-model=\"showSortingOption\"\n        class=\"filter-item\"\n        style=\"margin-left:15px;\"\n        @change=\"onPriortyChange()\"\n      >\n        Change Priority\n      </el-checkbox> -->\n      <!-- <el-checkbox\n        v-model=\"showCreatedDate\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"tableKey = tableKey + 1\"\n      >\n        {{ $t(\"table.createdDate\") }}\n      </el-checkbox> -->\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      row-key=\"id\"\n      highlight-current-row\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        sortable=\"custom\"\n        width=\"250\"\n        align=\"center\"\n        :label=\"$t('table.id')\"\n        prop=\"id\"\n        :class-name=\"getSortClass('id')\"\n      />\n      <el-table-column\n        width=\"200\"\n        align=\"center\"\n        label=\"Enabled/Disabled\"\n        prop=\"\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"Enable/Disable\"\n            placement=\"top-start\"\n          >\n            <enabled\n              :key=\"scope.row.id\"\n              v-model=\"scope.row.enabled\"\n              :url=\"'/states/' + scope.row.id\"\n            />\n          </el-tooltip>\n        </template>\n      </el-table-column>\n      <el-table-column width=\"auto\" align=\"center\" label=\"States Name\" prop=\"\">\n        <template slot-scope=\"scope\">\n          <router-link\n          style=\"color: red\" :to=\" '/cities/list/' + scope.row.id\">\n            <u>{{ scope.row.name }}</u>\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column\n        align=\"center\"\n        :label=\"$t('table.actions')\"\n        width=\"250\"\n        class-name=\"fixed-width\"\n      >\n        <template slot-scope=\"scope\">\n          <router-link :to=\"'/state/edit/' + scope.row.id\">\n            <el-button\n              type=\"warning\"\n              size=\"small\"\n              icon=\"el-icon-edit\"\n            /> </router-link\n          >&nbsp;\n          <!-- <el-button\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n          /> -->\n        </template>\n      </el-table-column>\n      <!-- <el-table-column\n        v-if=\"showCreatedDate\"\n        :label=\"$t('table.createdDate')\"\n        width=\"auto\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <span style=\"color: red\">{{\n            scope.row.createdTimestamp | moment(\"from\")\n          }}</span\n          ><br />\n          <span>( {{ scope.row.createdByFullName }} )</span>\n        </template>\n      </el-table-column> -->\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0 && !this.showSortingOption\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n      style=\"text-align: center\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport {\n  addstate,\n  deletestate,\n  getstate,\n  getstateById,\n  getstateCount,\n  updatestate,\n} from \"@/api/state\";\nimport { getAdminById } from \"@/api/admins\";\nimport { IStateData } from \"@/api/types\";\nimport Pagination from \"@/components/Pagination/index.vue\";\nimport { getQuery, formatJson } from \"@/utils/index\";\nimport { exportJson2Excel } from \"@/utils/excel\";\nimport Sortable from \"sortablejs\";\nimport Enabled from \"@/components/Enabled/index.vue\";\n\n@Component({\n  name: \"stateList\",\n  components: {\n    Pagination,\n    Enabled,\n  },\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IStateData[] = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  newList: any = [];\n  oldList: any = [];\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  private showCreatedDate = false;\n\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: \"id,DESC\",\n    enabled:true,\n    filter: {\n      name: \"$contL\",\n      enabled: \"eq\",\n    },\n  };\n\n  private sortOptions = [\n    { label: \"Ascending\", key: \"id,ASC\" },\n    { label: \"Descending\", key: \"id,DESC\" },\n  ];\n\n  // private visibilityOptions = [\n  //   { key: true, value: 'On' },\n  //   { key: false, value: 'Off' }\n  // ];\n\n  private enableTypeOptions = [\n    { key: true, value: \"Enable\" },\n    { key: false, value: \"Disabled\" },\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList();\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true;\n      const data: any = await getstate(getQuery(this.listQuery));\n      this.list = data.data;\n      \n      this.total = data.total;\n      \n      this.listLoading = false;\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort;\n    return sort === `${key},ASC`\n      ? \"ascending\"\n      : sort === `${key},DESC`\n      ? \"descending\"\n      : \"\";\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data;\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === \"ascending\" ? \"ASC\" : \"DESC\");\n      this.handleFilter();\n    }\n  }\n\n  private async visibiltyUpdate(id: number, visibility: any) {\n    const data: any = await getstateById(id);\n    data.visibility = visibility;\n    updatestate(id, data);\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1;\n    this.getList();\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        this.$tc(\"table.deleteConfirmation\", undefined, { name: data.name }),\n        this.$tc(\"table.delete\"),\n        {\n          confirmButtonText: this.$tc(\"table.delete\"),\n          confirmButtonClass: \"el-button--danger\",\n          cancelButtonText: \"Cancel\",\n          type: \"error\",\n        }\n      )\n        .then(() => {\n          deletestate(data.id).then((deleted) => {\n            this.getList();\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: this.$tc(\"table.deleteCanceled\"),\n          });\n        });\n    }\n  }\n\n  private async getAllList() {\n    try {\n      this.listLoading = true;\n      const data: any = await getstate(getQuery(this.listQuery));\n      this.list = data.data;\n      this.total = data.total;\n      this.listLoading = false;\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  async onPriortyChange() {\n    if (this.showSortingOption) {\n      this.fetchAllRecored(true);\n    } else {\n      this.renderComponent = false;\n      this.sortable.options.disabled = true;\n      this.$nextTick().then(() => {\n        this.renderComponent = true;\n      });\n    }\n  }\n\n  async fetchAllRecored(checkForFirstTime: boolean) {\n    try {\n      this.listLoading = true;\n      const data: any = await getstate(\n        getQuery({\n          page: 1,\n          limit: 100000,\n          sort: \"priority,ASC\",\n          filter: {\n            enabled: \"eq\",\n          },\n        })\n      );\n      this.list = data.data;\n      this.total = data.total;\n      this.listLoading = false;\n      if (checkForFirstTime) {\n        this.oldList = this.list.map((v) => v.id);\n        this.newList = this.oldList.slice();\n        this.$nextTick(this.setSort);\n      }\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  setSort() {\n    const temp: any = this.$refs.dragTable;\n    const el = temp.$el.querySelectorAll(\n      \".el-table__body-wrapper > table > tbody\"\n    )[0];\n    this.sortable = Sortable.create(el, {\n      ghostClass: \"sortable-ghost\",\n      setData: function (dataTransfer) {\n        dataTransfer.setData(\"Text\", \"\");\n      },\n      onEnd: (evt) => {\n        const targetRow = this.list.splice(Number(evt.oldIndex), 1)[0];\n        this.list.splice(Number(evt.newIndex), 0, targetRow);\n        const tempIndex = this.newList.splice(evt.oldIndex, 1)[0];\n        this.newList.splice(evt.newIndex, 0, tempIndex);\n      },\n    });\n  }\n\n  private async handleDownload(paid: boolean) {\n    this.downloadLoading = true;\n    const fliterData: any = [];\n    const page = this.listQuery.page;\n    const limit = this.listQuery.limit;\n    this.listQuery.page = 1;\n    this.listQuery.limit = 100000;\n\n    const dataAll: any = await getstate(getQuery(this.listQuery));\n    const listAll: IStateData[] = dataAll.data;\n\n    this.listQuery.page = page;\n    this.listQuery.limit = limit;\n    const tHeader = [\n      \"id\",\n      \"fullName\",\n      \"email\",\n      \"contactNumber\",\n      \"type\",\n      \"isMonthlyNewsletter\",\n      \"planExipiryDate\",\n    ];\n    const filterVal = [\n      \"id\",\n      \"fullName\",\n      \"email\",\n      \"contactNumber\",\n      \"type\",\n      \"isMonthlyNewsletter\",\n      \"planExipiryDate\",\n    ];\n    const data = formatJson(filterVal, fliterData);\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc(\"route.userManagement.zipcode.title\")\n    );\n    this.downloadLoading = false;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-input {\n  padding-right: 100px;\n}\n\n.cancel-btn {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n</style>\n"]}]}