{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/admin/components/AdminDetail.vue?vue&type=style&index=1&id=47f4bb41&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/admin/components/AdminDetail.vue","mtime":1673512540947},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jcmVhdGVQb3N0LWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAuY3JlYXRlUG9zdC1tYWluLWNvbnRhaW5lciB7CiAgICBwYWRkaW5nOiA0MHB4IDQ1cHggMjBweCA1MHB4OwoKICAgIC5wb3N0SW5mby1jb250YWluZXIgewogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIEBpbmNsdWRlIGNsZWFyZml4OwogICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwoKICAgICAgLnBvc3RJbmZvLWNvbnRhaW5lci1pdGVtIHsKICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgfQogICAgfQogIH0KCiAgLndvcmQtY291bnRlciB7CiAgICB3aWR0aDogNDBweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAxMHB4OwogICAgdG9wOiAwcHg7CiAgfQp9CgoucGFuOmhvdmVyIHsgb3BhY2l0eTogMX0K"},{"version":3,"sources":["AdminDetail.vue"],"names":[],"mappings":";AA4dA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"AdminDetail.vue","sourceRoot":"src/views/admin/components","sourcesContent":["<template>\n  <div class=\"form-block\">\n    <div class=\"source\">\n      <el-form\n        ref=\"postForm\"\n        :model=\"postForm\"\n        status-icon\n        :rules=\"rules\"\n        label-width=\"160px\"\n        class=\"demo-form\"\n        label-position=\"left\"\n      >\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Enabled\"\n          prop=\"enabled\"\n        >\n          <el-switch v-model=\"postForm.enabled\" />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Full Name\"\n          prop=\"fullName\"\n        >\n          <el-input\n            v-model=\"postForm.fullName\"\n            name=\"fullName\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Full Name\"\n            maxlength=\"30\"\n           \n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Email\"\n          prop=\"email\"\n        >\n          <el-input\n            v-model=\"postForm.email\"\n            name=\"email\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Email\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Gender\"\n          prop=\"gender\"\n        >\n          <el-select\n            v-model=\"postForm.gender\"\n            name=\"gender\"\n            style=\"width:50%\"\n            placeholder=\"Select\"\n          >\n            <el-option\n              v-for=\"item in genderList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Mobile Number\"\n          prop=\"contactNumber\"\n        >\n          <el-input\n            v-model=\"postForm.contactNumber\"\n            name=\"contactNumber\"\n            style=\"width:50%\"\n            required\n            placeholder=\"Mobile Number\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          v-if=\"!isEdit\"\n          style=\"margin-bottom: 20px;\"\n          label=\"Password\"\n          prop=\"password\"\n        >\n          <el-input\n            v-model=\"postForm.password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            style=\"width:50%\"\n            show-password\n            name=\"password\"\n          />\n        </el-form-item>\n\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Role\"\n          prop=\"adminsRoleId\"\n        >\n          <el-select\n            v-model=\"postForm.adminsRoleId\"\n            name=\"adminsRoleId\"\n            style=\"width:50%\"\n            placeholder=\"Select\"\n          >\n            <el-option\n              v-for=\"item in roleList\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item\n          style=\"margin-bottom: 20px;\"\n          label=\"Profile\"\n          prop=\"profile\"\n        >\n          <pan-thumb\n            :image=\"image\"\n          /><br>\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-upload\"\n            tyle=\"position: absolute;bottom: 15px;margin-left: 40px;\"\n            @click=\"toggleShow\"\n          >\n            Change Avatar\n          </el-button> <span style=\"font-weight:500\"> (Minimum required resolution : 300*300)</span>\n          <avatar-upload\n            v-model=\"showImageUpload\"\n            field=\"file\"\n            @crop-success=\"cropSuccess\"\n            @close=\"onClose\"\n            @crop-upload-success=\"onCropUploadSuccess\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button\n            v-loading=\"loading\"\n            v-waves\n            type=\"success\"\n            style=\"background:#59b6e3;border:1px solid #59b6e3 \"\n            @click=\"submitForm\"\n          >\n            {{ $t('global.form.save') }}\n          </el-button>\n          <el-button\n            v-waves\n            type=\"reset\"\n            @click=\"resetForm\"\n          >\n            {{ $t('global.form.reset') }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport {\n  getAdminById,\n  defaultAdminData,\n  updateAdmin,\n  register\n} from '@/api/admins'\nimport { AppModule } from '@/store/modules/app'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Avatar, Form } from 'element-ui'\nimport router from './../../../router'\nimport { Action } from 'vuex-module-decorators'\nimport { getAdminsRoles } from '@/api/adminsRoles'\nimport { getQuery } from '../../../utils'\nimport { uploadFile } from '@/api/common'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport { AdminModule } from '../../../store/modules/admin'\n@Component({\n  name: 'AdminDetail',\n  components: {\n    AvatarUpload,\n    PanThumb\n  }\n})\nexport default class extends Vue {\n  @Prop({ default: false }) private isEdit!: boolean;\n  private roleList: any = [];\n  private postForm = Object.assign({}, defaultAdminData);\n  private myRole = AdminModule.roles;\n  private loading = false;\n  private image = 'https://via.placeholder.com/300'\n  private showImageUpload = false\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private genderList = [\n    { label: 'Female', value: 0 },\n    { label: 'Male', value: 1 },\n    { label: 'Others', value: 2}\n  ];\n\n  private rules = {\n    fullName: [\n      {\n        required: true,\n        message: 'Please enter full name',\n        trigger: ['blur', 'change']\n      },\n      { min: 3, message: 'Length should be greater than 3', trigger: ['blur', 'change'] },\n      {\n        pattern: '^[a-zA-Z ]*$',\n        message: 'Name should contain characters only',\n        trigger: ['blur', 'change']\n      },\n      {\n        pattern: '^[a-zA-Z]{4,}(?: [a-zA-Z]+)?(?: [a-zA-Z]+)?$',\n        message: 'Spaces are not allowed',\n        trigger: ['blur', 'change']\n      }\n    ],\n    contactNumber: [\n      {\n        required: true,\n        message: 'Please enter mobile number',\n        trigger: 'blur'\n      },\n      {\n        trigger: ['blur', 'change'],\n        pattern: '^[0-9]{10}$',\n        message: 'Mobile number should contain number only'\n      },\n      {\n        max: 10,\n        min: 10,\n        message: 'Length should be of 10 Digits',\n        trigger: ['blur', 'change']\n      }\n    ],\n    email: [\n      {\n        required: true,\n        message: 'please enter e-mail',\n        trigger: 'blur'\n      },\n      {\n        min: 10,\n        max: 50,\n        pattern : '^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$',\n        message: 'please enter correct email address',\n        trigger: ['blur', 'change']\n      },\n      {\n        type: 'email',\n        message: 'Please enter correct email address',\n        trigger: ['blur', 'change']\n      }\n    ],\n    password: [\n      {\n        required: true,\n        message: 'Please enter password',\n        trigger: 'blur'\n      },\n       {\n        min: 8,\n        max: 15,\n        message: 'Length should be 8 to 15',\n        trigger: ['blur', 'change']\n      },\n      // {\n      //   pattern: \"^\\w[a-zA-Z@#0-9.]*$\",\n      //   message: 'Password should not contain space at start',\n      //   trigger: ['blur', 'change']\n      // }\n    ],\n\n    adminsRoleId: [\n      {\n        required: true,\n        message: 'Please select your role',\n        trigger: ['blur', 'change']\n      }\n    ],\n    gender: [\n      {\n        required: true,\n        message: 'Please select gender',\n        trigger: ['blur', 'change']\n      }\n    ],\n    profile : [\n      {\n        required: false,\n        message: 'Please Choose a Image',\n        trigger: ['blur', 'change']\n      }\n    ]\n  };\n\n  private tempTagView?: ITagView;\n\n  get lang() {\n    return AppModule.language\n  }\n\n  created() {\n    this.fetchRoles()\n    if (this.isEdit) {\n      const id = this.$route.params && this.$route.params.id\n      this.fetchData(parseInt(id))\n    } else {\n      this.postForm = Object.assign({}, defaultAdminData)\n    }\n    // Why need to make a copy of this.$route here?\n    // Because if you enter this page and quickly switch tag, may be in the execution of this.setTagsViewTitle function, this.$route is no longer pointing to the current page\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\n    this.tempTagView = Object.assign({}, this.$route)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getAdminById(id)\n      this.postForm = data\n      this.image = data.avatar\n      const title = this.postForm.email\n      // Set tagsview title\n      this.setTagsViewTitle(title)\n      // Set page title\n      this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private async fetchRoles() {\n    try {\n      var role = this.myRole[0]\n      if (role === 'superadmin') {\n        this.roleList = await getAdminsRoles(\n          getQuery({\n            enabled: true,\n            sort: 'name,ASC',\n            filter: {\n              enabled: 'eq'\n            }\n          })\n        )\n      }\n\n      if (role === 'Admin') {\n        this.roleList = await getAdminsRoles(\n          getQuery({\n            enabled: true,\n            sort: 'name,ASC',\n            id: 3,\n            filter: {\n              enabled: 'eq',\n              id: 'eq'\n            }\n          }))\n      }\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.avatar = res\n        })\n      })\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private submitForm() {\n    if (this.postForm.avatar === '') {\n      this.postForm.avatar = this.image\n    }\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  private resetForm() {\n    (this.$refs.postForm as Form).resetFields()\n    this.image = 'https://via.placeholder.com/300x300'\n    this.postForm.avatar = ''\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.loading = true\n      if (this.isEdit) {\n        this.postForm.adminsRole.id = this.postForm.adminsRoleId\n        // delete this.postForm.password\n        await updateAdmin(this.postForm.id, this.postForm)\n      } else {\n        if (this.postForm.avatar === '') { this.postForm.avatar = this.image }\n        delete this.postForm.adminsRole\n        await register(this.postForm)\n      }\n\n      this.$notify({\n        title: 'Success',\n        message: 'Admin saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      router.push('/admins/list')\n    } catch (err) {\n      this.loading = false\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n.admin-textarea {\n  textarea {\n    padding-right: 40px;\n    resize: none;\n    border: none;\n    border-radius: 0px;\n    border-bottom: 1px solid $textAreaBottom;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.createPost-container {\n  position: relative;\n\n  .createPost-main-container {\n    padding: 40px 45px 20px 50px;\n\n    .postInfo-container {\n      position: relative;\n      @include clearfix;\n      margin-bottom: 10px;\n\n      .postInfo-container-item {\n        float: left;\n      }\n    }\n  }\n\n  .word-counter {\n    width: 40px;\n    position: absolute;\n    right: 10px;\n    top: 0px;\n  }\n}\n\n.pan:hover { opacity: 1}\n</style>\n"]}]}