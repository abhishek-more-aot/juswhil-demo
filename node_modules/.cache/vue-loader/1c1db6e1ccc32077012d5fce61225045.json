{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/dashboard/admin/components/PanelGroup.vue?vue&type=template&id=48c369af&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/dashboard/admin/components/PanelGroup.vue","mtime":1672208674897},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGVsLXJvdwogICAgdi1pZj0idGhpcy5teVJvbGUgPT0gJ3N1cGVyYWRtaW4nIgogICAgOmd1dHRlcj0iNDAiCiAgICBjbGFzcz0icGFuZWwtZ3JvdXAiCiAgPgogICAgPCEtLSA8ZWwtY29sCiAgICAgIDp4cz0iMTIiCiAgICAgIDpzbT0iMTIiCiAgICAgIDpsZz0iNiIKICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtY29sIgogICAgPgogICAgICA8cm91dGVyLWxpbmsKICAgICAgICA6dG89IicvdXNlci9saXN0JyIKICAgICAgICBjbGFzcz0ibWFyZ2luLWhvcml6b250YWwiCiAgICAgID4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbCIKICAgICAgICAgIEBjbGljaz0iaGFuZGxlU2V0TGluZUNoYXJ0RGF0YSgncHVyY2hhc2VzJykiCiAgICAgICAgPgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC1pY29uLXdyYXBwZXIgaWNvbi1tb25leSI+CiAgICAgICAgICAgIDx1bmljb24KICAgICAgICAgICAgICBuYW1lPSJ1c2Vycy1hbHQiCiAgICAgICAgICAgICAgaGVpZ2h0PSI1MCIKICAgICAgICAgICAgICB3aWR0aD0iNTAiCiAgICAgICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtaWNvbiIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtdGV4dCI+CiAgICAgICAgICAgICAgRGlzdHJpYnV0b3JzCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8Y291bnQtdG8KICAgICAgICAgICAgICA6c3RhcnQtdmFsPSIwIgogICAgICAgICAgICAgIDplbmQtdmFsPSJEaXN0cmlidXRvckNvdW50IgogICAgICAgICAgICAgIDpkdXJhdGlvbj0iMzIwMCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1udW0iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9yb3V0ZXItbGluaz4KICAgIDwvZWwtY29sPiAtLT4KCiAgICA8ZWwtY29sCiAgICAgIDp4cz0iMTIiCiAgICAgIDpzbT0iMTIiCiAgICAgIDpsZz0iNiIKICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtY29sIgogICAgPgogICAgICA8cm91dGVyLWxpbmsKICAgICAgICA6dG89IicvYWRtaW5zL2xpc3QnIgogICAgICAgIGNsYXNzPSJtYXJnaW4taG9yaXpvbnRhbCIKICAgICAgPgogICAgICAgIDxkaXYKICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsIgogICAgICAgICAgQGNsaWNrPSJoYW5kbGVTZXRMaW5lQ2hhcnREYXRhKCdwdXJjaGFzZXMnKSIKICAgICAgICA+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLW1vbmV5Ij4KICAgICAgICAgICAgPHVuaWNvbgogICAgICAgICAgICAgIG5hbWU9InVzZXJzLWFsdCIKICAgICAgICAgICAgICBoZWlnaHQ9IjUwIgogICAgICAgICAgICAgIHdpZHRoPSI1MCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1pY29uIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC10ZXh0Ij4KICAgICAgICAgICBBZG1pbnMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxjb3VudC10bwogICAgICAgICAgICAgIDpzdGFydC12YWw9IjAiCiAgICAgICAgICAgICAgOmVuZC12YWw9IkFkbWluc0NvdW50IgogICAgICAgICAgICAgIDpkdXJhdGlvbj0iMzIwMCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1udW0iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9yb3V0ZXItbGluaz4KICAgIDwvZWwtY29sPgoKICAgICA8ZWwtY29sCiAgICAgIDp4cz0iMTIiCiAgICAgIDpzbT0iMTIiCiAgICAgIDpsZz0iNiIKICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtY29sIgogICAgPgogICAgICA8cm91dGVyLWxpbmsKICAgICAgICA6dG89IicvY2FyZWVyL2xpc3QnIgogICAgICAgIGNsYXNzPSJtYXJnaW4taG9yaXpvbnRhbCIKICAgICAgPgogICAgICAgIDxkaXYKICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsIgogICAgICAgICAgQGNsaWNrPSJoYW5kbGVTZXRMaW5lQ2hhcnREYXRhKCdwdXJjaGFzZXMnKSIKICAgICAgICA+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLW1vbmV5Ij4KICAgICAgICAgICAgPHVuaWNvbgogICAgICAgICAgICAgIG5hbWU9ImJhZyIKICAgICAgICAgICAgICBoZWlnaHQ9IjUwIgogICAgICAgICAgICAgIHdpZHRoPSI1MCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1pY29uIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC10ZXh0Ij4KICAgICAgICAgICAgICBDYXJlZXIKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxjb3VudC10bwogICAgICAgICAgICAgIDpzdGFydC12YWw9IjAiCiAgICAgICAgICAgICAgOmVuZC12YWw9ImNhcmVlclRvdGFsIgogICAgICAgICAgICAgIDpkdXJhdGlvbj0iMzIwMCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1udW0iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9yb3V0ZXItbGluaz4KICAgIDwvZWwtY29sPiAKCiAgICA8ZWwtY29sCiAgICAgIDp4cz0iMTIiCiAgICAgIDpzbT0iMTIiCiAgICAgIDpsZz0iNiIKICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtY29sIgogICAgPgogICAgICA8cm91dGVyLWxpbmsKICAgICAgICA6dG89IicvY2F0ZWdvcnkvbGlzdCciCiAgICAgICAgY2xhc3M9Im1hcmdpbi1ob3Jpem9udGFsIgogICAgICA+CiAgICAgICAgPGRpdgogICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwiCiAgICAgICAgICBAY2xpY2s9ImhhbmRsZVNldExpbmVDaGFydERhdGEoJ3B1cmNoYXNlcycpIgogICAgICAgID4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbW9uZXkiPgogICAgICAgICAgICA8dW5pY29uCiAgICAgICAgICAgICAgbmFtZT0iY3JlYXRlLWRhc2hib2FyZCIKICAgICAgICAgICAgICBoZWlnaHQ9IjUwIgogICAgICAgICAgICAgIHdpZHRoPSI1MCIKICAgICAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbC1pY29uIgogICAgICAgICAgICAvPgogICAgICAgICAgICA8IS0tIDxpbWcgc3JjPSJodHRwczovL2NkbjIudmVjdG9yc3RvY2suY29tL2kvMTAwMHgxMDAwLzQwLzc2L2ZsYXQtZ3JvdXAtcGVvcGxlLWljb24tc3ltYm9sLWJhY2tncm91bmQtdmVjdG9yLTU1MjQwNzYuanBnIj4gLS0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLXRleHQiPgogICAgICAgICAgICAgIENhdGVnb3JpZXMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxjb3VudC10bwogICAgICAgICAgICAgIDpzdGFydC12YWw9IjAiCiAgICAgICAgICAgICAgOmVuZC12YWw9ImNhdGVnb3JpZXNDb3VudCIKICAgICAgICAgICAgICA6ZHVyYXRpb249IjMyMDAiCiAgICAgICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtbnVtIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvcm91dGVyLWxpbms+CiAgICA8L2VsLWNvbD4KCiAgICA8IS0tIDxlbC1jb2wKICAgICAgOnhzPSIxMiIKICAgICAgOnNtPSIxMiIKICAgICAgOmxnPSI2IgogICAgICBjbGFzcz0iY2FyZC1wYW5lbC1jb2wiCiAgICA+CiAgICAgIDxyb3V0ZXItbGluawogICAgICAgIDp0bz0iJy9vcHRpb24vbGlzdCciCiAgICAgICAgY2xhc3M9Im1hcmdpbi1ob3Jpem9udGFsIgogICAgICA+CiAgICAgICAgPGRpdgogICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwiCiAgICAgICAgICBAY2xpY2s9ImhhbmRsZVNldExpbmVDaGFydERhdGEoJ3B1cmNoYXNlcycpIgogICAgICAgID4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbW9uZXkiPgogICAgICAgICAgICA8dW5pY29uCiAgICAgICAgICAgICAgbmFtZT0iYm94IgogICAgICAgICAgICAgIGhlaWdodD0iNTAiCiAgICAgICAgICAgICAgd2lkdGg9IjUwIgogICAgICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsLWljb24iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLXRleHQiPgogICAgICAgICAgICAgIE9wdGlvbnMKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxjb3VudC10bwogICAgICAgICAgICAgIDpzdGFydC12YWw9IjAiCiAgICAgICAgICAgICAgOmVuZC12YWw9InByb2R1Y3RPcHRpb25Db3VudCIKICAgICAgICAgICAgICA6ZHVyYXRpb249IjMyMDAiCiAgICAgICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtbnVtIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvcm91dGVyLWxpbms+CiAgICA8L2VsLWNvbD4gLS0+CgogICAgPGVsLWNvbAogICAgICA6eHM9IjEyIgogICAgICA6c209IjEyIgogICAgICA6bGc9IjYiCiAgICAgIGNsYXNzPSJjYXJkLXBhbmVsLWNvbCIKICAgID4KICAgICAgPHJvdXRlci1saW5rCiAgICAgICAgOnRvPSInL2NhdGVnb3J5L2xpc3QnIgogICAgICAgIGNsYXNzPSJtYXJnaW4taG9yaXpvbnRhbCIKICAgICAgPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwiPgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC1pY29uLXdyYXBwZXIgaWNvbi1tb25leSI+CiAgICAgICAgICAgIDx1bmljb24KICAgICAgICAgICAgICBuYW1lPSJjdWJlIgogICAgICAgICAgICAgIGhlaWdodD0iNTAiCiAgICAgICAgICAgICAgd2lkdGg9IjUwIgogICAgICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsLWljb24iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLXRleHQiPgogICAgICAgICAgICAgIFByb2R1Y3RzCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8Y291bnQtdG8KICAgICAgICAgICAgICA6c3RhcnQtdmFsPSIwIgogICAgICAgICAgICAgIDplbmQtdmFsPSJwcm9kdWN0Q291bnQiCiAgICAgICAgICAgICAgOmR1cmF0aW9uPSIzMjAwIgogICAgICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsLW51bSIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L3JvdXRlci1saW5rPgogICAgPC9lbC1jb2w+CiAgICA8IS0tIDxlbC1jb2wKICAgICAgOnhzPSIxMiIKICAgICAgOnNtPSIxMiIKICAgICAgOmxnPSI2IgogICAgICBjbGFzcz0iY2FyZC1wYW5lbC1jb2wiCiAgICA+CiAgICAgIDxyb3V0ZXItbGluawogICAgICAgIDp0bz0iJy9vcmRlci9saXN0JyIKICAgICAgICBjbGFzcz0ibWFyZ2luLWhvcml6b250YWwiCiAgICAgID4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0iY2FyZC1wYW5lbCIKICAgICAgICAgIEBjbGljaz0iaGFuZGxlU2V0TGluZUNoYXJ0RGF0YSgncHVyY2hhc2VzJykiCiAgICAgICAgPgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1wYW5lbC1pY29uLXdyYXBwZXIgaWNvbi1tb25leSI+CiAgICAgICAgICAgIDx1bmljb24KICAgICAgICAgICAgICBuYW1lPSJzaG9wcGluZy1jYXJ0IgogICAgICAgICAgICAgIGhlaWdodD0iNTAiCiAgICAgICAgICAgICAgd2lkdGg9IjUwIgogICAgICAgICAgICAgIGNsYXNzPSJjYXJkLXBhbmVsLWljb24iCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXBhbmVsLXRleHQiPgogICAgICAgICAgICAgIE9yZGVycwogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGNvdW50LXRvCiAgICAgICAgICAgICAgOnN0YXJ0LXZhbD0iMCIKICAgICAgICAgICAgICA6ZW5kLXZhbD0ib3JkZXJDb3VudCIKICAgICAgICAgICAgICA6ZHVyYXRpb249IjMyMDAiCiAgICAgICAgICAgICAgY2xhc3M9ImNhcmQtcGFuZWwtbnVtIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvcm91dGVyLWxpbms+CiAgICA8L2VsLWNvbD4gLS0+CiAgPC9lbC1yb3c+CiAgPCEtLSA8ZWwtcm93IHN0eWxlPSJiYWNrZ3JvdW5kOiNmZmY7cGFkZGluZzoxNnB4IDE2cHggMDttYXJnaW4tYm90dG9tOjMycHg7Ij4KICAgICA8bGluZS1jaGFydCA6Y2hhcnQtZGF0YT0ibGluZUNoYXJ0RGF0YSIgLz4KICAgIDxiPjxwIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlcjsgY29sb3I6cmVkIj5Vc2VyczwvcD48L2I+CiAgICA8YmFyLWNoYXJ0IC8+CiAgPC9lbC1yb3c+IC0tPgogIDxlbC1kaWFsb2cKICAgIHRpdGxlPSJSZWFzb24iCiAgICA6dmlzaWJsZS5zeW5jPSJkaWFsb2dWaXNpYmxlIgogICAgd2lkdGg9IjMwJSIKICA+CiAgICA8c3Bhbj4KICAgICAgPGVsLXNlbGVjdAogICAgICAgIHYtbW9kZWw9InJlYXNvbiIKICAgICAgICBwbGFjZWhvbGRlcj0iU2VsZWN0IgogICAgICA+CiAgICAgICAgPGVsLW9wdGlvbgogICAgICAgICAgdi1mb3I9Iml0ZW0gaW4gcmVhc29uTGlzdCIKICAgICAgICAgIDprZXk9Iml0ZW0ucmVhc29uIgogICAgICAgICAgOmxhYmVsPSJpdGVtLnJlYXNvbiIKICAgICAgICAgIDp2YWx1ZT0iaXRlbS5yZWFzb24iCiAgICAgICAgLz4gPC9lbC1zZWxlY3Q+PC9zcGFuPgogICAgPHNwYW4KICAgICAgc2xvdD0iZm9vdGVyIgogICAgICBjbGFzcz0iZGlhbG9nLWZvb3RlciIKICAgID4KICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9ImRpYWxvZ1Zpc2libGUgPSBmYWxzZSI+Q2FuY2VsPC9lbC1idXR0b24+CiAgICAgIDxlbC1idXR0b24KICAgICAgICB2LWxvYWRpbmc9ImRpYWxvZ0xvYWRpbmciCiAgICAgICAgdHlwZT0ic3VjY2VzcyIKICAgICAgICBAY2xpY2s9InVwZGF0ZVJlYXNvbigpIgogICAgICA+Q29uZmlybTwvZWwtYnV0dG9uPgogICAgPC9zcGFuPgogIDwvZWwtZGlhbG9nPgoKICA8ZWwtZGlhbG9nCiAgICB0aXRsZT0iU3RhdHVzIgogICAgOnZpc2libGUuc3luYz0ic3RhdHVzRGlhbG9nVmlzaWJsZSIKICAgIHdpZHRoPSIzMCUiCiAgPgogICAgPHNwYW4+CiAgICAgIDxlbC1zZWxlY3QKICAgICAgICB2LW1vZGVsPSJzdGF0dXNEYXRhLnN0YXR1cyIKICAgICAgICBwbGFjZWhvbGRlcj0iU3RhdHVzIgogICAgICAgIGNsYXNzPSJmaWx0ZXItaXRlbSIKICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgID4KICAgICAgICA8ZWwtb3B0aW9uCiAgICAgICAgICB2LWZvcj0iaXRlbSBpbiBzdGF0dXNMaXN0IgogICAgICAgICAgOmtleT0iaXRlbS52YWx1ZSIKICAgICAgICAgIDpsYWJlbD0iaXRlbS5sYWJlbCIKICAgICAgICAgIDp2YWx1ZT0iaXRlbS52YWx1ZSIKICAgICAgICAvPgogICAgICA8L2VsLXNlbGVjdD4KICAgICAgPGJyPjxicj4KICAgICAgPGRpdiB2LWlmPSJzdGF0dXNEYXRhLnN0YXR1cyA9PSA0Ij4KICAgICAgICA8ZWwtc2VsZWN0CiAgICAgICAgICB2LW1vZGVsPSJzdGF0dXNEYXRhLnJlYXNvbiIKICAgICAgICAgIHBsYWNlaG9sZGVyPSJSZWFzb24iCiAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgICAgPgogICAgICAgICAgPGVsLW9wdGlvbgogICAgICAgICAgICB2LWZvcj0iaXRlbSBpbiByZWFzb25MaXN0IgogICAgICAgICAgICA6a2V5PSJpdGVtLnJlYXNvbiIKICAgICAgICAgICAgOmxhYmVsPSJpdGVtLnJlYXNvbiIKICAgICAgICAgICAgOnZhbHVlPSJpdGVtLnJlYXNvbiIKICAgICAgICAgIC8+CiAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgIDwvZGl2PgogICAgPC9zcGFuPgogICAgPHNwYW4KICAgICAgc2xvdD0iZm9vdGVyIgogICAgICBjbGFzcz0iZGlhbG9nLWZvb3RlciIKICAgID4KICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9InN0YXR1c0RpYWxvZ1Zpc2libGUgPSBmYWxzZSI+Q2FuY2VsPC9lbC1idXR0b24+CiAgICAgIDxlbC1idXR0b24KICAgICAgICB2LWxvYWRpbmc9InN0YXR1c0RpYWxvZ0xvYWRpbmciCiAgICAgICAgdHlwZT0ic3VjY2VzcyIKICAgICAgICBAY2xpY2s9InVwZGF0ZVN0YXR1cygpIgogICAgICA+Q29uZmlybTwvZWwtYnV0dG9uPgogICAgPC9zcGFuPgogIDwvZWwtZGlhbG9nPgoKICA8IS0tIDxlbC1sYWJlbD5Ub2RheSdzIE9yZGVyczwvZWwtbGFiZWw+CiAgPGhyPgogIDxicj4KCiAgPGVsLXJvdyA+CiAgICA8ZGl2IGNsYXNzPSJhcHAtY29udGFpbmVyIj4gLS0+CiAgICAgIDwhLS0gPGVsLXRhYmxlCiAgICAgICAgOmtleT0idGFibGVLZXkiCiAgICAgICAgdi1sb2FkaW5nPSJsaXN0TG9hZGluZyIKICAgICAgICA6ZGF0YT0ibGlzdCIKICAgICAgICBib3JkZXIKICAgICAgICBmaXQKICAgICAgICBoaWdobGlnaHQtY3VycmVudC1yb3cKICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgID4KICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICBzb3J0YWJsZT0iY3VzdG9tIgogICAgICAgICAgd2lkdGg9IjEwMCIKICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICA6bGFiZWw9IiR0KCd0YWJsZS5pZCcpIgogICAgICAgICAgcHJvcD0iaWQiCiAgICAgICAgLz4KICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgIGxhYmVsPSJVc2VyIERldGFpbHMiCiAgICAgICAgICBwcm9wPSJjb250YWN0IgogICAgICAgID4KICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgIDxzcGFuPnt7IHNjb3BlLnJvdy51c2VyLmZ1bGxOYW1lIH19PC9zcGFuPjxicj4KICAgICAgICAgICAgPHNwYW4+e3sgc2NvcGUucm93LnVzZXIuZW1haWwgfX08L3NwYW4+PGJyPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgbGFiZWw9IlN0YXR1cyIKICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgPgogICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgPHNwYW4gdi1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSA0Ij5PbiBob2xkPC9zcGFuPgogICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAwIgogICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogb3JhbmdlIgogICAgICAgICAgICA+UGVuZGluZzwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMSIKICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGdyZWVuIgogICAgICAgICAgICA+QWNjZXB0ZWQ8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDIiCiAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBkYXJrZ3JlZW4iCiAgICAgICAgICAgID5EaXNwYXRjaGVkPC9zcGFuPgogICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAzIgogICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogcmVkIgogICAgICAgICAgICA+Q2FuY2VsbGVkPC9zcGFuPjxicj4KCiAgICAgICAgICAgIDxlbC1idXR0b24KICAgICAgICAgICAgICB2LXdhdmVzCiAgICAgICAgICAgICAgY2xhc3M9ImZpbHRlci1pdGVtIgogICAgICAgICAgICAgIHR5cGU9InByaW1hcnkiCiAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4IgogICAgICAgICAgICAgIEBjbGljaz0iT3BlblN0YXR1cyhzY29wZS5yb3cpIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgVXBkYXRlIFN0YXR1cwogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgIGxhYmVsPSJJbnZvaWNlIgogICAgICAgICAgc3R5bGU9IndpZHRoOiAyMDBweCIKICAgICAgICA+CiAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICA8cm91dGVyLWxpbmsgOnRvPSInL29yZGVyL29yZGVyUGRmLycgKyBzY29wZS5yb3cuaWQiPgogICAgICAgICAgICAgIDxzdmctaWNvbgogICAgICAgICAgICAgICAgbmFtZT0iZG9jdW1lbnRhdGlvbiIKICAgICAgICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDMycHg7IGNvbG9yOiBncmVlbjsgY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvcm91dGVyLWxpbms+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8L2VsLXRhYmxlPiAtLT4KICAgICAgPCEtLSA8ZWwtdGFicwogICAgICAgIDphY3RpdmVOYW1lPSJhY3RpdmVUYWIiCiAgICAgICAgOnN0cmV0Y2g9InRydWUiCiAgICAgICAgc3R5bGU9ImhlaWdodDogMTAlIgogICAgICAgIEB0YWItY2xpY2s9ImhhbmRsZUNsaWNrIgogICAgICA+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSJQZW5kaW5nIiBuYW1lPSJwZW5kaW5nIj4KICAgICAgICAgICAgPGVsLXRhYmxlCiAgICAgICAgICAgICAgOmtleT0idGFibGVLZXkiCiAgICAgICAgICAgICAgdi1sb2FkaW5nPSJsaXN0TG9hZGluZyIKICAgICAgICAgICAgICA6ZGF0YT0ibGlzdCIKICAgICAgICAgICAgICBib3JkZXIKICAgICAgICAgICAgICBmaXQKICAgICAgICAgICAgICBoaWdobGlnaHQtY3VycmVudC1yb3cKICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBzb3J0YWJsZT0iY3VzdG9tIgogICAgICAgICAgICAgICAgd2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICA6bGFiZWw9IiR0KCd0YWJsZS5pZCcpIgogICAgICAgICAgICAgICAgcHJvcD0iaWQiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIGxhYmVsPSJVc2VyIERldGFpbHMiCiAgICAgICAgICAgICAgICBwcm9wPSJjb250YWN0IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHNjb3BlLnJvdy51c2VyLmZ1bGxOYW1lIH19PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgc2NvcGUucm93LnVzZXIuZW1haWwgfX08L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgbGFiZWw9IlN0YXR1cyIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSA0Ij5PbiBob2xkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAwIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogb3JhbmdlIgogICAgICAgICAgICAgICAgICA+UGVuZGluZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMSIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGdyZWVuIgogICAgICAgICAgICAgICAgICA+QWNjZXB0ZWQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDIiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBkYXJrZ3JlZW4iCiAgICAgICAgICAgICAgICAgID5EaXNwYXRjaGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAzIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogcmVkIgogICAgICAgICAgICAgICAgICA+Q2FuY2VsbGVkPC9zcGFuPjxicj4KCiAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24KICAgICAgICAgICAgICAgICAgIHYtaWY9Im15Um9sZSA9PSAnc3VwZXJhZG1pbiciCiAgICAgICAgICAgICAgICAgICAgdi13YXZlcwogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmaWx0ZXItaXRlbSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweCIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9Ik9wZW5TdGF0dXMoc2NvcGUucm93KSIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIFVwZGF0ZSBTdGF0dXMKICAgICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iSW52b2ljZSIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIDp0bz0iJy9vcmRlci9vcmRlclBkZi8nICsgc2NvcGUucm93LmlkIj4KICAgICAgICAgICAgICAgICAgICA8c3ZnLWljb24KICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImRvY3VtZW50YXRpb24iCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAzMnB4OyBjb2xvcjogZ3JlZW47IGN1cnNvcjogcG9pbnRlciIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgPC9lbC10YWJsZT4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0iQWNjZXB0ZWQiIG5hbWU9ImFjY2VwdGVkIj4KICAgICAgICAgICAgPGVsLXRhYmxlCiAgICAgICAgICAgICAgOmtleT0idGFibGVLZXkiCiAgICAgICAgICAgICAgdi1sb2FkaW5nPSJsaXN0TG9hZGluZyIKICAgICAgICAgICAgICA6ZGF0YT0ibGlzdCIKICAgICAgICAgICAgICBib3JkZXIKICAgICAgICAgICAgICBmaXQKICAgICAgICAgICAgICBoaWdobGlnaHQtY3VycmVudC1yb3cKICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBzb3J0YWJsZT0iY3VzdG9tIgogICAgICAgICAgICAgICAgd2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICA6bGFiZWw9IiR0KCd0YWJsZS5pZCcpIgogICAgICAgICAgICAgICAgcHJvcD0iaWQiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIGxhYmVsPSJVc2VyIERldGFpbHMiCiAgICAgICAgICAgICAgICBwcm9wPSJjb250YWN0IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHNjb3BlLnJvdy51c2VyLmZ1bGxOYW1lIH19PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgc2NvcGUucm93LnVzZXIuZW1haWwgfX08L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgbGFiZWw9IlN0YXR1cyIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSA0Ij5PbiBob2xkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAwIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogb3JhbmdlIgogICAgICAgICAgICAgICAgICA+UGVuZGluZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMSIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGdyZWVuIgogICAgICAgICAgICAgICAgICA+QWNjZXB0ZWQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDIiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBkYXJrZ3JlZW4iCiAgICAgICAgICAgICAgICAgID5EaXNwYXRjaGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAzIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogcmVkIgogICAgICAgICAgICAgICAgICA+Q2FuY2VsbGVkPC9zcGFuPjxicj4KICAgIAogICAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uCiAgICAgICAgICAgICAgICAgICB2LWlmPSJteVJvbGUgPT0gJ3N1cGVyYWRtaW4nIgogICAgICAgICAgICAgICAgICAgIHYtd2F2ZXMKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmlsdGVyLWl0ZW0iCiAgICAgICAgICAgICAgICAgICAgdHlwZT0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHgiCiAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJPcGVuU3RhdHVzKHNjb3BlLnJvdykiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBVcGRhdGUgU3RhdHVzCiAgICAgICAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgbGFiZWw9Ikludm9pY2UiCiAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgICAgIDxyb3V0ZXItbGluayA6dG89Iicvb3JkZXIvb3JkZXJQZGYvJyArIHNjb3BlLnJvdy5pZCI+CiAgICAgICAgICAgICAgICAgICAgPHN2Zy1pY29uCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJkb2N1bWVudGF0aW9uIgogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMzJweDsgY29sb3I6IGdyZWVuOyBjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9yb3V0ZXItbGluaz4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgIDwvZWwtdGFibGU+CiAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IkRpc3BhdGNoZWQiIG5hbWU9ImRpc3BhdGNoZWQiPgogICAgICAgICAgICA8ZWwtdGFibGUKICAgICAgICAgICAgICA6a2V5PSJ0YWJsZUtleSIKICAgICAgICAgICAgICB2LWxvYWRpbmc9Imxpc3RMb2FkaW5nIgogICAgICAgICAgICAgIDpkYXRhPSJsaXN0IgogICAgICAgICAgICAgIGJvcmRlcgogICAgICAgICAgICAgIGZpdAogICAgICAgICAgICAgIGhpZ2hsaWdodC1jdXJyZW50LXJvdwogICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwJSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIHNvcnRhYmxlPSJjdXN0b20iCiAgICAgICAgICAgICAgICB3aWR0aD0iMTAwIgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIDpsYWJlbD0iJHQoJ3RhYmxlLmlkJykiCiAgICAgICAgICAgICAgICBwcm9wPSJpZCIKICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgbGFiZWw9IlVzZXIgRGV0YWlscyIKICAgICAgICAgICAgICAgIHByb3A9ImNvbnRhY3QiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgc2NvcGUucm93LnVzZXIuZnVsbE5hbWUgfX08L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgICA8c3Bhbj57eyBzY29wZS5yb3cudXNlci5lbWFpbCB9fTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iU3RhdHVzIgogICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyMDBweCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDQiPk9uIGhvbGQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDAiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBvcmFuZ2UiCiAgICAgICAgICAgICAgICAgID5QZW5kaW5nPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAxIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogZ3JlZW4iCiAgICAgICAgICAgICAgICAgID5BY2NlcHRlZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMiIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGRhcmtncmVlbiIKICAgICAgICAgICAgICAgICAgPkRpc3BhdGNoZWQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDMiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiByZWQiCiAgICAgICAgICAgICAgICAgID5DYW5jZWxsZWQ8L3NwYW4+PGJyPgogICAgCiAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgIHYtaWY9Im15Um9sZSA9PSAnc3VwZXJhZG1pbiciCiAgICAgICAgICAgICAgICAgICAgdi13YXZlcwogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmaWx0ZXItaXRlbSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIGhpZGRlbj10cnVlCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4IgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iT3BlblN0YXR1cyhzY29wZS5yb3cpIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgVXBkYXRlIFN0YXR1cwogICAgICAgICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIGxhYmVsPSJJbnZvaWNlIgogICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyMDBweCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgOnRvPSInL29yZGVyL29yZGVyUGRmLycgKyBzY29wZS5yb3cuaWQiPgogICAgICAgICAgICAgICAgICAgIDxzdmctaWNvbgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0iZG9jdW1lbnRhdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDMycHg7IGNvbG9yOiBncmVlbjsgY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDwvcm91dGVyLWxpbms+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICA8L2VsLXRhYmxlPgogICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSJDYW5jZWxsZWQiIG5hbWU9ImNhbmNlbGxlZCI+CiAgICAgICAgICAgIDxlbC10YWJsZQogICAgICAgICAgICAgIDprZXk9InRhYmxlS2V5IgogICAgICAgICAgICAgIHYtbG9hZGluZz0ibGlzdExvYWRpbmciCiAgICAgICAgICAgICAgOmRhdGE9Imxpc3QiCiAgICAgICAgICAgICAgYm9yZGVyCiAgICAgICAgICAgICAgZml0CiAgICAgICAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDAlIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgc29ydGFibGU9ImN1c3RvbSIKICAgICAgICAgICAgICAgIHdpZHRoPSIxMDAiCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgndGFibGUuaWQnKSIKICAgICAgICAgICAgICAgIHByb3A9ImlkIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyMDBweCIKICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iVXNlciBEZXRhaWxzIgogICAgICAgICAgICAgICAgcHJvcD0iY29udGFjdCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgICAgICA8c3Bhbj57eyBzY29wZS5yb3cudXNlci5mdWxsTmFtZSB9fTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHNjb3BlLnJvdy51c2VyLmVtYWlsIH19PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIGxhYmVsPSJTdGF0dXMiCiAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gNCI+T24gaG9sZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMCIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IG9yYW5nZSIKICAgICAgICAgICAgICAgICAgPlBlbmRpbmc8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDEiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBncmVlbiIKICAgICAgICAgICAgICAgICAgPkFjY2VwdGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAyIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogZGFya2dyZWVuIgogICAgICAgICAgICAgICAgICA+RGlzcGF0Y2hlZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMyIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IHJlZCIKICAgICAgICAgICAgICAgICAgPkNhbmNlbGxlZDwvc3Bhbj48YnI+CiAgICAKICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbgogICAgICAgICAgICAgICAgICAgIHYtaWY9Im15Um9sZSA9PSAnc3VwZXJhZG1pbiciCiAgICAgICAgICAgICAgICAgICAgdi13YXZlcwogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmaWx0ZXItaXRlbSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweCIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9Ik9wZW5TdGF0dXMoc2NvcGUucm93KSIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIFVwZGF0ZSBTdGF0dXMKICAgICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iSW52b2ljZSIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIDp0bz0iJy9vcmRlci9vcmRlclBkZi8nICsgc2NvcGUucm93LmlkIj4KICAgICAgICAgICAgICAgICAgICA8c3ZnLWljb24KICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImRvY3VtZW50YXRpb24iCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAzMnB4OyBjb2xvcjogZ3JlZW47IGN1cnNvcjogcG9pbnRlciIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgPC9lbC10YWJsZT4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0iT24gSG9sZCIgbmFtZT0ib24gaG9sZCI+CiAgICAgICAgICAgIDxlbC10YWJsZQogICAgICAgICAgICAgIDprZXk9InRhYmxlS2V5IgogICAgICAgICAgICAgIHYtbG9hZGluZz0ibGlzdExvYWRpbmciCiAgICAgICAgICAgICAgOmRhdGE9Imxpc3QiCiAgICAgICAgICAgICAgYm9yZGVyCiAgICAgICAgICAgICAgZml0CiAgICAgICAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDAlIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgc29ydGFibGU9ImN1c3RvbSIKICAgICAgICAgICAgICAgIHdpZHRoPSIxMDAiCiAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgndGFibGUuaWQnKSIKICAgICAgICAgICAgICAgIHByb3A9ImlkIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAyMDBweCIKICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iVXNlciBEZXRhaWxzIgogICAgICAgICAgICAgICAgcHJvcD0iY29udGFjdCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgICAgICAgICA8c3Bhbj57eyBzY29wZS5yb3cudXNlci5mdWxsTmFtZSB9fTwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHNjb3BlLnJvdy51c2VyLmVtYWlsIH19PC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbgogICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgIGxhYmVsPSJTdGF0dXMiCiAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDIwMHB4IgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gNCI+T24gaG9sZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMCIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IG9yYW5nZSIKICAgICAgICAgICAgICAgICAgPlBlbmRpbmc8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1lbHNlLWlmPSJzY29wZS5yb3cuc3RhdHVzID09IDEiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBncmVlbiIKICAgICAgICAgICAgICAgICAgPkFjY2VwdGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0ic2NvcGUucm93LnN0YXR1cyA9PSAyIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogZGFya2dyZWVuIgogICAgICAgICAgICAgICAgICA+RGlzcGF0Y2hlZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9InNjb3BlLnJvdy5zdGF0dXMgPT0gMyIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IHJlZCIKICAgICAgICAgICAgICAgICAgPkNhbmNlbGxlZDwvc3Bhbj48YnI+CiAgICAKICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbgogICAgICAgICAgICAgICAgICAgIHYtaWY9Im15Um9sZSA9PSAnc3VwZXJhZG1pbiciCiAgICAgICAgICAgICAgICAgICAgdi13YXZlcwogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmaWx0ZXItaXRlbSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweCIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9Ik9wZW5TdGF0dXMoc2NvcGUucm93KSIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIFVwZGF0ZSBTdGF0dXMKICAgICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4KICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICBsYWJlbD0iSW52b2ljZSIKICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjAwcHgiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIDp0bz0iJy9vcmRlci9vcmRlclBkZi8nICsgc2NvcGUucm93LmlkIj4KICAgICAgICAgICAgICAgICAgICA8c3ZnLWljb24KICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImRvY3VtZW50YXRpb24iCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAzMnB4OyBjb2xvcjogZ3JlZW47IGN1cnNvcjogcG9pbnRlciIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgPC9lbC10YWJsZT4KICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICA8L2VsLXRhYnM+CiAgICAgIAogICAgICA8cGFnaW5hdGlvbgogICAgICAgIHYtc2hvdz0idG90YWwgPiAwIgogICAgICAgIDp0b3RhbD0idG90YWwiCiAgICAgICAgOnBhZ2Uuc3luYz0ibGlzdFF1ZXJ5LnBhZ2UiCiAgICAgICAgOmxpbWl0LnN5bmM9Imxpc3RRdWVyeS5saW1pdCIKICAgICAgICBAcGFnaW5hdGlvbj0iZ2V0TGlzdCIKICAgICAgLz4KICAgIDwvZGl2PiAtLT4KICAgIDwhLS0gPGVsLWNvbAogICAgICA6eHM9IjI0IgogICAgICA6c209IjI0IgogICAgICA6bGc9IjEyIgogICAgPgogICAgICA8ZGl2IGNsYXNzPSJjaGFydC13cmFwcGVyIj4KICAgICAgICA8cmFkYXItY2hhcnQgLz4KICAgICAgPC9kaXY+CiAgICA8L2VsLWNvbD4gLS0+CiAgICA8IS0tIDxlbC1jb2wKICAgICAgOnhzPSIyNCIKICAgICAgOnNtPSIyNCIKICAgICAgOmxnPSIxMiIKICAgID4KICAgICAgPGRpdiBjbGFzcz0iY2hhcnQtd3JhcHBlciI+CiAgICAgICAgPHBpZS1jaGFydCA6cGllY2hhcnRkYXRhPSJwaWVDaGFydERhdGEiIC8+CiAgICAgIDwvZGl2PgogICAgPC9lbC1jb2w+IC0tPgogICAgPCEtLSA8ZWwtY29sCiAgICAgIDp4cz0iMjQiCiAgICAgIDpzbT0iMjQiCiAgICAgIDpsZz0iOCIKICAgID4KICAgICAgPGRpdiBjbGFzcz0iY2hhcnQtd3JhcHBlciI+CiAgICAgICAgPGJhci1jaGFydCAvPgogICAgICA8L2Rpdj4KICAgIDwvZWwtY29sPiAtLT4KICA8IS0tIDwvZWwtcm93PiAtLT4KPC9kaXY+Cg=="},null]}