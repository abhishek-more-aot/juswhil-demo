{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/profile/components/Account.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/profile/components/Account.vue","mtime":1673444274613},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Account.vue"],"names":[],"mappings":";AAifile":"Account.vue","sourceRoot":"src/views/profile/components","sourcesContent":["<template>\n  <el-form\n    ref=\"postForm\"\n    :model=\"postForm\"\n    :rules=\"rules\"\n  >\n    <el-form-item\n      label=\"Fullname\"\n      prop=\"fullName\"\n      style=\"margin-bottom: 20px;\"\n    >\n      <el-input\n        v-model=\"postForm.fullName\"\n        name=\"fullName\"\n      />\n    </el-form-item>\n    <el-form-item\n      label=\"Email\"\n      prop=\"email\"\n      style=\"margin-bottom: 20px;\"\n    >\n      <el-input\n        v-model=\"postForm.email\"\n        name=\"email\"\n        readonly=\"true\"\n        :disabled=\"true\"\n      />\n    </el-form-item>\n    <el-form-item\n      label=\"Gender\"\n      prop=\"gender\"\n      style=\"margin-bottom: 20px;\"\n    >\n      <el-select\n        v-model=\"postForm.gender\"\n        style=\"width:100%\"\n        name=\"gender\"\n        placeholder=\"Select\"\n      >\n        <el-option\n          v-for=\"item in genderList\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n     <el-form-item label=\"Role\">\n      <el-input\n        v-model.trim=\"user.roles\"\n        readonly\n        :disabled=\"true\"\n      />\n    </el-form-item> \n    <el-form-item\n      label=\"Avatar\"\n      style=\"margin-bottom: 20px;\"\n    >\n      <br>\n      <pan-thumb\n        :image=\"postForm.avatar\"\n        style=\"height:100px;width:100px\"\n      /><br>\n      <el-button\n        type=\"primary\"\n        icon=\"el-icon-upload\"\n        tyle=\"position: absolute;bottom: 15px;margin-left: 40px;\"\n        @click=\"toggleShow\"\n      >\n        Change Avatar\n      </el-button>\n      <avatar-upload\n        v-model=\"showImageUpload\"\n        field=\"avatar\"\n        @crop-success=\"cropSuccess\"\n        @close=\"onClose\"\n        @crop-upload-success=\"onCropUploadSuccess\"\n      />\n    </el-form-item>\n   \n    <el-form-item>\n      <el-button\n        type=\"primary\"\n        @click=\"submit\"\n      >\n        Update\n      </el-button>\n\n      <el-button\n        type=\"primary\"\n        @click=\"dialogFormVisible = true\"\n      >\n        Change Password\n      </el-button>\n      <el-dialog\n        title=\"Change Password\"\n        :visible.sync=\"dialogFormVisible\"\n      >\n        <el-form\n          ref=\"changePasswordForm\"\n          :model=\"changePasswordForm\"\n          :rules=\"rules\"\n        >\n          <el-form-item\n            label=\"Current Password\"\n            label-width=\"140px\"\n            style=\"margin-bottom: 20px\"\n            prop=\"password\"\n          >\n            <el-input\n              v-model=\"changePasswordForm.password\"\n              type=\"password\"\n              autocomplete=\"off\"\n              show-password\n            />\n          </el-form-item>\n          <el-form-item\n            id=\"newPassword\"\n            label=\"New Password\"\n            label-width=\"140px\"\n            prop=\"newPassword\"\n            style=\"margin-bottom: 20px\"\n          >\n            <el-input\n              v-model=\"changePasswordForm.newPassword\"\n              type=\"password\"\n              autocomplete=\"off\"\n              show-password\n            />\n          </el-form-item>\n          <el-form-item\n            label=\"Confirm Password\"\n            label-width=\"140px\"\n            prop=\"confirmPassword\"\n            style=\"margin-bottom: 20px\"\n          >\n            <el-input\n              v-model=\"changePasswordForm.confirmPassword\"\n              type=\"password\"\n              autocomplete=\"off\"\n              show-password\n            />\n          </el-form-item>\n        </el-form>\n        <span\n          slot=\"footer\"\n          class=\"dialog-footer\"\n        >\n          <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n          <el-button\n            v-loading=\"changePasswordLoading\"\n            type=\"primary\"\n            @click=\"changePassword()\"\n          >Confirm</el-button>\n        </span>\n      </el-dialog>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script lang=\"ts\">\nimport { uploadFile } from '@/api/common'\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { IProfile } from '../index.vue'\nimport {\n  getAdminById,\n  defaultAdminData,\n  updateAdmin,\n  UpdatePassword,\n  register\n} from '@/api/admins'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport { Action } from 'vuex-module-decorators'\nimport { Form } from 'element-ui'\nimport router from '@/router'\nimport AvatarUpload from '@/components/AvatarUpload/index.vue'\nimport PanThumb from '@/components/PanThumb/index.vue'\nimport { AdminModule } from '@/store/modules/admin'\n\n@Component({\n  name: 'Account',\n  components: {\n    AvatarUpload,\n    PanThumb\n  }\n})\nexport default class extends Vue {\n  @Prop({ required: true }) private user!: IProfile\n   private image = this.user.avatar ? this.user.avatar : 'https://stumpz.s3.ap-south-1.amazonaws.com/1611434872392-img.png'\n  private showImageUpload = false\n  private dialogFormVisible = false;\n  private changePasswordLoading = false;\n  private tempTagView?: ITagView;\n  private postForm = Object.assign({}, defaultAdminData);\n  private loading = false;\n  private genderList = [\n    { label: 'Female', value: 0 },\n    { label: 'Male', value: 1 },\n    { label: 'Others', value: 2 }\n  ];\n\n  created() {\n    this.fetchData(AdminModule.id)\n  }\n\n  private async fetchData(id: number) {\n    try {\n      const data: any = await getAdminById(id)\n      this.postForm = data\n      this.image = data.avatar\n\n      // Just for test\n      const title = this.postForm.email\n      // Set tagsview title\n      this.setTagsViewTitle(title)\n      // Set page title\n      this.setPageTitle(title)\n    } catch (err) {\n      Promise.reject(err)\n    }\n  }\n\n  private changePasswordForm: any = {\n    password: '',\n    newPassword: '',\n    confirmPassword: ''\n  };\n\n  private validatenewPassword:any = this.validate\n\n  validate(rule: any, value: string, callback: Function) {\n    if (this.changePasswordForm.newPassword.length > 1) {\n      if (this.changePasswordForm.newPassword != value) {\n        callback(new Error('Passwords does not match'))\n      }\n    } else {\n      callback()\n    }\n  }\n\n  private setTagsViewTitle(title: string) {\n    const tagView = this.tempTagView\n    if (tagView) {\n      tagView.title = `${title}-${this.postForm.id}`\n      TagsViewModule.updateVisitedView(tagView)\n    }\n  }\n\n  private setPageTitle(title: string) {\n    document.title = `${title} - ${this.postForm.id}`\n  }\n\n  private toggleShow() {\n    this.showImageUpload = !this.showImageUpload\n  }\n\n  private onCropUploadSuccess(jsonData: any, field: string) {\n    this.showImageUpload = false\n    this.image = jsonData.files[field]\n  }\n\n  private onClose() {\n    this.showImageUpload = false\n  }\n\n  private cropSuccess(imgDataUrl: string, field: string) {\n    this.image = imgDataUrl\n    const data = new FormData()\n    fetch(imgDataUrl)\n      .then((res) => res.blob())\n      .then((blob) => {\n        const file = new File([blob], 'img.' + blob.type.split('/')[1], {\n          type: 'image/png'\n        })\n        data.append('file', file)\n        uploadFile(data, (event: ProgressEvent) => {\n          console.log(event)\n        }).then((res: any) => {\n          this.postForm.avatar = res\n        })\n      })\n  }\n\n  private submit() {\n    (this.$refs.postForm as Form).validate(valid => {\n      if (valid) {\n        this.saveForm()\n      } else {\n        return false\n      }\n    })\n  }\n\n  @Action\n  public async saveForm() {\n    try {\n      this.postForm.adminsRole.id = this.postForm.adminsRoleId\n      // delete this.postForm.password\n\n      await updateAdmin(this.postForm.id, this.postForm)\n\n      this.$notify({\n        title: 'Success',\n        message: 'Admin saved successfully',\n        type: 'success',\n        duration: 2000\n      })\n      window.location.reload()\n    } catch (err) {\n      this.loading = false\n    }\n  }\n\n  private async changePassword() {\n    (this.$refs.changePasswordForm as Form).validate(async(valid: boolean) => {\n      if (this.changePasswordForm.newPassword === this.changePasswordForm.confirmPassword) {\n        if (valid) {\n          this.changePasswordLoading = true\n          const data:any = {\n            oldPassword: this.changePasswordForm.password,\n            newPassword: this.changePasswordForm.newPassword\n          }\n          const response:any = await UpdatePassword(data).then((res:any) => {\n            if (res.responseCode == 200) {\n              this.$message({\n                message: 'password changed successfully.',\n                type: 'success'\n              })\n              this.changePasswordLoading = false\n              this.dialogFormVisible = false;\n              (this.$refs.changePasswordForm as Form).resetFields()\n            } else {\n              this.$message({\n                message: 'Incorrect current password',\n                type: 'error'\n              })\n              this.changePasswordLoading = false\n            }\n          }).catch(res => {\n            this.$message.error('Some error occured')\n          })\n        } else {\n          this.$message({\n            message: 'Enter all details',\n            type: 'error'\n          })\n          return false\n        }\n      } else {\n        this.$message({\n          message: 'Password doesn\\'t match',\n          type: 'error'\n        })\n        return false\n      }\n    })\n  }\n\n   private rules = {\n     fullName: [\n       {\n         required: true,\n         message: 'Please enter full name',\n         trigger: ['blur', 'change']\n       },\n       { min: 3, message: 'Length should be greater than 3', trigger: ['blur', 'change'] },\n       {\n        //  pattern: '[A-Za-z]+$',\n         pattern: '[A-Za-z]+$',\n         message: 'Name should contain characters only',\n         trigger: ['blur', 'change']\n       }\n     ],\n     contactNumber: [\n       {\n         required: true,\n         message: 'Please enter mobile number',\n         trigger: 'blur'\n       },\n       {\n         trigger: ['blur', 'change'],\n         pattern: '[123456789][0-9]*$',\n         message: 'Mobile number should contain number only'\n       },\n       {\n         max: 10,\n         min: 10,\n         message: 'Length should be of 10 Digits',\n         trigger: ['blur', 'change']\n       }\n     ],\n     email: [\n       {\n         required: true,\n         message: 'please enter e-mail',\n         trigger: 'blur'\n       },\n       {\n         min: 10,\n         max: 50,\n         message: 'Length should be between 10-50 characters',\n         trigger: ['blur', 'change']\n       },\n       {\n         type: 'email',\n         message: 'Please enter correct email address',\n         trigger: ['blur', 'change']\n       }\n     ],\n     password: [\n       {\n         required: true,\n         message: 'Please enter password',\n         trigger: 'blur'\n       }\n     ],\n     gender: [\n       {\n         required: true,\n         message: 'Please enter gender',\n         trigger: ['blur', 'change']\n       }\n     ],\n\n     newPassword: [\n       { required: true, message: 'Please enter new password', trigger: 'blur' }\n     ],\n     confirmPassword: [\n       {\n         required: true,\n         message: 'Please enter confirm password',\n         trigger: 'blur'\n       }\n       // { validator: this.validatenewPassword, trigger: 'blur' }\n     ]\n   };\n}\n</script>\n"]}]}