{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Pagination/index.vue?vue&type=style&index=0&id=72233bcd&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Pagination/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wYWdpbmF0aW9uLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwYWRkaW5nOiAzMnB4IDE2cHg7Cn0KCi5wYWdpbmF0aW9uLWNvbnRhaW5lci5oaWRkZW4gewogIGRpc3BsYXk6IG5vbmU7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Pagination","sourcesContent":["<template>\n  <div\n    :class=\"{'hidden': hidden}\"\n    class=\"pagination-container\"\n  >\n    <el-pagination\n      :background=\"background\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :layout=\"layout\"\n      :page-sizes=\"pageSizes\"\n      :total=\"total\"\n      v-bind=\"$attrs\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport { scrollTo } from '@/utils/scroll-to'\n\n@Component({\n  name: 'Pagination'\n})\nexport default class extends Vue {\n  @Prop({ required: true }) private total!: number\n  @Prop({ default: 1 }) private page!: number\n  @Prop({ default: 2 }) private limit!: number\n  @Prop({ default: () => [2, 10, 20, 30, 50] }) private pageSizes!: number[]\n  @Prop({ default: 'total, sizes, prev, pager, next, jumper' }) private layout!: string\n  @Prop({ default: true }) private background!: boolean\n  @Prop({ default: true }) private autoScroll!: boolean\n  @Prop({ default: false }) private hidden!: boolean\n\n  get currentPage() {\n    return this.page\n  }\n\n  set currentPage(value) {\n    this.$emit('update:page', value)\n  }\n\n  get pageSize() {\n    return this.limit\n  }\n\n  set pageSize(value) {\n    this.$emit('update:limit', value)\n  }\n\n  handleSizeChange(value: number) {\n    this.$emit('pagination', { page: this.currentPage, limit: value })\n    if (this.autoScroll) {\n      scrollTo(0, 800)\n    }\n  }\n\n  handleCurrentChange(value: number) {\n    this.$emit('pagination', { page: value, limit: this.pageSize })\n    if (this.autoScroll) {\n      scrollTo(0, 800)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination-container {\n  background: #fff;\n  padding: 32px 16px;\n}\n\n.pagination-container.hidden {\n  display: none;\n}\n</style>\n"]}]}