{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/banner/list.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/banner/list.vue","mtime":1672064999283},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCB7IElCYW5uZXJEYXRhIH0gZnJvbSAiQC9hcGkvdHlwZXMiOwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICJAL2NvbXBvbmVudHMvUGFnaW5hdGlvbi9pbmRleC52dWUiOwppbXBvcnQgeyBleHBvcnRKc29uMkV4Y2VsIH0gZnJvbSAiQC91dGlscy9leGNlbCI7CmltcG9ydCB7IGZvcm1hdEpzb24sIGdldFF1ZXJ5IH0gZnJvbSAiQC91dGlscyI7CmltcG9ydCBFbmFibGVkIGZyb20gIkAvY29tcG9uZW50cy9FbmFibGVkL2luZGV4LnZ1ZSI7CmltcG9ydCB7IGRlbGV0ZUJhbm5lciwgZ2V0QmFubmVycywgdXBkYXRlT3JkZXIgfSBmcm9tICJAL2FwaS9iYW5uZXIiOwppbXBvcnQgeyBBZG1pbk1vZHVsZSB9IGZyb20gIkAvc3RvcmUvbW9kdWxlcy9hZG1pbiI7CmltcG9ydCBTb3J0YWJsZSBmcm9tICJzb3J0YWJsZWpzIjsKCkBDb21wb25lbnQoewogIG5hbWU6ICJCYW5uZXJMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uLAogICAgRW5hYmxlZCwKICB9LAp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFZ1ZSB7CiAgcHJpdmF0ZSB0YWJsZUtleSA9IDA7CiAgcHJpdmF0ZSB0b3RhbCA9IDA7CiAgcHJpdmF0ZSBsaXN0OiBJQmFubmVyRGF0YVtdID0gW107CiAgcHJpdmF0ZSBtYWxsc0xpc3Q6IGFueSA9IFtdOwogIHByaXZhdGUgbGlzdExvYWRpbmcgPSB0cnVlOwogIHByaXZhdGUgZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgcHJpdmF0ZSBteVJvbGUgPSBBZG1pbk1vZHVsZS5yb2xlczsKICBwcml2YXRlIHNob3dTb3J0aW5nT3B0aW9uOiBib29sZWFuID0gZmFsc2U7CiAgcHJpdmF0ZSByZW5kZXJDb21wb25lbnQ6IGJvb2xlYW4gPSB0cnVlOwogIG5ld0xpc3Q6IGFueSA9IFtdOwogIG9sZExpc3Q6IGFueSA9IFtdOwogIHByaXZhdGUgbGlzdFF1ZXJ5ID0gewogICAgcGFnZTogMSwKICAgIGxpbWl0OiAxMCwKICAgIHNvcnQ6ICJvcmRlcixBU0MiLAogICAgZmlsdGVyOiB7CiAgICAgIGVuYWJsZWQ6ICJlcSIsCiAgICB9LAogIH07CgogIHByaXZhdGUgc2hvd0NyZWF0ZWREYXRlOiBib29sZWFuID0gZmFsc2U7CiAgcHJpdmF0ZSBzb3J0T3B0aW9ucyA9IFsKICAgIHsgbGFiZWw6ICJBc2NlbmRpbmciLCBrZXk6ICJvcmRlcixBU0MiIH0sCiAgICB7IGxhYmVsOiAiRGVzY2VuZGluZyIsIGtleTogIm9yZGVyLERFU0MiIH0sCiAgXTsKCiAgcHJpdmF0ZSBlbmFibGVUeXBlT3B0aW9ucyA9IFsKICAgIHsga2V5OiB0cnVlLCB2YWx1ZTogIkVuYWJsZSIgfSwKICAgIHsga2V5OiBmYWxzZSwgdmFsdWU6ICJEaXNhYmxlZCIgfSwKICBdOwoKICBzb3J0YWJsZTogYW55OwoKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfQoKICBhc3luYyBvblByaW9ydHlDaGFuZ2UoKSB7CiAgICBpZiAodGhpcy5zaG93U29ydGluZ09wdGlvbikgewogICAgICB0aGlzLmZldGNoQWxsUmVjb3JlZCh0cnVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmVuZGVyQ29tcG9uZW50ID0gZmFsc2U7CiAgICAgIHRoaXMuc29ydGFibGUub3B0aW9ucy5kaXNhYmxlZCA9IHRydWU7CiAgICAgIHRoaXMuJG5leHRUaWNrKCkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy5yZW5kZXJDb21wb25lbnQgPSB0cnVlOwogICAgICB9KTsKICAgIH0KICB9CgogIGFzeW5jIGZldGNoQWxsUmVjb3JlZChjaGVja0ZvckZpcnN0VGltZTogYm9vbGVhbikgewogICAgdHJ5IHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIGNvbnN0IGRhdGE6IGFueSA9IGF3YWl0IGdldEJhbm5lcnMoewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDEwMDAwMCwKICAgICAgICBzb3J0OiAib3JkZXIsQVNDIiwKICAgICAgfSk7CiAgICAgIHRoaXMubGlzdCA9IGRhdGEuZGF0YTsKICAgICAgdGhpcy50b3RhbCA9IGRhdGEubGVuZ3RoOwogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIGlmIChjaGVja0ZvckZpcnN0VGltZSkgewogICAgICAgIHRoaXMub2xkTGlzdCA9IHRoaXMubGlzdC5tYXAoKHYpID0+IHYuaWQpOwogICAgICAgIHRoaXMubmV3TGlzdCA9IHRoaXMub2xkTGlzdC5zbGljZSgpOwogICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2V0U29ydCk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgIH0KICB9CgogIHNldFNvcnQoKSB7CiAgICBjb25zdCB0ZW1wOiBhbnkgPSB0aGlzLiRyZWZzLmRyYWdUYWJsZTsKICAgIGNvbnN0IGVsID0gdGVtcC4kZWwucXVlcnlTZWxlY3RvckFsbCgKICAgICAgIi5lbC10YWJsZV9fYm9keS13cmFwcGVyID4gdGFibGUgPiB0Ym9keSIKICAgIClbMF07CiAgICB0aGlzLnNvcnRhYmxlID0gU29ydGFibGUuY3JlYXRlKGVsLCB7CiAgICAgIGdob3N0Q2xhc3M6ICJzb3J0YWJsZS1naG9zdCIsCiAgICAgIHNldERhdGE6IGZ1bmN0aW9uIChkYXRhVHJhbnNmZXIpIHsKICAgICAgICBkYXRhVHJhbnNmZXIuc2V0RGF0YSgiVGV4dCIsICIiKTsKICAgICAgfSwKICAgICAgb25FbmQ6IChldnQpID0+IHsKICAgICAgICBjb25zdCB0YXJnZXRSb3cgPSB0aGlzLmxpc3Quc3BsaWNlKE51bWJlcihldnQub2xkSW5kZXgpLCAxKVswXTsKICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKE51bWJlcihldnQubmV3SW5kZXgpLCAwLCB0YXJnZXRSb3cpOwogICAgICAgIGNvbnN0IHRlbXBJbmRleCA9IHRoaXMubmV3TGlzdC5zcGxpY2UoZXZ0Lm9sZEluZGV4LCAxKVswXTsKICAgICAgICB0aGlzLm5ld0xpc3Quc3BsaWNlKGV2dC5uZXdJbmRleCwgMCwgdGVtcEluZGV4KTsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5ld0xpc3QpOwogICAgICAgIHRoaXMudXBkYXRlT3JkZXIoKTsKICAgICAgfSwKICAgIH0pOwogIH0KCiAgcHJpdmF0ZSBhc3luYyB1cGRhdGVPcmRlcigpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHVwZGF0ZUNoZWNrID0gYXdhaXQgdXBkYXRlT3JkZXIodGhpcy5uZXdMaXN0KTsKICAgICAgdGhpcy5mZXRjaEFsbFJlY29yZWQoZmFsc2UpOwogICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgfQoKICBwcml2YXRlIGhhbmRsZURlbGV0ZShkYXRhOiBhbnkpIHsKICAgIGlmIChkYXRhKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oCiAgICAgICAgIkRvIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGJhbm5lcj8iLAogICAgICAgIHRoaXMuJHRjKCJ0YWJsZS5kZWxldGUiKSwKICAgICAgICB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy4kdGMoInRhYmxlLmRlbGV0ZSIpLAogICAgICAgICAgY29uZmlybUJ1dHRvbkNsYXNzOiAiZWwtYnV0dG9uLS1kYW5nZXIiLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIkNhbmNlbCIsCiAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgIH0KICAgICAgKQogICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgIGRlbGV0ZUJhbm5lcihkYXRhLmlkKS50aGVuKChkZWxldGVkKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgfSk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICJpbmZvIiwKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdGMoInRhYmxlLmRlbGV0ZUNhbmNlbGVkIiksCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0KICB9CgogIHByaXZhdGUgYXN5bmMgZ2V0TGlzdCgpIHsKICAgIHRyeSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCBnZXRCYW5uZXJzKGdldFF1ZXJ5KHRoaXMubGlzdFF1ZXJ5KSk7CiAgICAgIHRoaXMubGlzdCA9IGRhdGEuZGF0YTsKCiAgICAgIHRoaXMudG90YWwgPSBkYXRhLnRvdGFsOwogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICB9CiAgfQoKICBwcml2YXRlIGhhbmRsZUZpbHRlcigpIHsKICAgIHRoaXMubGlzdFF1ZXJ5LnBhZ2UgPSAxOwogICAgdGhpcy5nZXRMaXN0KCk7CiAgfQoKICBwcml2YXRlIHNvcnRDaGFuZ2UoZGF0YTogYW55KSB7CiAgICBjb25zdCB7IHByb3AsIG9yZGVyIH0gPSBkYXRhOwogICAgaWYgKHByb3ApIHsKICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9CiAgICAgICAgYCR7cHJvcH0sYCArIChvcmRlciA9PT0gImFzY2VuZGluZyIgPyAiQVNDIiA6ICJERVNDIik7CiAgICAgIHRoaXMuaGFuZGxlRmlsdGVyKCk7CiAgICB9CiAgfQoKICBwcml2YXRlIGdldFNvcnRDbGFzcyhrZXk6IHN0cmluZykgewogICAgY29uc3Qgc29ydCA9IHRoaXMubGlzdFF1ZXJ5LnNvcnQ7CiAgICByZXR1cm4gc29ydCA9PT0gYCR7a2V5fSxBU0NgCiAgICAgID8gImFzY2VuZGluZyIKICAgICAgOiBzb3J0ID09PSBgJHtrZXl9LERFU0NgCiAgICAgID8gImRlc2NlbmRpbmciCiAgICAgIDogIiI7CiAgfQoKICBwcml2YXRlIGhhbmRsZURvd25sb2FkKCkgewogICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSB0cnVlOwogICAgY29uc3QgdEhlYWRlciA9IFsKICAgICAgIklEIiwKICAgICAgIkZ1bGwgTmFtZSIsCiAgICAgICJFbWFpbCIsCiAgICAgICJDb250YWN0IE51bWJlciIsCiAgICAgICJTdGF0dXMiLAogICAgICAidGltZXN0YW1wIiwKICAgIF07CiAgICBjb25zdCBmaWx0ZXJWYWwgPSBbCiAgICAgICJpZCIsCiAgICAgICJmdWxsTmFtZSIsCiAgICAgICJlbWFpbCIsCiAgICAgICJjb250YWN0TnVtYmVyIiwKICAgICAgImVuYWJsZWQiLAogICAgICAiY3JlYXRlZFRpbWVzdGFtcCIsCiAgICBdOwogICAgY29uc3QgZGF0YSA9IGZvcm1hdEpzb24oZmlsdGVyVmFsLCB0aGlzLmxpc3QpOwogICAgZXhwb3J0SnNvbjJFeGNlbCgKICAgICAgdEhlYWRlciwKICAgICAgZGF0YSwKICAgICAgdGhpcy4kdGMoInJvdXRlLkJhbm5lck1hbmFnZW1lbnQuQmFubmVycy50aXRsZSIpCiAgICApOwogICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICB9Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAkfile":"list.vue","sourceRoot":"src/views/banner","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-select\n        v-model=\"listQuery.enabled\"\n        :placeholder=\"$t('admin.enabled')\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 130px\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in enableTypeOptions\"\n          :key=\"item.key\"\n          :label=\"item.value\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <el-select\n        v-model=\"listQuery.sort\"\n        style=\"width: 140px\"\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in sortOptions\"\n          :key=\"item.key\"\n          :label=\"item.label\"\n          :value=\"item.key\"\n        />\n      </el-select>\n\n      <router-link :to=\"'/banner/add'\" class=\"margin-horizontal\">\n        <el-button\n          v-waves\n          class=\"filter-item\"\n          type=\"primary\"\n           style=\"background:#59b6e3;border:1px solid #59b6e3\"\n          icon=\"el-icon-plus\"\n        >\n          {{ $t(\"global.form.add\") }}\n        </el-button>\n      </router-link>\n      <el-checkbox\n        v-model=\"showCreatedDate\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"tableKey = tableKey + 1\"\n      >\n        {{ $t(\"table.createdDate\") }}\n      </el-checkbox>\n\n      <el-checkbox\n        v-model=\"showSortingOption\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"onPriortyChange()\"\n      >\n        Change Order\n      </el-checkbox>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      row-key=\"id\"\n      highlight-current-row\n      style=\"width: 100%\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        sortable=\"custom\"\n        width=\"80\"\n        align=\"center\"\n        :label=\"$t('table.id')\"\n        prop=\"id\"\n        :class-name=\"getSortClass('id')\"\n      />\n      <el-table-column width=\"80\" align=\"center\" label=\"Status\">\n        <template slot-scope=\"scope\">\n          <enabled\n            :key=\"scope.row.id\"\n            v-model=\"scope.row.enabled\"\n            :url=\"'/banners/' + scope.row.id\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column width=\"400px\" align=\"center\" prop=\"image\" label=\"Image\">\n        <template slot-scope=\"scope\">\n          <img :src=\"scope.row.image\" :width=\"360\" :height=\"150\" />\n        </template>\n      </el-table-column>\n      <el-table-column width=\"200px\" align=\"center\" prop=\"name\" label=\"Alternate Name\">\n        <template slot-scope=\"scope\">\n          <div>{{ scope.row.name }}</div>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column width=\"180px\" align=\"center\" label=\"order\" prop=\"order\" /> -->\n      <el-table-column\n        v-if=\"showCreatedDate\"\n        :label=\"$t('table.createdDate')\"\n        width=\"110px\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <span style=\"color: red\">{{\n            scope.row.createdTimestamp | moment(\"from\")\n          }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('table.actions')\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <router-link :to=\"'/banner/edit/' + scope.row.id\">\n            <el-button\n              v-waves\n              type=\"warning\"\n              size=\"small\"\n              icon=\"el-icon-edit\"\n            />\n          </router-link>\n          <el-button\n            v-if=\"myRole == 'superadmin'\"\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            style=\"margin-left: 10px\"\n            @click=\"handleDelete(scope.row)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0 && !this.showSortingOption\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { IBannerData } from \"@/api/types\";\nimport Pagination from \"@/components/Pagination/index.vue\";\nimport { exportJson2Excel } from \"@/utils/excel\";\nimport { formatJson, getQuery } from \"@/utils\";\nimport Enabled from \"@/components/Enabled/index.vue\";\nimport { deleteBanner, getBanners, updateOrder } from \"@/api/banner\";\nimport { AdminModule } from \"@/store/modules/admin\";\nimport Sortable from \"sortablejs\";\n\n@Component({\n  name: \"BannerList\",\n  components: {\n    Pagination,\n    Enabled,\n  },\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IBannerData[] = [];\n  private mallsList: any = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  private myRole = AdminModule.roles;\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  newList: any = [];\n  oldList: any = [];\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: \"order,ASC\",\n    filter: {\n      enabled: \"eq\",\n    },\n  };\n\n  private showCreatedDate: boolean = false;\n  private sortOptions = [\n    { label: \"Ascending\", key: \"order,ASC\" },\n    { label: \"Descending\", key: \"order,DESC\" },\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: \"Enable\" },\n    { key: false, value: \"Disabled\" },\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList();\n  }\n\n  async onPriortyChange() {\n    if (this.showSortingOption) {\n      this.fetchAllRecored(true);\n    } else {\n      this.renderComponent = false;\n      this.sortable.options.disabled = true;\n      this.$nextTick().then(() => {\n        this.renderComponent = true;\n      });\n    }\n  }\n\n  async fetchAllRecored(checkForFirstTime: boolean) {\n    try {\n      this.listLoading = true;\n      const data: any = await getBanners({\n        page: 1,\n        limit: 100000,\n        sort: \"order,ASC\",\n      });\n      this.list = data.data;\n      this.total = data.length;\n      this.listLoading = false;\n      if (checkForFirstTime) {\n        this.oldList = this.list.map((v) => v.id);\n        this.newList = this.oldList.slice();\n        this.$nextTick(this.setSort);\n      }\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  setSort() {\n    const temp: any = this.$refs.dragTable;\n    const el = temp.$el.querySelectorAll(\n      \".el-table__body-wrapper > table > tbody\"\n    )[0];\n    this.sortable = Sortable.create(el, {\n      ghostClass: \"sortable-ghost\",\n      setData: function (dataTransfer) {\n        dataTransfer.setData(\"Text\", \"\");\n      },\n      onEnd: (evt) => {\n        const targetRow = this.list.splice(Number(evt.oldIndex), 1)[0];\n        this.list.splice(Number(evt.newIndex), 0, targetRow);\n        const tempIndex = this.newList.splice(evt.oldIndex, 1)[0];\n        this.newList.splice(evt.newIndex, 0, tempIndex);\n        console.log(this.newList);\n        this.updateOrder();\n      },\n    });\n  }\n\n  private async updateOrder() {\n    try {\n      const updateCheck = await updateOrder(this.newList);\n      this.fetchAllRecored(false);\n    } catch (error) {}\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        \"Do you want to delete this banner?\",\n        this.$tc(\"table.delete\"),\n        {\n          confirmButtonText: this.$tc(\"table.delete\"),\n          confirmButtonClass: \"el-button--danger\",\n          cancelButtonText: \"Cancel\",\n          type: \"error\",\n        }\n      )\n        .then(() => {\n          deleteBanner(data.id).then((deleted) => {\n            this.getList();\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: this.$tc(\"table.deleteCanceled\"),\n          });\n        });\n    }\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true;\n      const data: any = await getBanners(getQuery(this.listQuery));\n      this.list = data.data;\n\n      this.total = data.total;\n      this.listLoading = false;\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1;\n    this.getList();\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data;\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === \"ascending\" ? \"ASC\" : \"DESC\");\n      this.handleFilter();\n    }\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort;\n    return sort === `${key},ASC`\n      ? \"ascending\"\n      : sort === `${key},DESC`\n      ? \"descending\"\n      : \"\";\n  }\n\n  private handleDownload() {\n    this.downloadLoading = true;\n    const tHeader = [\n      \"ID\",\n      \"Full Name\",\n      \"Email\",\n      \"Contact Number\",\n      \"Status\",\n      \"timestamp\",\n    ];\n    const filterVal = [\n      \"id\",\n      \"fullName\",\n      \"email\",\n      \"contactNumber\",\n      \"enabled\",\n      \"createdTimestamp\",\n    ];\n    const data = formatJson(filterVal, this.list);\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc(\"route.BannerManagement.Banners.title\")\n    );\n    this.downloadLoading = false;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-input {\n  padding-right: 100px;\n}\n\n.cancel-btn {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n</style>\n"]}]}