{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Enabled/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Enabled/index.vue","mtime":1668754947358},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsgdG9nZ2xlRW5hYmxlIH0gZnJvbSAnQC9hcGkvY29tbW9uJwoKQENvbXBvbmVudCh7CiAgbmFtZTogJ0VuYWJsZWQnCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgVnVlIHsKICBjZW50ZXJEaWFsb2dWaXNpYmxlOiBib29sZWFuID0gZmFsc2U7CiAgQFByb3AoeyBkZWZhdWx0OiBmYWxzZSB9KSBwcml2YXRlIHZhbHVlITogYm9vbGVhbjsKICBAUHJvcCh7IGRlZmF1bHQ6ICcnIH0pIHByaXZhdGUgdmlkZW8hOiBzdHJpbmc7CiAgQFByb3AoeyBkZWZhdWx0OiAnJyB9KSBwcml2YXRlIHVybCE6IHN0cmluZzsKCiAgcHJpdmF0ZSB0eXBlOiBzdHJpbmcgPSAnc3VjY2Vzcyc7CiAgcHJpdmF0ZSB0b2dnbGVWYWx1ZTpCb29sZWFuID0gdHJ1ZTsKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuc2V0VHlwZSh0aGlzLnZhbHVlKQogIH0KCiAgcHJpdmF0ZSBhc3luYyB0b2dnbGVFbmFibGUodmFsdWU6IGJvb2xlYW4pIHsKICAgIHRoaXMuY2VudGVyRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICBjb25zdCBuZXdWYWx1ZSA9ICF0aGlzLnZhbHVlCiAgICB0cnkgewogICAgICBjb25zdCBkYXRhOiBhbnkgPSBhd2FpdCB0b2dnbGVFbmFibGUodGhpcy51cmwsIHsgZW5hYmxlZDogbmV3VmFsdWUgfSkKICAgICAgaWYgKGRhdGEpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGRhdGEuZW5hYmxlZCkKICAgICAgICB0aGlzLnNldFR5cGUoZGF0YS5lbmFibGVkKQogICAgICB9CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICB0aGlzLiRtZXNzYWdlKGVycm9yLm1lc3NhZ2UpCiAgICB9CiAgfQoKICBwcml2YXRlIGhhbmRsZUNsaWNrZWRObygpIHsKICAgIHRoaXMudG9nZ2xlVmFsdWUgPSAhdGhpcy50b2dnbGVWYWx1ZQogICAgdGhpcy5jZW50ZXJEaWFsb2dWaXNpYmxlID0gZmFsc2UKICB9CgogIHByaXZhdGUgc2V0VHlwZShuZXdWYWx1ZTogQm9vbGVhbik6IHZvaWQgewogICAgdGhpcy50b2dnbGVWYWx1ZSA9IG5ld1ZhbHVlCiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Enabled","sourcesContent":["<template>\n  <span>\n    <el-switch\n      v-model=\"toggleValue\"\n      @change=\"centerDialogVisible=true\"\n    />\n    <!-- <el-switch class=\"sc-enabled-button-style\" /> -->\n    <el-dialog\n      title=\"Enable/Disable\"\n      :visible.sync=\"centerDialogVisible\"\n      width=\"30%\"\n      :before-close=\"handleClickedNo\"\n      center\n    >\n      <center>\n        <span>Are you sure you want to {{ value ? \"Disable\" : \"Enable\" }}?</span>\n      </center>\n      <span\n        slot=\"footer\"\n        class=\"dialog-footer\"\n      >\n        <el-button\n          type=\"primary\"\n          @click=\"toggleEnable\"\n        >Yes</el-button>\n        <el-button @click=\"handleClickedNo\">No </el-button>\n      </span>\n    </el-dialog>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop } from 'vue-property-decorator'\nimport { toggleEnable } from '@/api/common'\n\n@Component({\n  name: 'Enabled'\n})\nexport default class extends Vue {\n  centerDialogVisible: boolean = false;\n  @Prop({ default: false }) private value!: boolean;\n  @Prop({ default: '' }) private video!: string;\n  @Prop({ default: '' }) private url!: string;\n\n  private type: string = 'success';\n  private toggleValue:Boolean = true;\n\n  mounted() {\n    this.setType(this.value)\n  }\n\n  private async toggleEnable(value: boolean) {\n    this.centerDialogVisible = false\n    const newValue = !this.value\n    try {\n      const data: any = await toggleEnable(this.url, { enabled: newValue })\n      if (data) {\n        this.$emit('input', data.enabled)\n        this.setType(data.enabled)\n      }\n    } catch (error) {\n      this.$message(error.message)\n    }\n  }\n\n  private handleClickedNo() {\n    this.toggleValue = !this.toggleValue\n    this.centerDialogVisible = false\n  }\n\n  private setType(newValue: Boolean): void {\n    this.toggleValue = newValue\n  }\n}\n</script>\n"]}]}