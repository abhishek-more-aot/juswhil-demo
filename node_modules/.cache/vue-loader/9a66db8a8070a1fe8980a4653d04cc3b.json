{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Breadcrumb/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/components/Breadcrumb/index.vue","mtime":1672064999263},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/babel-loader/lib/index.js","mtime":1668596430903},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/ts-loader/index.js","mtime":1650280622125},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAicGF0aC10by1yZWdleHAiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSwgV2F0Y2ggfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKaW1wb3J0IHsgUm91dGVSZWNvcmQsIFJvdXRlIH0gZnJvbSAidnVlLXJvdXRlciI7CgpAQ29tcG9uZW50KHsKICBuYW1lOiAiQnJlYWRjcnVtYiIsCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIGJyZWFkY3J1bWJzOiBSb3V0ZVJlY29yZFtdID0gW107CgogIEBXYXRjaCgiJHJvdXRlIikKICBwcml2YXRlIG9uUm91dGVDaGFuZ2Uocm91dGU6IFJvdXRlKSB7CiAgICAvLyBpZiB5b3UgZ28gdG8gdGhlIHJlZGlyZWN0IHBhZ2UsIGRvIG5vdCB1cGRhdGUgdGhlIGJyZWFkY3J1bWJzCiAgICBpZiAocm91dGUucGF0aC5zdGFydHNXaXRoKCIvcmVkaXJlY3QvIikpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhpcy5nZXRCcmVhZGNydW1iKCk7CiAgfQoKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRCcmVhZGNydW1iKCk7CiAgfQoKICBwcml2YXRlIGdldEJyZWFkY3J1bWIoKSB7CiAgICBsZXQgbWF0Y2hlZCA9IHRoaXMuJHJvdXRlLm1hdGNoZWQuZmlsdGVyKAogICAgICAoaXRlbSkgPT4gaXRlbS5tZXRhICYmIGl0ZW0ubWV0YS50aXRsZQogICAgKTsKICAgIHZhciByZWc6IGFueSA9ICIiOwogICAgY29uc3QgZmlyc3QgPSBtYXRjaGVkWzBdOwogICAgaWYgKCF0aGlzLmlzRGFzaGJvYXJkKGZpcnN0KSkgewogICAgICBtYXRjaGVkID0gWwogICAgICAgIHsKICAgICAgICAgIHBhdGg6ICIvZGFzaGJvYXJkIiwKICAgICAgICAgIG1ldGE6IHsgdGl0bGU6ICJkYXNoYm9hcmQiIH0sCiAgICAgICAgICByZWdleDogcmVnLAogICAgICAgICAgY29tcG9uZW50czogcmVnLAogICAgICAgICAgaW5zdGFuY2VzOiByZWcsCiAgICAgICAgICBwcm9wczogIiIsCiAgICAgICAgfSBhcyBSb3V0ZVJlY29yZCwKICAgICAgXS5jb25jYXQobWF0Y2hlZCk7CiAgICB9CiAgICB0aGlzLmJyZWFkY3J1bWJzID0gbWF0Y2hlZC5maWx0ZXIoKGl0ZW0pID0+IHsKICAgICAgcmV0dXJuIGl0ZW0ubWV0YSAmJiBpdGVtLm1ldGEudGl0bGUgJiYgaXRlbS5tZXRhLmJyZWFkY3J1bWIgIT09IGZhbHNlOwogICAgfSk7CiAgfQogIHByaXZhdGUgaXNEYXNoYm9hcmQocm91dGU6IFJvdXRlUmVjb3JkKSB7CiAgICBjb25zdCBuYW1lID0gcm91dGUgJiYgcm91dGUubmFtZTsKICAgIGlmICghbmFtZSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICByZXR1cm4gbmFtZS50cmltKCkudG9Mb2NhbGVMb3dlckNhc2UoKSA9PT0gIkRhc2hib2FyZCIudG9Mb2NhbGVMb3dlckNhc2UoKTsKICB9CgogIHByaXZhdGUgcGF0aENvbXBpbGUocGF0aDogc3RyaW5nKSB7CiAgICAvLyBUbyBzb2x2ZSB0aGlzIHByb2JsZW0gaHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vaXNzdWVzLzU2MQogICAgY29uc3QgeyBwYXJhbXMgfSA9IHRoaXMuJHJvdXRlOwogICAgY29uc3QgdG9QYXRoID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7CiAgICByZXR1cm4gdG9QYXRoKHBhcmFtcyk7CiAgfQoKICBwcml2YXRlIGhhbmRsZUxpbmsoaXRlbTogYW55KSB7CiAgICBjb25zdCB7IHJlZGlyZWN0LCBwYXRoIH0gPSBpdGVtOwogICAgaWYgKHJlZGlyZWN0KSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHJlZGlyZWN0KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhpcy4kcm91dGVyLnB1c2godGhpcy5wYXRoQ29tcGlsZShwYXRoKSk7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n    <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item v-for=\"(item, index) in breadcrumbs\" :key=\"item.path\">\n        <span\n          v-if=\"\n            item.redirect === 'noredirect' || index === breadcrumbs.length - 1\n          \"\n          class=\"no-redirect\"\n          >{{ $t(\"route.\" + item.meta.title) }}</span\n        >\n        <a v-else @click.prevent=\"handleLink(item)\">{{\n          $t(\"route.\" + item.meta.title)\n        }}</a>\n      </el-breadcrumb-item>\n    </transition-group>\n  </el-breadcrumb>\n</template>\n\n<script lang=\"ts\">\nimport pathToRegexp from \"path-to-regexp\";\nimport { Component, Vue, Watch } from \"vue-property-decorator\";\nimport { RouteRecord, Route } from \"vue-router\";\n\n@Component({\n  name: \"Breadcrumb\",\n})\nexport default class extends Vue {\n  private breadcrumbs: RouteRecord[] = [];\n\n  @Watch(\"$route\")\n  private onRouteChange(route: Route) {\n    // if you go to the redirect page, do not update the breadcrumbs\n    if (route.path.startsWith(\"/redirect/\")) {\n      return;\n    }\n    this.getBreadcrumb();\n  }\n\n  created() {\n    this.getBreadcrumb();\n  }\n\n  private getBreadcrumb() {\n    let matched = this.$route.matched.filter(\n      (item) => item.meta && item.meta.title\n    );\n    var reg: any = \"\";\n    const first = matched[0];\n    if (!this.isDashboard(first)) {\n      matched = [\n        {\n          path: \"/dashboard\",\n          meta: { title: \"dashboard\" },\n          regex: reg,\n          components: reg,\n          instances: reg,\n          props: \"\",\n        } as RouteRecord,\n      ].concat(matched);\n    }\n    this.breadcrumbs = matched.filter((item) => {\n      return item.meta && item.meta.title && item.meta.breadcrumb !== false;\n    });\n  }\n  private isDashboard(route: RouteRecord) {\n    const name = route && route.name;\n    if (!name) {\n      return false;\n    }\n    return name.trim().toLocaleLowerCase() === \"Dashboard\".toLocaleLowerCase();\n  }\n\n  private pathCompile(path: string) {\n    // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n    const { params } = this.$route;\n    const toPath = pathToRegexp.compile(path);\n    return toPath(params);\n  }\n\n  private handleLink(item: any) {\n    const { redirect, path } = item;\n    if (redirect) {\n      this.$router.push(redirect);\n      return;\n    }\n    this.$router.push(this.pathCompile(path));\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-breadcrumb__inner,\n.el-breadcrumb__inner a {\n  font-weight: 400 !important;\n  color: #000;\n  background: #fff;\n  padding: 2px;\n}\n\n.app-breadcrumb.el-breadcrumb {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 50px;\n  margin-left: 8px;\n\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n</style>\n"]}]}