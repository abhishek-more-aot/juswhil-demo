{"remainingRequest":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/warranty/list.vue?vue&type=style&index=0&id=3cf6f5a7&lang=scss&scoped=true&","dependencies":[{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/src/views/warranty/list.vue","mtime":1673593955124},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/css-loader/dist/cjs.js","mtime":1653481241427},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1668596436320},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/postcss-loader/src/index.js","mtime":1655274298318},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/sass-loader/dist/cjs.js","mtime":1655274300161},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/style-resources-loader/lib/index.js","mtime":1655274300173},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/cache-loader/dist/cjs.js","mtime":1655274288430},{"path":"/home/algoocean/Desktop/AOT-Project/myvarni-admin/node_modules/vue-loader/lib/index.js","mtime":1668596436320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lZGl0LWlucHV0IHsKICBwYWRkaW5nLXJpZ2h0OiAxMDBweDsKfQoKLmNhbmNlbC1idG4gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogMTVweDsKICB0b3A6IDEwcHg7Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AA2dA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/warranty","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.firstName\"\n        placeholder=\"First Name\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 200px\"\n        @input=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.lastName\"\n        placeholder=\"Last Name\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 200px\"\n        @input=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.contactNumber\"\n        placeholder=\"Contact Number\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 200px\"\n        @input=\"handleFilter\"\n      />\n      <el-input\n        v-model=\"listQuery.email\"\n        placeholder=\"E-mail\"\n        clearable\n        class=\"filter-item\"\n        style=\"width: 200px\"\n        @input=\"handleFilter\"\n      />\n      <!-- <el-date-picker v-model=\"listQuery.purchasedDate\"  format='yyyy-MM-dd' placeholder=\"Purchased Date\" @input=\"handleFilter\" /> -->\n      <el-select\n        v-model=\"listQuery.enabled\"\n        :placeholder=\"$t('admin.enabled')\"\n        clearable\n       \n        class=\"filter-item\"\n        style=\"width: 130px\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in enableTypeOptions\"\n          :key=\"item.key\"\n          :label=\"item.value\"\n          :value=\"item.key\"\n        />\n      </el-select>\n      <el-select\n        v-model=\"listQuery.sort\"\n        style=\"width: 140px\"\n        class=\"filter-item\"\n        @change=\"handleFilter\"\n      >\n        <el-option\n          v-for=\"item in sortOptions\"\n          :key=\"item.key\"\n          :label=\"item.label\"\n          :value=\"item.key\"\n        />\n      </el-select>\n\n      <el-checkbox\n        v-model=\"showCreatedDate\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"tableKey = tableKey + 1\"\n      >\n        {{ $t(\"table.createdDate\") }}\n      </el-checkbox>\n\n      <!-- <el-checkbox\n        v-model=\"showSortingOption\"\n        class=\"filter-item\"\n        style=\"margin-left: 15px\"\n        @change=\"onPriortyChange()\"\n      >\n        Change Order\n      </el-checkbox> -->\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      ref=\"dragTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      row-key=\"id\"\n      highlight-current-row\n      style=\"width: 100%\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column\n        sortable=\"custom\"\n        width=\"80\"\n        align=\"center\"\n        :label=\"$t('table.id')\"\n        prop=\"id\"\n        :class-name=\"getSortClass('id')\"\n      />\n      <el-table-column width=\"80\" align=\"center\" label=\"Status\">\n        <template slot-scope=\"scope\">\n          <enabled\n            :key=\"scope.row.id\"\n            v-model=\"scope.row.enabled\"\n            :url=\"'/warranty/' + scope.row.id\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column width=\"400\" align=\"center\" label=\"Details\">\n        <template slot-scope=\"scope\">\n          <el-row>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>First Name :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.firstName }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Last Name :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.lastName }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Contact Number :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.contactNumber }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Email :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.email }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Purchased From :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.purchasedFrom }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Purchased Date :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.purchasedDate | moment(\"YYYY-MM-DD\") }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Comments :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.comments }}</span>\n            </el-col>\n          </el-row>\n        </template>\n      </el-table-column>\n      <el-table-column width=\"400\" align=\"center\" label=\"Product Details\">\n        <template slot-scope=\"scope\">\n          <el-row>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Category Name :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.categories.name }}</span>\n            </el-col>\n\n            <el-col span=\"12\" style=\"text-align: left\">\n              <b>Product Name :</b>\n            </el-col>\n            <el-col span=\"12\" style=\"text-align: left\">\n              <span>{{ scope.row.products.name }}</span>\n            </el-col>\n          </el-row>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Source\" width=\"200px\">\n        <template slot-scope=\"scope\">\n          <a :href=\"scope.row.invoice\" target=\"_blank\" style=\"color: blue\">\n            <el-tag>\n              <span style=\"color: blue\">\n                {{\n                  scope.row.invoice.slice(\n                    scope.row.invoice.length - 16,\n                    scope.row.invoice.length\n                  )\n                }}\n              </span>\n            </el-tag>\n          </a>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column\n        width=\"400px\"\n        align=\"center\"\n        prop=\"image\"\n        label=\"Image\"\n      >\n        <template slot-scope=\"scope\">\n          <img\n            :src=\"scope.row.image\"\n            :width=\"360\"\n            :height=\"150\"\n          >\n        </template>\n      </el-table-column> -->\n      <!-- <el-table-column width=\"180px\" align=\"center\" label=\"order\" prop=\"order\" /> -->\n      <el-table-column\n        v-if=\"showCreatedDate\"\n        :label=\"$t('table.createdDate')\"\n        width=\"110px\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <span style=\"color: red\">{{\n            scope.row.createdTimestamp | moment(\"from\")\n          }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" :label=\"$t('table.actions')\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <!-- <router-link :to=\"'/warranty/edit/' + scope.row.id\">\n            <el-button\n              v-waves\n              type=\"warning\"\n              size=\"small\"\n              icon=\"el-icon-edit\"\n            />\n          </router-link> -->\n          <el-button\n            v-if=\"myRole == 'superadmin'\"\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            style=\"margin-left: 10px\"\n            @click=\"handleDelete(scope.row)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total > 0 && !this.showSortingOption\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { IWarrantyData } from \"@/api/types\";\nimport Pagination from \"@/components/Pagination/index.vue\";\nimport { exportJson2Excel } from \"@/utils/excel\";\nimport { formatJson, getQuery } from \"@/utils\";\nimport Enabled from \"@/components/Enabled/index.vue\";\nimport { deleteWarranty, getWarranty, updateOrder } from \"@/api/warranty\";\nimport { AdminModule } from \"@/store/modules/admin\";\nimport Sortable from \"sortablejs\";\n\n@Component({\n  name: \"WarrantyList\",\n  components: {\n    Pagination,\n    Enabled,\n  },\n})\nexport default class extends Vue {\n  private tableKey = 0;\n  private total = 0;\n  private list: IWarrantyData[] = [];\n  private mallsList: any = [];\n  private listLoading = true;\n  private downloadLoading = false;\n  private myRole = AdminModule.roles;\n  private showSortingOption: boolean = false;\n  private renderComponent: boolean = true;\n  newList: any = [];\n  oldList: any = [];\n  private listQuery = {\n    page: 1,\n    limit: 10,\n    sort: \"id,DESC\",\n    filter: {\n      enabled: \"eq\",\n      firstName:'$contL',\n      lastName:'$contL',\n      email:'$contL',\n      contactNumber:'$contL',\n      purchasedDate:'eq'\n    },\n  };\n\n  private showCreatedDate: boolean = false;\n  private sortOptions = [\n    { label: \"Ascending\", key: \"id,ASC\" },\n    { label: \"Descending\", key: \"id,DESC\" },\n  ];\n\n  private enableTypeOptions = [\n    { key: true, value: \"Enable\" },\n    { key: false, value: \"Disabled\" },\n  ];\n\n  sortable: any;\n\n  created() {\n    this.getList();\n  }\n\n  async onPriortyChange() {\n    if (this.showSortingOption) {\n      this.fetchAllRecored(true);\n    } else {\n      this.renderComponent = false;\n      this.sortable.options.disabled = true;\n      this.$nextTick().then(() => {\n        this.renderComponent = true;\n      });\n    }\n  }\n\n  async fetchAllRecored(checkForFirstTime: boolean) {\n    try {\n      this.listLoading = true;\n      const data: any = await getWarranty({\n        page: 1,\n        limit: 100000,\n        sort: \"order,ASC\",\n      });\n      this.list = data.data;\n      this.total = data.length;\n      this.listLoading = false;\n      if (checkForFirstTime) {\n        this.oldList = this.list.map((v) => v.id);\n        this.newList = this.oldList.slice();\n        this.$nextTick(this.setSort);\n      }\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  setSort() {\n    const temp: any = this.$refs.dragTable;\n    const el = temp.$el.querySelectorAll(\n      \".el-table__body-wrapper > table > tbody\"\n    )[0];\n    this.sortable = Sortable.create(el, {\n      ghostClass: \"sortable-ghost\",\n      setData: function (dataTransfer) {\n        dataTransfer.setData(\"Text\", \"\");\n      },\n      onEnd: (evt) => {\n        const targetRow = this.list.splice(Number(evt.oldIndex), 1)[0];\n        this.list.splice(Number(evt.newIndex), 0, targetRow);\n        const tempIndex = this.newList.splice(evt.oldIndex, 1)[0];\n        this.newList.splice(evt.newIndex, 0, tempIndex);\n        console.log(this.newList);\n        this.updateOrder();\n      },\n    });\n  }\n\n  private async updateOrder() {\n    try {\n      const updateCheck = await updateOrder(this.newList);\n      this.fetchAllRecored(false);\n    } catch (error) {}\n  }\n\n  private handleDelete(data: any) {\n    if (data) {\n      this.$confirm(\n        \"Do you want to delete this warranty?\",\n        this.$tc(\"table.delete\"),\n        {\n          confirmButtonText: this.$tc(\"table.delete\"),\n          confirmButtonClass: \"el-button--danger\",\n          cancelButtonText: \"Cancel\",\n          type: \"error\",\n        }\n      )\n        .then(() => {\n          deleteWarranty(data.id).then((deleted) => {\n            this.getList();\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: this.$tc(\"table.deleteCanceled\"),\n          });\n        });\n    }\n  }\n\n  private async getList() {\n    try {\n      this.listLoading = true;\n      const data: any = await getWarranty(getQuery(this.listQuery));\n      this.list = data.data;\n\n      this.total = data.total;\n      this.listLoading = false;\n    } catch (error) {\n      this.listLoading = false;\n    }\n  }\n\n  private handleFilter() {\n    this.listQuery.page = 1;\n    this.getList();\n  }\n\n  private sortChange(data: any) {\n    const { prop, order } = data;\n    if (prop) {\n      this.listQuery.sort =\n        `${prop},` + (order === \"ascending\" ? \"ASC\" : \"DESC\");\n      this.handleFilter();\n    }\n  }\n\n  private getSortClass(key: string) {\n    const sort = this.listQuery.sort;\n    return sort === `${key},ASC`\n      ? \"ascending\"\n      : sort === `${key},DESC`\n      ? \"descending\"\n      : \"\";\n  }\n\n  private handleDownload() {\n    this.downloadLoading = true;\n    const tHeader = [\n      \"ID\",\n      \"Full Name\",\n      \"Email\",\n      \"Contact Number\",\n      \"Status\",\n      \"timestamp\",\n    ];\n    const filterVal = [\n      \"id\",\n      \"fullName\",\n      \"email\",\n      \"contactNumber\",\n      \"enabled\",\n      \"createdTimestamp\",\n    ];\n    const data = formatJson(filterVal, this.list);\n    exportJson2Excel(\n      tHeader,\n      data,\n      this.$tc(\"route.WarrantyManagement.Warranty.title\")\n    );\n    this.downloadLoading = false;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.edit-input {\n  padding-right: 100px;\n}\n\n.cancel-btn {\n  position: absolute;\n  right: 15px;\n  top: 10px;\n}\n</style>\n"]}]}